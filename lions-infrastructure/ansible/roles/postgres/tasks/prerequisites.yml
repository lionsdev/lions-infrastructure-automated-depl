---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - PR√âREQUIS POSTGRESQL
# =========================================================================
# Description: V√©rification et validation des pr√©requis pour PostgreSQL
# Version: 5.0.0
# Maintainer: DevOps Team LIONS
# Documentation: https://docs.lions.dev/infrastructure/services/postgresql
# =========================================================================
# D√©pendances:
#   - Kubernetes cluster op√©rationnel
#   - Variables d'environnement LIONS configur√©es
#   - Permissions RBAC appropri√©es
# =========================================================================

- name: "PostgreSQL Prerequisites | Initialisation des variables de validation"
  set_fact:
    lions_postgres_validation_errors: []
    lions_postgres_validation_warnings: []
    lions_postgres_prerequisites_start_time: "{{ ansible_date_time.epoch }}"
  tags:
    - postgres
    - prerequisites
    - validation

- name: "PostgreSQL Prerequisites | Affichage des informations de d√©ploiement"
  debug:
    msg:
      - "üêò === VALIDATION DES PR√âREQUIS POSTGRESQL ==="
      - "üìä Environnement: {{ lions_environment | default('undefined') }}"
      - "üè∑Ô∏è  Namespace cible: {{ lions_postgres_namespace | default('database') }}"
      - "üì¶ Version PostgreSQL: {{ lions_postgres_version | default('15.4') }}"
      - "üíæ Classe de stockage: {{ lions_storage_class_default | default('local-path') }}"
      - "üìè Taille de stockage: {{ lions_postgres_storage_size | default('20Gi') }}"
  tags:
    - postgres
    - prerequisites
    - info

# =========================================================================
# VALIDATION DE LA CONFIGURATION KUBERNETES
# =========================================================================

- name: "PostgreSQL Prerequisites | V√©rification de la connectivit√© Kubernetes"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
  register: lions_postgres_k8s_nodes
  failed_when: false
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - kubernetes

- name: "PostgreSQL Prerequisites | Validation de la connectivit√© cluster"
  set_fact:
    lions_postgres_validation_errors: "{{ lions_postgres_validation_errors + ['Impossible de se connecter au cluster Kubernetes'] }}"
  when: lions_postgres_k8s_nodes.failed | default(false)
  tags:
    - postgres
    - prerequisites
    - kubernetes

- name: "PostgreSQL Prerequisites | V√©rification des ressources cluster"
  debug:
    msg: "‚úÖ Cluster Kubernetes accessible avec {{ lions_postgres_k8s_nodes.resources | length }} n≈ìud(s)"
  when: not (lions_postgres_k8s_nodes.failed | default(false))
  tags:
    - postgres
    - prerequisites
    - kubernetes

# =========================================================================
# VALIDATION ET CR√âATION DU NAMESPACE
# =========================================================================

- name: "PostgreSQL Prerequisites | V√©rification de l'existence du namespace"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ lions_postgres_namespace | default('database') }}"
  register: lions_postgres_namespace_info
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - namespace

- name: "PostgreSQL Prerequisites | Cr√©ation du namespace avec m√©tadonn√©es"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ lions_postgres_namespace | default('database') }}"
        labels:
          app.kubernetes.io/name: postgresql
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: lions-infrastructure
          app.kubernetes.io/managed-by: ansible
          lions.dev/environment: "{{ lions_environment | default('development') }}"
          lions.dev/service-type: database
          lions.dev/backup-enabled: "{{ lions_postgres_backup_enabled | default('true') | string }}"
        annotations:
          lions.dev/created-by: "ansible-{{ ansible_user | default('system') }}"
          lions.dev/creation-date: "{{ ansible_date_time.iso8601 }}"
          lions.dev/config-version: "{{ lions_config_version | default('5.0.0') }}"
          kubectl.kubernetes.io/last-applied-configuration: |
            {"apiVersion":"v1","kind":"Namespace","metadata":{"name":"{{ lions_postgres_namespace | default('database') }}"}}
  when: lions_postgres_namespace_info.resources | length == 0
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - namespace

# =========================================================================
# VALIDATION DES PERMISSIONS RBAC
# =========================================================================

- name: "PostgreSQL Prerequisites | Test des permissions RBAC sur le namespace"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "lions-postgres-rbac-test-{{ ansible_date_time.epoch }}"
        namespace: "{{ lions_postgres_namespace | default('database') }}"
        labels:
          lions.dev/test-type: rbac-validation
          lions.dev/temporary: "true"
      data:
        test-purpose: "RBAC permissions validation for PostgreSQL deployment"
        test-timestamp: "{{ ansible_date_time.iso8601 }}"
        test-environment: "{{ lions_environment | default('development') }}"
  register: lions_postgres_rbac_test
  failed_when: false
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - rbac

- name: "PostgreSQL Prerequisites | Nettoyage du test RBAC"
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: ConfigMap
    name: "lions-postgres-rbac-test-{{ ansible_date_time.epoch }}"
    namespace: "{{ lions_postgres_namespace | default('database') }}"
  when: not (lions_postgres_rbac_test.failed | default(false))
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - rbac

- name: "PostgreSQL Prerequisites | Validation des permissions RBAC"
  set_fact:
    lions_postgres_validation_errors: "{{ lions_postgres_validation_errors + ['Permissions RBAC insuffisantes sur le namespace ' + (lions_postgres_namespace | default('database'))] }}"
  when: lions_postgres_rbac_test.failed | default(false)
  tags:
    - postgres
    - prerequisites
    - rbac

# =========================================================================
# VALIDATION DU STOCKAGE PERSISTANT
# =========================================================================

- name: "PostgreSQL Prerequisites | V√©rification de la classe de stockage"
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: "{{ lions_storage_class_default | default('local-path') }}"
  register: lions_postgres_storage_class_info
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - storage

- name: "PostgreSQL Prerequisites | Validation de la classe de stockage"
  set_fact:
    lions_postgres_validation_errors: "{{ lions_postgres_validation_errors + ['Classe de stockage ' + (lions_storage_class_default | default('local-path')) + ' introuvable'] }}"
  when: lions_postgres_storage_class_info.resources | length == 0
  tags:
    - postgres
    - prerequisites
    - storage

- name: "PostgreSQL Prerequisites | Test de cr√©ation PVC"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "lions-postgres-storage-test-{{ ansible_date_time.epoch }}"
        namespace: "{{ lions_postgres_namespace | default('database') }}"
        labels:
          lions.dev/test-type: storage-validation
          lions.dev/temporary: "true"
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: "{{ lions_storage_class_default | default('local-path') }}"
        resources:
          requests:
            storage: "1Gi"
  register: lions_postgres_pvc_test
  failed_when: false
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - storage

- name: "PostgreSQL Prerequisites | Attente de la liaison du PVC de test"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    name: "lions-postgres-storage-test-{{ ansible_date_time.epoch }}"
    namespace: "{{ lions_postgres_namespace | default('database') }}"
    wait: true
    wait_condition:
      type: Bound
      status: "True"
    wait_timeout: 60
  register: lions_postgres_pvc_bound
  failed_when: false
  when: not (lions_postgres_pvc_test.failed | default(false))
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - storage

- name: "PostgreSQL Prerequisites | Nettoyage du PVC de test"
  kubernetes.core.k8s:
    state: absent
    api_version: v1
    kind: PersistentVolumeClaim
    name: "lions-postgres-storage-test-{{ ansible_date_time.epoch }}"
    namespace: "{{ lions_postgres_namespace | default('database') }}"
  when: not (lions_postgres_pvc_test.failed | default(false))
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - storage

- name: "PostgreSQL Prerequisites | Ajout d'avertissement pour le stockage"
  set_fact:
    lions_postgres_validation_warnings: "{{ lions_postgres_validation_warnings + ['Le stockage persistant pourrait ne pas fonctionner correctement'] }}"
  when: lions_postgres_pvc_test.failed | default(false) or lions_postgres_pvc_bound.failed | default(false)
  tags:
    - postgres
    - prerequisites
    - storage

# =========================================================================
# VALIDATION DES RESSOURCES SYST√àME
# =========================================================================

- name: "PostgreSQL Prerequisites | Collecte des informations sur les ressources des n≈ìuds"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Node
  register: lions_postgres_nodes_details
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - resources

- name: "PostgreSQL Prerequisites | Analyse des ressources disponibles"
  set_fact:
    lions_postgres_total_cpu: "{{ lions_postgres_nodes_details.resources | map(attribute='status.capacity.cpu') | map('int') | sum }}"
    lions_postgres_total_memory: "{{ lions_postgres_nodes_details.resources | map(attribute='status.capacity.memory') | map('regex_replace', 'Ki$', '') | map('int') | sum }}"
  when: lions_postgres_nodes_details.resources | length > 0
  tags:
    - postgres
    - prerequisites
    - resources

- name: "PostgreSQL Prerequisites | Validation des ressources minimales"
  set_fact:
    lions_postgres_validation_warnings: "{{ lions_postgres_validation_warnings + ['Ressources syst√®me limit√©es d√©tect√©es - V√©rifiez la capacit√© du cluster'] }}"
  when:
    - lions_postgres_total_cpu is defined
    - lions_postgres_total_memory is defined
    - (lions_postgres_total_cpu | int < 2 or lions_postgres_total_memory | int < 2097152)
  tags:
    - postgres
    - prerequisites
    - resources

# =========================================================================
# VALIDATION DES SERVICES D'INFRASTRUCTURE
# =========================================================================

- name: "PostgreSQL Prerequisites | V√©rification du service DNS"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: kube-dns
    namespace: kube-system
  register: lions_postgres_dns_service
  failed_when: false
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - infrastructure

- name: "PostgreSQL Prerequisites | Validation du service DNS"
  set_fact:
    lions_postgres_validation_warnings: "{{ lions_postgres_validation_warnings + ['Service DNS Kubernetes non d√©tect√© - La r√©solution de noms pourrait √™tre affect√©e'] }}"
  when: lions_postgres_dns_service.resources | length == 0
  tags:
    - postgres
    - prerequisites
    - infrastructure

- name: "PostgreSQL Prerequisites | V√©rification du contr√¥leur d'ingress"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: traefik
    namespace: kube-system
  register: lions_postgres_ingress_service
  failed_when: false
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - infrastructure

- name: "PostgreSQL Prerequisites | Validation du contr√¥leur d'ingress"
  set_fact:
    lions_postgres_validation_warnings: "{{ lions_postgres_validation_warnings + ['Contr√¥leur d\\'ingress non d√©tect√© - L\\'acc√®s externe pourrait √™tre limit√©'] }}"
  when: lions_postgres_ingress_service.resources | length == 0
  tags:
    - postgres
    - prerequisites
    - infrastructure

# =========================================================================
# VALIDATION DES SERVICES DE MONITORING
# =========================================================================

- name: "PostgreSQL Prerequisites | V√©rification du service Prometheus"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: prometheus-server
    namespace: "{{ lions_monitoring_namespace | default('monitoring') }}"
  register: lions_postgres_prometheus_service
  failed_when: false
  when: lions_monitoring_enabled | default(true) | bool
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - monitoring

- name: "PostgreSQL Prerequisites | Validation du monitoring"
  set_fact:
    lions_postgres_validation_warnings: "{{ lions_postgres_validation_warnings + ['Service Prometheus non d√©tect√© - Le monitoring PostgreSQL sera limit√©'] }}"
  when:
    - lions_monitoring_enabled | default(true) | bool
    - lions_postgres_prometheus_service.resources | default([]) | length == 0
  tags:
    - postgres
    - prerequisites
    - monitoring

# =========================================================================
# VALIDATION DES SERVICES DE S√âCURIT√â
# =========================================================================

- name: "PostgreSQL Prerequisites | V√©rification du service Vault"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: "{{ lions_vault_service_name | default('vault') }}"
    namespace: "{{ lions_vault_namespace | default('vault-system') }}"
  register: lions_postgres_vault_service
  failed_when: false
  when: lions_vault_enabled | default(true) | bool
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - security

- name: "PostgreSQL Prerequisites | Validation de Vault"
  set_fact:
    lions_postgres_validation_warnings: "{{ lions_postgres_validation_warnings + ['Service Vault non d√©tect√© - La gestion des secrets sera basique'] }}"
  when:
    - lions_vault_enabled | default(true) | bool
    - lions_postgres_vault_service.resources | default([]) | length == 0
  tags:
    - postgres
    - prerequisites
    - security

# =========================================================================
# VALIDATION DES D√âPENDANCES APPLICATIVES
# =========================================================================

- name: "PostgreSQL Prerequisites | V√©rification de l'absence de conflits PostgreSQL"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: StatefulSet
    namespace: "{{ lions_postgres_namespace | default('database') }}"
    label_selectors:
      - "app.kubernetes.io/name=postgresql"
  register: lions_postgres_existing_instances
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"
  tags:
    - postgres
    - prerequisites
    - conflicts

- name: "PostgreSQL Prerequisites | D√©tection d'instances existantes"
  debug:
    msg: "‚ö†Ô∏è  Instance PostgreSQL existante d√©tect√©e: {{ item.metadata.name }}"
  loop: "{{ lions_postgres_existing_instances.resources }}"
  when: lions_postgres_existing_instances.resources | length > 0
  tags:
    - postgres
    - prerequisites
    - conflicts

# =========================================================================
# COMPILATION ET AFFICHAGE DU RAPPORT DE VALIDATION
# =========================================================================

- name: "PostgreSQL Prerequisites | Calcul du temps d'ex√©cution"
  set_fact:
    lions_postgres_prerequisites_duration: "{{ ansible_date_time.epoch | int - lions_postgres_prerequisites_start_time | int }}"
  tags:
    - postgres
    - prerequisites
    - report

- name: "PostgreSQL Prerequisites | Affichage du rapport de validation"
  debug:
    msg:
      - "üìã === RAPPORT DE VALIDATION POSTGRESQL ==="
      - "‚è±Ô∏è  Dur√©e d'ex√©cution: {{ lions_postgres_prerequisites_duration }}s"
      - "‚ùå Erreurs critiques: {{ lions_postgres_validation_errors | length }}"
      - "‚ö†Ô∏è  Avertissements: {{ lions_postgres_validation_warnings | length }}"
      - "{% if lions_postgres_validation_errors | length > 0 %}üö® ERREURS CRITIQUES:{% for error in lions_postgres_validation_errors %}   - {{ error }}{% endfor %}{% endif %}"
      - "{% if lions_postgres_validation_warnings | length > 0 %}‚ö†Ô∏è  AVERTISSEMENTS:{% for warning in lions_postgres_validation_warnings %}   - {{ warning }}{% endfor %}{% endif %}"
      - "{% if lions_postgres_validation_errors | length == 0 %}‚úÖ Validation r√©ussie - Pr√™t pour le d√©ploiement PostgreSQL{% endif %}"
  tags:
    - postgres
    - prerequisites
    - report

# =========================================================================
# GESTION DES √âCHECS CRITIQUES
# =========================================================================

- name: "PostgreSQL Prerequisites | Arr√™t en cas d'erreurs critiques"
  fail:
    msg: |
      üö® √âCHEC DE LA VALIDATION DES PR√âREQUIS POSTGRESQL
      
      Les erreurs suivantes doivent √™tre corrig√©es avant de continuer:
      {% for error in lions_postgres_validation_errors %}
      ‚ùå {{ error }}
      {% endfor %}
      
      üìö Consultez la documentation: https://docs.lions.dev/infrastructure/services/postgresql/troubleshooting
      üîß Ex√©cutez les playbooks de base avant de continuer: install-k3s.yml, install-vault.yml
  when: lions_postgres_validation_errors | length > 0
  tags:
    - postgres
    - prerequisites
    - validation

- name: "PostgreSQL Prerequisites | Confirmation de la validation"
  debug:
    msg: "‚úÖ Validation des pr√©requis PostgreSQL termin√©e avec succ√®s"
  tags:
    - postgres
    - prerequisites
    - success