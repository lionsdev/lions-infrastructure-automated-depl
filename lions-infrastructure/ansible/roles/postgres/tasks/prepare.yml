---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - POSTGRESQL PREPARATION TASKS
# =========================================================================
# Description: Pr√©pare les ressources n√©cessaires pour d√©ployer PostgreSQL
# Auteur: DevOps Team - LIONS Infrastructure
# Date: "{{ ansible_date_time.date }}"
# Version: 5.0.0
# Documentation: https://docs.lions.dev/infrastructure/postgres/preparation
# =========================================================================

# =========================================================================
# VALIDATION DES PR√âREQUIS
# =========================================================================
- name: "üîç [POSTGRES-PREP] Validation des variables d'environnement critiques"
  assert:
    that:
      - lions_postgres_enabled is defined
      - lions_postgres_namespace is defined
      - lions_postgres_service_name is defined
      - lions_postgres_version is defined
      - lions_postgres_storage_size is defined
      - lions_environment is defined
    fail_msg: "‚ùå Variables d'environnement LIONS PostgreSQL manquantes"
    success_msg: "‚úÖ Variables d'environnement PostgreSQL valid√©es"
  tags:
    - validation
    - postgres
    - preparation

- name: "üîç [POSTGRES-PREP] V√©rification de l'√©tat du cluster Kubernetes"
  k8s_info:
    api_version: v1
    kind: Node
  register: k8s_cluster_status
  failed_when: false
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - validation
    - k8s

- name: "‚ùå [POSTGRES-PREP] √âchec - Cluster Kubernetes inaccessible"
  fail:
    msg: "Le cluster Kubernetes n'est pas accessible. V√©rifiez la configuration."
  when: k8s_cluster_status.failed
  tags:
    - validation
    - k8s

- name: "‚úÖ [POSTGRES-PREP] Cluster Kubernetes op√©rationnel ({{ k8s_cluster_status.resources | length }} n≈ìuds)"
  debug:
    msg: "Cluster K8s accessible avec {{ k8s_cluster_status.resources | length }} n≈ìud(s)"
  tags:
    - validation
    - k8s

# =========================================================================
# CR√âATION DU NAMESPACE ET V√âRIFICATIONS
# =========================================================================
- name: "üèóÔ∏è [POSTGRES-PREP] Cr√©ation/V√©rification du namespace {{ lions_postgres_namespace }}"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ lions_postgres_namespace }}"
        labels:
          name: "{{ lions_postgres_namespace }}"
          app.kubernetes.io/name: postgresql
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: lions-infrastructure
          app.kubernetes.io/managed-by: ansible
          lions.dev/environment: "{{ lions_environment }}"
          lions.dev/version: "{{ lions_config_version | default('5.0.0') }}"
        annotations:
          lions.dev/description: "Namespace pour les services de base de donn√©es PostgreSQL"
          lions.dev/created-by: "lions-infrastructure-ansible"
          lions.dev/creation-date: "{{ ansible_date_time.iso8601 }}"
  register: postgres_namespace_result
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - namespace
    - postgres

- name: "üîç [POSTGRES-PREP] V√©rification des ressources syst√®me requises"
  k8s_info:
    api_version: v1
    kind: Node
  register: cluster_nodes
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - validation
    - resources

- name: "‚ö†Ô∏è [POSTGRES-PREP] Avertissement - Ressources syst√®me limit√©es"
  debug:
    msg: |
      AVERTISSEMENT: Cluster √† n≈ìud unique d√©tect√©.
      Pour la production, consid√©rez un d√©ploiement multi-n≈ìuds pour PostgreSQL HA.
  when: cluster_nodes.resources | length == 1 and lions_environment == 'production'
  tags:
    - validation
    - resources

# =========================================================================
# PR√âPARATION DES R√âPERTOIRES DE TRAVAIL
# =========================================================================
- name: "üìÅ [POSTGRES-PREP] Cr√©ation du r√©pertoire de travail temporaire"
  tempfile:
    state: directory
    suffix: ".lions-postgres-{{ lions_environment }}"
    prefix: "postgres-deploy-"
  register: postgres_temp_dir
  changed_when: false
  tags:
    - preparation
    - filesystem

- name: "üìã [POSTGRES-PREP] Enregistrement du r√©pertoire de travail"
  set_fact:
    postgres_work_dir: "{{ postgres_temp_dir.path }}"
    postgres_manifest_files:
      - name: serviceaccount
        template: serviceaccount.yml.j2
        required: true
      - name: configmap
        template: configmap.yml.j2
        required: true
      - name: persistentvolumeclaim
        template: persistentvolumeclaim.yml.j2
        required: true
      - name: service
        template: service.yml.j2
        required: true
      - name: statefulset
        template: statefulset.yml.j2
        required: true
      - name: servicemonitor
        template: servicemonitor.yml.j2
        required: "{{ lions_monitoring_enabled | default(false) | bool }}"
  tags:
    - preparation

# =========================================================================
# G√âN√âRATION DES MANIFESTES KUBERNETES
# =========================================================================
- name: "üîß [POSTGRES-PREP] G√©n√©ration des manifestes Kubernetes"
  template:
    src: "{{ item.template }}"
    dest: "{{ postgres_work_dir }}/{{ item.name }}.yml"
    mode: '0644'
    backup: false
  loop: "{{ postgres_manifest_files }}"
  when: item.required | bool
  register: postgres_templates_generated
  tags:
    - templates
    - manifests

- name: "üîç [POSTGRES-PREP] Validation des manifestes g√©n√©r√©s"
  stat:
    path: "{{ postgres_work_dir }}/{{ item.name }}.yml"
  loop: "{{ postgres_manifest_files }}"
  when: item.required | bool
  register: postgres_manifest_validation
  tags:
    - validation
    - manifests

- name: "‚ùå [POSTGRES-PREP] √âchec - Manifestes manquants"
  fail:
    msg: "Le manifeste {{ item.item.name }}.yml n'a pas √©t√© g√©n√©r√© correctement"
  loop: "{{ postgres_manifest_validation.results }}"
  when:
    - item.item.required | bool
    - not item.stat.exists
  tags:
    - validation
    - manifests

- name: "‚úÖ [POSTGRES-PREP] Manifestes Kubernetes g√©n√©r√©s avec succ√®s"
  debug:
    msg: "Tous les manifestes requis ont √©t√© g√©n√©r√©s dans {{ postgres_work_dir }}"
  tags:
    - manifests

# =========================================================================
# GESTION DES SECRETS - INT√âGRATION VAULT
# =========================================================================
- name: "üîê [POSTGRES-PREP] V√©rification de l'int√©gration Vault"
  uri:
    url: "{{ lions_vault_addr | default('http://localhost:8200') }}/v1/sys/health"
    method: GET
    status_code: [200, 429, 472, 473, 501, 503]
    timeout: 10
  register: vault_health_check
  failed_when: false
  when: lions_vault_enabled | default(false) | bool
  tags:
    - vault
    - secrets

- name: "üîê [POSTGRES-PREP] Configuration de la r√©cup√©ration des secrets via Vault"
  set_fact:
    postgres_use_vault: "{{ lions_vault_enabled | default(false) | bool and not vault_health_check.failed }}"
    postgres_admin_secret_name: "{{ lions_postgres_service_name }}-admin-credentials"
    postgres_user_secret_name: "{{ lions_postgres_service_name }}-user-credentials"
    postgres_replication_secret_name: "{{ lions_postgres_service_name }}-replication-credentials"
  tags:
    - secrets
    - configuration

# =========================================================================
# GESTION DES SECRETS ADMINISTRATEUR
# =========================================================================
- name: "üîç [POSTGRES-PREP] V√©rification du secret administrateur existant"
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ lions_postgres_namespace }}"
    name: "{{ postgres_admin_secret_name }}"
  register: postgres_admin_secret_check
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - secrets
    - validation

- name: "üîê [POSTGRES-PREP] R√©cup√©ration du mot de passe administrateur depuis Vault"
  vault_secret:
    vault_addr: "{{ lions_vault_addr }}"
    vault_token: "{{ vault_token | default(lookup('env', 'VAULT_TOKEN')) }}"
    secret_path: "secret/data/postgres/admin"
    secret_key: "password"
  register: postgres_admin_password_from_vault
  when:
    - postgres_use_vault | bool
    - postgres_admin_secret_check.resources | length == 0
  failed_when: false
  no_log: true
  tags:
    - vault
    - secrets

- name: "üîê [POSTGRES-PREP] G√©n√©ration s√©curis√©e du mot de passe administrateur"
  set_fact:
    postgres_admin_password: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits,!@#$%^&*') }}"
  when:
    - postgres_admin_secret_check.resources | length == 0
    - not postgres_use_vault | bool or postgres_admin_password_from_vault.failed | default(false)
  no_log: true
  tags:
    - secrets
    - security

- name: "üîê [POSTGRES-PREP] Utilisation du mot de passe depuis Vault"
  set_fact:
    postgres_admin_password: "{{ postgres_admin_password_from_vault.secret_value }}"
  when:
    - postgres_use_vault | bool
    - not postgres_admin_password_from_vault.failed | default(true)
  no_log: true
  tags:
    - vault
    - secrets

- name: "üîê [POSTGRES-PREP] Cr√©ation du secret administrateur PostgreSQL"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ postgres_admin_secret_name }}"
        namespace: "{{ lions_postgres_namespace }}"
        labels:
          app.kubernetes.io/name: postgresql
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: lions-infrastructure
          app.kubernetes.io/managed-by: ansible
          lions.dev/environment: "{{ lions_environment }}"
          lions.dev/secret-type: database-credentials
        annotations:
          lions.dev/description: "Credentials pour l'administrateur PostgreSQL"
          lions.dev/created-by: "lions-infrastructure-ansible"
          lions.dev/creation-date: "{{ ansible_date_time.iso8601 }}"
          lions.dev/vault-managed: "{{ postgres_use_vault | string }}"
      type: Opaque
      stringData:
        username: "{{ lions_postgres_admin_user | default('postgres') }}"
        password: "{{ postgres_admin_password }}"
        database: "{{ lions_postgres_database }}"
  when: postgres_admin_secret_check.resources | length == 0
  register: postgres_admin_secret_created
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  no_log: true
  tags:
    - secrets
    - creation

# =========================================================================
# GESTION DES SECRETS R√âPLICATION (HAUTE DISPONIBILIT√â)
# =========================================================================
- name: "üîç [POSTGRES-PREP] V√©rification des besoins de r√©plication"
  set_fact:
    postgres_requires_replication: "{{ lions_postgres_ha_enabled | default(false) | bool or lions_environment == 'production' }}"
  tags:
    - ha
    - replication

- name: "üîç [POSTGRES-PREP] V√©rification du secret de r√©plication existant"
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ lions_postgres_namespace }}"
    name: "{{ postgres_replication_secret_name }}"
  register: postgres_replication_secret_check
  when: postgres_requires_replication | bool
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - secrets
    - replication

- name: "üîê [POSTGRES-PREP] R√©cup√©ration du mot de passe de r√©plication depuis Vault"
  vault_secret:
    vault_addr: "{{ lions_vault_addr }}"
    vault_token: "{{ vault_token | default(lookup('env', 'VAULT_TOKEN')) }}"
    secret_path: "secret/data/postgres/replication"
    secret_key: "password"
  register: postgres_replication_password_from_vault
  when:
    - postgres_requires_replication | bool
    - postgres_use_vault | bool
    - postgres_replication_secret_check.resources | length == 0
  failed_when: false
  no_log: true
  tags:
    - vault
    - secrets
    - replication

- name: "üîê [POSTGRES-PREP] G√©n√©ration s√©curis√©e du mot de passe de r√©plication"
  set_fact:
    postgres_replication_password: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits,!@#$%^&*') }}"
  when:
    - postgres_requires_replication | bool
    - postgres_replication_secret_check.resources | length == 0
    - not postgres_use_vault | bool or postgres_replication_password_from_vault.failed | default(false)
  no_log: true
  tags:
    - secrets
    - replication

- name: "üîê [POSTGRES-PREP] Cr√©ation du secret de r√©plication PostgreSQL"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ postgres_replication_secret_name }}"
        namespace: "{{ lions_postgres_namespace }}"
        labels:
          app.kubernetes.io/name: postgresql
          app.kubernetes.io/component: database
          app.kubernetes.io/part-of: lions-infrastructure
          app.kubernetes.io/managed-by: ansible
          lions.dev/environment: "{{ lions_environment }}"
          lions.dev/secret-type: replication-credentials
        annotations:
          lions.dev/description: "Credentials pour la r√©plication PostgreSQL"
          lions.dev/created-by: "lions-infrastructure-ansible"
          lions.dev/creation-date: "{{ ansible_date_time.iso8601 }}"
          lions.dev/vault-managed: "{{ postgres_use_vault | string }}"
      type: Opaque
      stringData:
        username: "replicator"
        password: "{{ postgres_replication_password }}"
  when:
    - postgres_requires_replication | bool
    - postgres_replication_secret_check.resources | length == 0
  register: postgres_replication_secret_created
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  no_log: true
  tags:
    - secrets
    - replication

# =========================================================================
# CR√âATION DES RESSOURCES DE BASE
# =========================================================================
- name: "üë§ [POSTGRES-PREP] Cr√©ation du ServiceAccount PostgreSQL"
  k8s:
    state: present
    src: "{{ postgres_work_dir }}/serviceaccount.yml"
  register: postgres_serviceaccount_result
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - serviceaccount
    - rbac

- name: "üìã [POSTGRES-PREP] Cr√©ation du ConfigMap de configuration"
  k8s:
    state: present
    src: "{{ postgres_work_dir }}/configmap.yml"
  register: postgres_configmap_result
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - configmap
    - configuration

# =========================================================================
# GESTION DU STOCKAGE PERSISTANT
# =========================================================================
- name: "üóÑÔ∏è [POSTGRES-PREP] V√©rification de la classe de stockage"
  k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: "{{ lions_storage_class_default }}"
  register: postgres_storage_class_check
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - storage
    - validation

- name: "‚ö†Ô∏è [POSTGRES-PREP] Avertissement - Classe de stockage manquante"
  debug:
    msg: |
      AVERTISSEMENT: La classe de stockage '{{ lions_storage_class_default }}' n'existe pas.
      Le PVC utilisera la classe de stockage par d√©faut du cluster.
  when: postgres_storage_class_check.resources | length == 0
  tags:
    - storage
    - warning

- name: "üíæ [POSTGRES-PREP] Cr√©ation du PVC pour PostgreSQL"
  k8s:
    state: present
    src: "{{ postgres_work_dir }}/persistentvolumeclaim.yml"
  register: postgres_pvc_result
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - storage
    - pvc

- name: "üîç [POSTGRES-PREP] V√©rification du statut du PVC"
  k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    namespace: "{{ lions_postgres_namespace }}"
    name: "{{ lions_postgres_service_name }}-data"
  register: postgres_pvc_status
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - storage
    - validation

- name: "‚è≥ [POSTGRES-PREP] Attente de la liaison du PVC"
  k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    namespace: "{{ lions_postgres_namespace }}"
    name: "{{ lions_postgres_service_name }}-data"
    wait: true
    wait_condition:
      type: Bound
      status: "True"
    wait_timeout: 300
  register: postgres_pvc_bound
  failed_when: false
  environment:
    KUBECONFIG: "{{ lions_k8s_config_file | default('/home/' + ansible_user + '/.kube/config') }}"
  tags:
    - storage
    - waiting

- name: "‚ö†Ô∏è [POSTGRES-PREP] Avertissement - PVC non li√©"
  debug:
    msg: |
      AVERTISSEMENT: Le PVC PostgreSQL n'est pas encore li√© √† un PV.
      Cela peut indiquer un probl√®me de provisioning de stockage.
      Statut actuel: {{ postgres_pvc_status.resources[0].status.phase | default('Unknown') }}
  when: postgres_pvc_bound.failed | default(false)
  tags:
    - storage
    - warning

# =========================================================================
# R√âSUM√â DE LA PR√âPARATION
# =========================================================================
- name: "üìä [POSTGRES-PREP] R√©capitulatif de la pr√©paration"
  debug:
    msg: |
      ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
      üêò PR√âPARATION POSTGRESQL TERMIN√âE
      ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
      üìç Environnement: {{ lions_environment }}
      üè∑Ô∏è  Namespace: {{ lions_postgres_namespace }}
      üîß Version PostgreSQL: {{ lions_postgres_version }}
      üíæ Taille de stockage: {{ lions_postgres_storage_size }}
      üîê Gestion des secrets: {{ 'Vault' if postgres_use_vault else 'Kubernetes' }}
      üîÑ R√©plication HA: {{ 'Activ√©e' if postgres_requires_replication else 'D√©sactiv√©e' }}
      üìÅ R√©pertoire de travail: {{ postgres_work_dir }}
      ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
  tags:
    - summary

# =========================================================================
# NETTOYAGE CONDITIONNEL
# =========================================================================
- name: "üßπ [POSTGRES-PREP] Nettoyage du r√©pertoire temporaire"
  file:
    path: "{{ postgres_work_dir }}"
    state: absent
  when:
    - lions_debug_mode | default(false) | bool == false
    - postgres_cleanup_temp_files | default(true) | bool
  changed_when: false
  tags:
    - cleanup

- name: "üêõ [POSTGRES-PREP] Conservation des fichiers temporaires (mode debug)"
  debug:
    msg: "Mode debug activ√© - Fichiers temporaires conserv√©s dans: {{ postgres_work_dir }}"
  when: lions_debug_mode | default(false) | bool
  tags:
    - debug
    - cleanup