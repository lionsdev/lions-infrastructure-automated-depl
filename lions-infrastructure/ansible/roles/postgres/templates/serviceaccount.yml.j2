# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - POSTGRES SERVICE ACCOUNT
# =========================================================================
# Description: Configuration RBAC pour PostgreSQL avec principe de moindre privilège
# Version: 5.0.0
# Maintainer: DevOps Team
# Documentation: https://docs.lions.dev/infrastructure/postgres/rbac
# =========================================================================

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/instance: {{ lions_postgres_service_name | default('postgresql') }}-{{ lions_environment }}
    app.kubernetes.io/version: "{{ lions_postgres_version | default('15.4') }}"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: lions-infrastructure
    app.kubernetes.io/managed-by: ansible
    lions.dev/environment: {{ lions_environment }}
    lions.dev/service-type: database
    lions.dev/backup-enabled: "{{ lions_postgres_backup_enabled | default('true') | string }}"
    lions.dev/monitoring-enabled: "{{ lions_monitoring_enabled | default('true') | string }}"
  annotations:
    lions.dev/created-by: "ansible-{{ ansible_version | default('unknown') }}"
    lions.dev/created-at: "{{ ansible_date_time.iso8601 }}"
    lions.dev/config-version: "{{ lions_config_version | default('5.0.0') }}"
    lions.dev/security-profile: "restricted"
    kubectl.kubernetes.io/default-container: postgresql
{% if lions_security_rbac_enabled | default(true) %}
automountServiceAccountToken: false
{% endif %}
secrets:
  - name: {{ lions_postgres_service_name | default('postgresql') }}-token
imagePullSecrets:
{% if lions_registry_enabled | default(true) and lions_registry_credentials_secret is defined %}
  - name: {{ lions_registry_credentials_secret }}
{% endif %}
  - name: lions-registry-credentials

---
# =========================================================================
# POSTGRES ROLE - PERMISSIONS GRANULAIRES
# =========================================================================
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-role
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/instance: {{ lions_postgres_service_name | default('postgresql') }}-{{ lions_environment }}
    app.kubernetes.io/version: "{{ lions_postgres_version | default('15.4') }}"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: lions-infrastructure
    app.kubernetes.io/managed-by: ansible
    lions.dev/environment: {{ lions_environment }}
    lions.dev/service-type: database
  annotations:
    lions.dev/created-by: "ansible-{{ ansible_version | default('unknown') }}"
    lions.dev/created-at: "{{ ansible_date_time.iso8601 }}"
    lions.dev/security-principle: "least-privilege"
    lions.dev/review-date: "{{ (ansible_date_time.epoch | int + 7776000) | strftime('%Y-%m-%d') }}"  # 90 days
rules:
  # Permissions essentielles pour PostgreSQL
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
    resourceNames:
      - {{ lions_postgres_service_name | default('postgresql') }}-*

  # Accès aux services pour la découverte de service
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
    resourceNames:
      - {{ lions_postgres_service_name | default('postgresql') }}
      - {{ lions_postgres_service_name | default('postgresql') }}-headless
      - {{ lions_postgres_service_name | default('postgresql') }}-read

  # Configuration et secrets (lecture seule)
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
    resourceNames:
      - {{ lions_postgres_service_name | default('postgresql') }}-config
      - {{ lions_postgres_service_name | default('postgresql') }}-init-scripts

  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
    resourceNames:
      - {{ lions_postgres_service_name | default('postgresql') }}-credentials
      - {{ lions_postgres_service_name | default('postgresql') }}-tls
{% if lions_vault_enabled | default(true) %}
      - {{ lions_postgres_service_name | default('postgresql') }}-vault-token
{% endif %}

{% if lions_postgres_backup_enabled | default(true) %}
  # Permissions pour les sauvegardes
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
    resourceNames:
      - {{ lions_postgres_service_name | default('postgresql') }}-data
      - {{ lions_postgres_service_name | default('postgresql') }}-backup
{% endif %}

{% if lions_monitoring_enabled | default(true) %}
  # Permissions pour le monitoring (Prometheus)
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]

  - apiGroups: [""]
    resources: ["pods/proxy"]
    verbs: ["get"]
    resourceNames:
      - {{ lions_postgres_service_name | default('postgresql') }}-*
{% endif %}

{% if lions_environment == 'development' %}
  # Permissions étendues pour le développement
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get", "list", "watch"]

  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get", "list"]
{% endif %}

---
# =========================================================================
# POSTGRES ROLE BINDING
# =========================================================================
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-role-binding
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/instance: {{ lions_postgres_service_name | default('postgresql') }}-{{ lions_environment }}
    app.kubernetes.io/version: "{{ lions_postgres_version | default('15.4') }}"
    app.kubernetes.io/component: rbac
    app.kubernetes.io/part-of: lions-infrastructure
    app.kubernetes.io/managed-by: ansible
    lions.dev/environment: {{ lions_environment }}
    lions.dev/service-type: database
  annotations:
    lions.dev/created-by: "ansible-{{ ansible_version | default('unknown') }}"
    lions.dev/created-at: "{{ ansible_date_time.iso8601 }}"
    lions.dev/binding-type: "service-to-role"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ lions_postgres_service_name | default('postgresql') }}-role
subjects:
  - kind: ServiceAccount
    name: {{ lions_postgres_service_name | default('postgresql') }}
    namespace: {{ lions_postgres_namespace | default('database') }}

{% if lions_monitoring_enabled | default(true) %}
---
# =========================================================================
# POSTGRES MONITORING ROLE (pour Prometheus/Grafana)
# =========================================================================
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-monitoring-role
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/instance: {{ lions_postgres_service_name | default('postgresql') }}-{{ lions_environment }}
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: lions-infrastructure
    app.kubernetes.io/managed-by: ansible
    lions.dev/environment: {{ lions_environment }}
    lions.dev/service-type: monitoring
rules:
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods/proxy"]
    verbs: ["get"]
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["servicemonitors", "podmonitors"]
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-monitoring-binding
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: lions-infrastructure
    lions.dev/environment: {{ lions_environment }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ lions_postgres_service_name | default('postgresql') }}-monitoring-role
subjects:
  - kind: ServiceAccount
    name: prometheus-operator
    namespace: {{ lions_monitoring_namespace | default('monitoring') }}
{% endif %}

{% if lions_postgres_backup_enabled | default(true) %}
---
# =========================================================================
# POSTGRES BACKUP SERVICE ACCOUNT
# =========================================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-backup
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/instance: {{ lions_postgres_service_name | default('postgresql') }}-{{ lions_environment }}
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: lions-infrastructure
    app.kubernetes.io/managed-by: ansible
    lions.dev/environment: {{ lions_environment }}
    lions.dev/service-type: backup
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-backup-role
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/component: backup
    app.kubernetes.io/part-of: lions-infrastructure
    lions.dev/environment: {{ lions_environment }}
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "create"]
  - apiGroups: [""]
    resources: ["secrets", "configmaps"]
    verbs: ["get", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["get", "list", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-backup-binding
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/component: backup
    lions.dev/environment: {{ lions_environment }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ lions_postgres_service_name | default('postgresql') }}-backup-role
subjects:
  - kind: ServiceAccount
    name: {{ lions_postgres_service_name | default('postgresql') }}-backup
    namespace: {{ lions_postgres_namespace | default('database') }}
{% endif %}

{% if lions_security_network_policies | default(true) %}
---
# =========================================================================
# POSTGRES NETWORK POLICY
# =========================================================================
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ lions_postgres_service_name | default('postgresql') }}-network-policy
  namespace: {{ lions_postgres_namespace | default('database') }}
  labels:
    app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
    app.kubernetes.io/instance: {{ lions_postgres_service_name | default('postgresql') }}-{{ lions_environment }}
    app.kubernetes.io/component: security
    app.kubernetes.io/part-of: lions-infrastructure
    lions.dev/environment: {{ lions_environment }}
    lions.dev/policy-type: database
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: {{ lions_postgres_service_name | default('postgresql') }}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Autoriser les connexions depuis les applications autorisées
    - from:
        - namespaceSelector:
            matchLabels:
              lions.dev/database-access: "allowed"
        - podSelector:
            matchLabels:
              lions.dev/postgres-client: "true"
      ports:
        - protocol: TCP
          port: 5432
    # Autoriser le monitoring
{% if lions_monitoring_enabled | default(true) %}
    - from:
        - namespaceSelector:
            matchLabels:
              name: {{ lions_monitoring_namespace | default('monitoring') }}
      ports:
        - protocol: TCP
          port: 9187  # postgres_exporter
{% endif %}
  egress:
    # Autoriser DNS
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Autoriser NTP
    - to: []
      ports:
        - protocol: UDP
          port: 123
{% if lions_vault_enabled | default(true) %}
    # Autoriser Vault pour la récupération des secrets
    - to:
        - namespaceSelector:
            matchLabels:
              name: {{ lions_vault_namespace | default('vault-system') }}
      ports:
        - protocol: TCP
          port: {{ lions_vault_port | default(8200) }}
{% endif %}
{% endif %}