---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - REGISTRY CONTAINER PREPARATION
# =========================================================================
# Description: Pr√©paration s√©curis√©e et robuste des ressources pour la registry de conteneurs
# Version: 5.0.0
# Maintainer: DevOps Team LIONS
# Date: 2025-05-28
# Documentation: https://docs.lions.dev/infrastructure/registry/preparation
#
# S√©curit√©: Ce playbook NE CR√âE JAMAIS de secrets avec des credentials par d√©faut
# Pr√©requis: Les secrets doivent √™tre cr√©√©s via Vault ou kubectl avant l'ex√©cution
# =========================================================================

# =========================================================================
# VALIDATION DES PR√âREQUIS CRITIQUES
# =========================================================================
- name: "üîç Validation - V√©rification des variables d'environnement LIONS requises"
  assert:
    that:
      - lions_registry_enabled is defined
      - lions_registry_namespace is defined
      - lions_registry_service_name is defined
      - lions_registry_version is defined
      - lions_dns_full_domain is defined
      - lions_storage_class_default is defined
    fail_msg: "‚ùå Variables d'environnement LIONS manquantes. V√©rifiez le fichier .env"
    success_msg: "‚úÖ Variables d'environnement LIONS valid√©es"
  tags:
    - validation
    - registry
    - preparation

- name: "üîç Validation - V√©rification de l'activation du registre"
  assert:
    that:
      - lions_registry_enabled | bool
    fail_msg: "‚ùå Le registre n'est pas activ√© (LIONS_REGISTRY_ENABLED=false)"
    success_msg: "‚úÖ Le registre est activ√© pour le d√©ploiement"
  tags:
    - validation
    - registry

- name: "üîç Validation - V√©rification de la connectivit√© Kubernetes"
  k8s_info:
    api_version: v1
    kind: Namespace
  register: k8s_connectivity_check
  failed_when: false
  tags:
    - validation
    - kubernetes

- name: "‚ùå √âchec - Connectivit√© Kubernetes indisponible"
  fail:
    msg: |
      Impossible de se connecter au cluster Kubernetes.
      V√©rifiez que kubectl est configur√© et que le cluster est accessible.
  when: k8s_connectivity_check is failed
  tags:
    - validation
    - kubernetes

# =========================================================================
# PR√âPARATION DE L'ENVIRONNEMENT
# =========================================================================
- name: "üìÅ Environnement - Cr√©ation du r√©pertoire temporaire s√©curis√©"
  tempfile:
    state: directory
    suffix: "registry-{{ ansible_date_time.epoch }}"
  register: lions_registry_temp_dir
  changed_when: false
  tags:
    - environment
    - security

- name: "üîí S√©curit√© - Configuration des permissions du r√©pertoire temporaire"
  file:
    path: "{{ lions_registry_temp_dir.path }}"
    mode: '0750'
    owner: "{{ ansible_user_id }}"
  changed_when: false
  tags:
    - environment
    - security

# =========================================================================
# V√âRIFICATION DES SECRETS ET S√âCURIT√â
# =========================================================================
- name: "üîê S√©curit√© - V√©rification de l'existence du secret d'authentification"
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ lions_registry_namespace }}"
    name: "{{ lions_registry_service_name }}-auth"
  register: lions_registry_auth_secret_check
  failed_when: false
  tags:
    - security
    - validation

- name: "‚ùå √âchec critique - Secret d'authentification manquant"
  fail:
    msg: |
      ERREUR CRITIQUE DE S√âCURIT√â:
      Le secret d'authentification '{{ lions_registry_service_name }}-auth' 
      n'existe pas dans le namespace '{{ lions_registry_namespace }}'.
      
      Pour cr√©er le secret d'authentification:
      
      1. Via kubectl:
      kubectl create secret generic {{ lions_registry_service_name }}-auth \
        --namespace={{ lions_registry_namespace }} \
        --from-literal=REGISTRY_HTTP_SECRET="$(openssl rand -hex 32)" \
        --from-literal=REGISTRY_AUTH_HTPASSWD_REALM="LIONS Registry" \
        --from-file=htpasswd=/path/to/htpasswd/file
      
      2. Via Vault (recommand√©):
      vault kv put secret/registry/auth \
        http_secret="$(openssl rand -hex 32)" \
        htpasswd_realm="LIONS Registry" \
        htpasswd_content="@/path/to/htpasswd/file"
      
      3. G√©n√©rer un fichier htpasswd:
      htpasswd -Bc /tmp/htpasswd admin
      
      Le d√©ploiement s'arr√™te ici pour des raisons de s√©curit√©.
  when:
    - lions_registry_auth_secret_check is failed or
      lions_registry_auth_secret_check.resources | length == 0
  tags:
    - security
    - validation

- name: "üîê S√©curit√© - V√©rification du secret TLS"
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ lions_registry_namespace }}"
    name: "{{ lions_registry_service_name }}-tls"
  register: lions_registry_tls_secret_check
  failed_when: false
  when: lions_security_tls_enabled | bool
  tags:
    - security
    - tls

- name: "‚ö†Ô∏è  Avertissement - Secret TLS manquant"
  debug:
    msg: |
      AVERTISSEMENT: Le secret TLS '{{ lions_registry_service_name }}-tls' n'existe pas.
      Le registre utilisera HTTP au lieu de HTTPS.
      
      Pour activer HTTPS, cr√©ez le secret TLS:
      kubectl create secret tls {{ lions_registry_service_name }}-tls \
        --namespace={{ lions_registry_namespace }} \
        --cert=/path/to/registry.crt \
        --key=/path/to/registry.key
  when:
    - lions_security_tls_enabled | bool
    - lions_registry_tls_secret_check is failed or
      lions_registry_tls_secret_check.resources | length == 0
  tags:
    - security
    - tls

# =========================================================================
# G√âN√âRATION DES TEMPLATES KUBERNETES
# =========================================================================
- name: "üìã Templates - G√©n√©ration des manifests Kubernetes"
  template:
    src: "{{ item }}.yml.j2"
    dest: "{{ lions_registry_temp_dir.path }}/{{ item }}.yml"
    mode: '0640'
  loop:
    - namespace
    - configmap
    - serviceaccount
    - role
    - rolebinding
    - persistentvolumeclaim
    - service
    - deployment
    - ingress
    - servicemonitor
    - networkpolicy
  register: lions_registry_templates_result
  changed_when: false
  tags:
    - templates
    - kubernetes

- name: "üîç Validation - V√©rification de la syntaxe des templates"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/{{ item }}.yml"
    dry_run: true
    validate:
      fail_on_error: true
      strict: true
  loop:
    - namespace
    - configmap
    - serviceaccount
    - role
    - rolebinding
    - persistentvolumeclaim
    - service
    - deployment
    - ingress
    - servicemonitor
    - networkpolicy
  register: lions_registry_validation_result
  changed_when: false
  tags:
    - validation
    - templates

# =========================================================================
# CR√âATION DES RESSOURCES KUBERNETES
# =========================================================================
- name: "üèóÔ∏è  Infrastructure - Cr√©ation/V√©rification du namespace"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/namespace.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_namespace_result
  tags:
    - infrastructure
    - namespace

- name: "‚öôÔ∏è  Configuration - Cr√©ation du ConfigMap"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/configmap.yml"
    wait: true
    wait_condition:
      type: "Ready"
      status: "True"
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_configmap_result
  tags:
    - configuration
    - configmap

- name: "üë§ RBAC - Cr√©ation du ServiceAccount"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/serviceaccount.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_serviceaccount_result
  tags:
    - rbac
    - serviceaccount

- name: "üîë RBAC - Cr√©ation du Role"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/role.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_role_result
  tags:
    - rbac
    - role

- name: "üîó RBAC - Cr√©ation du RoleBinding"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/rolebinding.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_rolebinding_result
  tags:
    - rbac
    - rolebinding

- name: "üíæ Stockage - Cr√©ation du PersistentVolumeClaim"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/persistentvolumeclaim.yml"
    wait: true
    wait_condition:
      type: "Bound"
      status: "True"
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_pvc_result
  when: lions_registry_storage_size is defined and lions_registry_storage_size != ""
  tags:
    - storage
    - persistence

- name: "üåê R√©seau - Cr√©ation du Service"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/service.yml"
    wait: true
    wait_condition:
      type: "Ready"
      status: "True"
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_service_result
  tags:
    - networking
    - service

- name: "üîí S√©curit√© - Cr√©ation des NetworkPolicies"
  k8s:
    state: present
    src: "{{ lions_registry_temp_dir.path }}/networkpolicy.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_registry_networkpolicy_result
  when: lions_security_network_policies | bool
  tags:
    - security
    - networking

# =========================================================================
# V√âRIFICATION DE L'√âTAT DES RESSOURCES
# =========================================================================
- name: "üîç V√©rification - √âtat des ressources cr√©√©es"
  k8s_info:
    api_version: "{{ item.api_version }}"
    kind: "{{ item.kind }}"
    namespace: "{{ lions_registry_namespace }}"
    name: "{{ item.name }}"
  loop:
    - api_version: v1
      kind: Namespace
      name: "{{ lions_registry_namespace }}"
    - api_version: v1
      kind: ConfigMap
      name: "{{ lions_registry_service_name }}-config"
    - api_version: v1
      kind: ServiceAccount
      name: "{{ lions_registry_service_name }}"
    - api_version: v1
      kind: Service
      name: "{{ lions_registry_service_name }}"
  register: lions_registry_resources_status
  tags:
    - verification
    - status

- name: "üìä R√©sultats - Affichage du statut des ressources"
  debug:
    msg: |
      üìã R√âSUM√â DE LA PR√âPARATION DU REGISTRE:
      
      üèóÔ∏è  Namespace: {{ lions_registry_namespace }} - {{ 'CR√â√â' if lions_registry_namespace_result.changed else 'EXISTANT' }}
      ‚öôÔ∏è  ConfigMap: {{ 'CR√â√â' if lions_registry_configmap_result.changed else 'EXISTANT' }}
      üë§ ServiceAccount: {{ 'CR√â√â' if lions_registry_serviceaccount_result.changed else 'EXISTANT' }}
      üîë Role: {{ 'CR√â√â' if lions_registry_role_result.changed else 'EXISTANT' }}
      üîó RoleBinding: {{ 'CR√â√â' if lions_registry_rolebinding_result.changed else 'EXISTANT' }}
      üåê Service: {{ 'CR√â√â' if lions_registry_service_result.changed else 'EXISTANT' }}
      üíæ PVC: {{ 'CR√â√â' if lions_registry_pvc_result.changed else 'EXISTANT' if lions_registry_storage_size is defined else 'NON REQUIS' }}
      üîí NetworkPolicy: {{ 'CR√â√âE' if lions_registry_networkpolicy_result.changed else 'EXISTANTE' if lions_security_network_policies | bool else 'D√âSACTIV√âE' }}
      
      ‚úÖ Pr√©paration termin√©e avec succ√®s!
      üöÄ Pr√™t pour le d√©ploiement de l'application.
  tags:
    - results
    - summary

# =========================================================================
# NETTOYAGE S√âCURIS√â
# =========================================================================
- name: "üßπ Nettoyage - Suppression du r√©pertoire temporaire"
  file:
    path: "{{ lions_registry_temp_dir.path }}"
    state: absent
  changed_when: false
  tags:
    - cleanup
    - security

# =========================================================================
# COLLECTE DES M√âTRIQUES DE D√âPLOIEMENT
# =========================================================================
- name: "üìä M√©triques - Enregistrement des informations de d√©ploiement"
  set_fact:
    lions_registry_preparation_metrics:
      completion_time: "{{ ansible_date_time.iso8601 }}"
      namespace: "{{ lions_registry_namespace }}"
      service_name: "{{ lions_registry_service_name }}"
      version: "{{ lions_registry_version }}"
      tls_enabled: "{{ lions_security_tls_enabled | bool }}"
      persistent_storage: "{{ lions_registry_storage_size is defined and lions_registry_storage_size != '' }}"
      network_policies: "{{ lions_security_network_policies | bool }}"
      resources_created:
        namespace: "{{ lions_registry_namespace_result.changed }}"
        configmap: "{{ lions_registry_configmap_result.changed }}"
        serviceaccount: "{{ lions_registry_serviceaccount_result.changed }}"
        role: "{{ lions_registry_role_result.changed }}"
        rolebinding: "{{ lions_registry_rolebinding_result.changed }}"
        service: "{{ lions_registry_service_result.changed }}"
        pvc: "{{ lions_registry_pvc_result.changed if lions_registry_storage_size is defined else false }}"
        networkpolicy: "{{ lions_registry_networkpolicy_result.changed if lions_security_network_policies | bool else false }}"
  tags:
    - metrics
    - reporting

# =========================================================================
# VALIDATION FINALE
# =========================================================================
- name: "‚úÖ Validation finale - V√©rification de la pr√©paration"
  assert:
    that:
      - lions_registry_namespace_result is succeeded
      - lions_registry_configmap_result is succeeded
      - lions_registry_serviceaccount_result is succeeded
      - lions_registry_service_result is succeeded
    fail_msg: "‚ùå La pr√©paration du registre a √©chou√©. V√©rifiez les logs ci-dessus."
    success_msg: "‚úÖ Pr√©paration du registre termin√©e avec succ√®s!"
  tags:
    - validation
    - final