---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - VALIDATION REGISTRY
# =========================================================================
# Description: Validation post-d√©ploiement pour la registry de conteneurs
# Version: 5.0.0
# Maintainer: DevOps Team LIONS
# Documentation: https://docs.lions.dev/infrastructure/registry/validation
# =========================================================================

- name: "üîç [VALIDATION] D√©marrage de la validation de la registry"
  debug:
    msg:
      - "=================== VALIDATION REGISTRY ==================="
      - "Namespace: {{ lions_registry_namespace }}"
      - "Service: {{ lions_registry_service_name }}"
      - "Version: {{ lions_registry_version }}"
      - "Environment: {{ lions_environment }}"
      - "========================================================"

# =========================================================================
# VALIDATION DE L'√âTAT DES PODS
# =========================================================================
- name: "üìä [PODS] R√©cup√©ration des informations sur les pods"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ lions_registry_namespace }}"
    label_selectors:
      - "app={{ lions_registry_service_name }}"
      - "component=registry"
      - "environment={{ lions_environment }}"
    wait: true
    wait_condition:
      type: Ready
      status: "True"
    wait_sleep: 10
    wait_timeout: "{{ lions_timeout_deployment }}"
  register: registry_pods_info
  tags:
    - validation
    - pods

- name: "‚úÖ [PODS] V√©rification du nombre de pods d√©ploy√©s"
  assert:
    that:
      - registry_pods_info.resources | length > 0
      - registry_pods_info.resources | length >= (lions_registry_min_replicas | default(1) | int)
    fail_msg: "‚ùå Nombre insuffisant de pods registry ({{ registry_pods_info.resources | length }}/{{ lions_registry_min_replicas | default(1) }})"
    success_msg: "‚úÖ Nombre correct de pods registry d√©ploy√©s ({{ registry_pods_info.resources | length }})"
  tags:
    - validation
    - pods

- name: "üîç [PODS] Validation de l'√©tat des pods"
  assert:
    that:
      - item.status.phase == "Running"
      - item.status.conditions | selectattr('type', 'equalto', 'Ready') | selectattr('status', 'equalto', 'True') | list | length > 0
    fail_msg: "‚ùå Pod {{ item.metadata.name }} n'est pas en √©tat Running/Ready"
    success_msg: "‚úÖ Pod {{ item.metadata.name }} est op√©rationnel"
  loop: "{{ registry_pods_info.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  tags:
    - validation
    - pods

# =========================================================================
# VALIDATION DES SERVICES KUBERNETES
# =========================================================================
- name: "üåê [SERVICE] V√©rification du service Kubernetes"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    name: "{{ lions_registry_service_name }}"
    namespace: "{{ lions_registry_namespace }}"
  register: registry_service_info
  tags:
    - validation
    - service

- name: "‚úÖ [SERVICE] Validation de la configuration du service"
  assert:
    that:
      - registry_service_info.resources | length == 1
      - registry_service_info.resources[0].spec.ports | selectattr('port', 'equalto', lions_registry_port | int) | list | length > 0
    fail_msg: "‚ùå Service registry mal configur√© ou manquant"
    success_msg: "‚úÖ Service registry correctement configur√©"
  tags:
    - validation
    - service

# =========================================================================
# VALIDATION DE LA CONNECTIVIT√â R√âSEAU
# =========================================================================
- name: "üîó [NETWORK] Test de r√©solution DNS interne"
  kubernetes.core.k8s_exec:
    namespace: "{{ lions_registry_namespace }}"
    pod: "{{ registry_pods_info.resources[0].metadata.name }}"
    command: >-
      nslookup {{ lions_registry_service_name }}.{{ lions_registry_namespace }}.svc.{{ lions_k8s_dns_domain }}
  register: registry_dns_check
  failed_when: registry_dns_check.rc != 0
  retries: 3
  delay: 5
  when: registry_pods_info.resources | length > 0
  tags:
    - validation
    - network

- name: "üîó [NETWORK] Test de connectivit√© interne au service"
  kubernetes.core.k8s_exec:
    namespace: "{{ lions_registry_namespace }}"
    pod: "{{ registry_pods_info.resources[0].metadata.name }}"
    command: >-
      curl -sf --max-time 10 
      http://{{ lions_registry_service_name }}.{{ lions_registry_namespace }}.svc.{{ lions_k8s_dns_domain }}:{{ lions_registry_port }}/v2/
  register: registry_internal_connectivity
  failed_when: registry_internal_connectivity.rc != 0
  retries: 5
  delay: 10
  when: registry_pods_info.resources | length > 0
  tags:
    - validation
    - network

# =========================================================================
# VALIDATION DE L'INGRESS (SI ACTIV√â)
# =========================================================================
- name: "üåç [INGRESS] V√©rification de la configuration Ingress"
  kubernetes.core.k8s_info:
    api_version: networking.k8s.io/v1
    kind: Ingress
    name: "{{ lions_registry_service_name }}"
    namespace: "{{ lions_registry_namespace }}"
  register: registry_ingress_info
  when: lions_security_tls_enabled | default(true) | bool
  tags:
    - validation
    - ingress

- name: "üåç [INGRESS] Validation de la configuration TLS"
  assert:
    that:
      - registry_ingress_info.resources | length == 1
      - registry_ingress_info.resources[0].spec.tls | length > 0
    fail_msg: "‚ùå Configuration Ingress/TLS incorrecte pour la registry"
    success_msg: "‚úÖ Configuration Ingress/TLS valid√©e"
  when:
    - lions_security_tls_enabled | default(true) | bool
    - registry_ingress_info.resources is defined
  tags:
    - validation
    - ingress

# =========================================================================
# VALIDATION DE LA SANT√â DE L'APPLICATION
# =========================================================================
- name: "üè• [HEALTH] Test des endpoints de sant√© de la registry"
  uri:
    url: "http://{{ lions_registry_service_name }}.{{ lions_registry_namespace }}.svc.{{ lions_k8s_dns_domain }}:{{ lions_registry_port }}/v2/"
    method: GET
    status_code: 200
    timeout: 30
    validate_certs: false
  register: registry_health_check
  retries: 10
  delay: 15
  until: registry_health_check.status == 200
  delegate_to: localhost
  run_once: true
  tags:
    - validation
    - health

- name: "üè• [HEALTH] Validation du catalogue de la registry"
  uri:
    url: "http://{{ lions_registry_service_name }}.{{ lions_registry_namespace }}.svc.{{ lions_k8s_dns_domain }}:{{ lions_registry_port }}/v2/_catalog"
    method: GET
    status_code: 200
    timeout: 30
    validate_certs: false
  register: registry_catalog_check
  retries: 5
  delay: 10
  delegate_to: localhost
  run_once: true
  tags:
    - validation
    - health

# =========================================================================
# VALIDATION DU STOCKAGE PERSISTANT
# =========================================================================
- name: "üíæ [STORAGE] V√©rification des PersistentVolumeClaims"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    namespace: "{{ lions_registry_namespace }}"
    label_selectors:
      - "app={{ lions_registry_service_name }}"
  register: registry_pvc_info
  tags:
    - validation
    - storage

- name: "üíæ [STORAGE] Validation de l'√©tat des PVCs"
  assert:
    that:
      - registry_pvc_info.resources | length > 0
      - item.status.phase == "Bound"
    fail_msg: "‚ùå PVC {{ item.metadata.name }} non li√© ({{ item.status.phase }})"
    success_msg: "‚úÖ PVC {{ item.metadata.name }} correctement li√©"
  loop: "{{ registry_pvc_info.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"
  tags:
    - validation
    - storage

# =========================================================================
# VALIDATION DU MONITORING (SI ACTIV√â)
# =========================================================================
- name: "üìä [MONITORING] V√©rification du ServiceMonitor"
  kubernetes.core.k8s_info:
    api_version: monitoring.coreos.com/v1
    kind: ServiceMonitor
    name: "{{ lions_registry_service_name }}"
    namespace: "{{ lions_registry_namespace }}"
  register: registry_servicemonitor_info
  when: lions_monitoring_enabled | default(true) | bool
  tags:
    - validation
    - monitoring

- name: "üìä [MONITORING] Validation du monitoring Prometheus"
  assert:
    that:
      - registry_servicemonitor_info.resources | length == 1
      - registry_servicemonitor_info.resources[0].spec.endpoints | length > 0
    fail_msg: "‚ùå ServiceMonitor registry mal configur√©"
    success_msg: "‚úÖ ServiceMonitor registry op√©rationnel"
  when:
    - lions_monitoring_enabled | default(true) | bool
    - registry_servicemonitor_info.resources is defined
  tags:
    - validation
    - monitoring

# =========================================================================
# VALIDATION DE LA S√âCURIT√â
# =========================================================================
- name: "üîí [SECURITY] V√©rification du ServiceAccount"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ServiceAccount
    name: "{{ lions_registry_service_name }}"
    namespace: "{{ lions_registry_namespace }}"
  register: registry_serviceaccount_info
  tags:
    - validation
    - security

- name: "üîí [SECURITY] Validation des politiques r√©seau"
  kubernetes.core.k8s_info:
    api_version: networking.k8s.io/v1
    kind: NetworkPolicy
    namespace: "{{ lions_registry_namespace }}"
    label_selectors:
      - "app={{ lions_registry_service_name }}"
  register: registry_networkpolicy_info
  when: lions_security_network_policies | default(true) | bool
  tags:
    - validation
    - security

# =========================================================================
# TESTS FONCTIONNELS
# =========================================================================
- name: "üß™ [FUNCTIONAL] Test d'upload d'image de test"
  block:
    - name: "üß™ [FUNCTIONAL] Cr√©ation d'une image de test"
      kubernetes.core.k8s_exec:
        namespace: "{{ lions_registry_namespace }}"
        pod: "{{ registry_pods_info.resources[0].metadata.name }}"
        command: >-
          sh -c "
          echo 'FROM alpine:latest' > /tmp/Dockerfile-test &&
          echo 'RUN echo \"Test registry LIONS\"' >> /tmp/Dockerfile-test
          "
      register: test_image_creation

    - name: "üß™ [FUNCTIONAL] Test de push/pull basique"
      kubernetes.core.k8s_exec:
        namespace: "{{ lions_registry_namespace }}"
        pod: "{{ registry_pods_info.resources[0].metadata.name }}"
        command: >-
          curl -sf --max-time 30 
          -X PUT "http://localhost:{{ lions_registry_port }}/v2/lions-test/manifests/latest"
          -H "Content-Type: application/vnd.docker.distribution.manifest.v2+json"
          -d '{"mediaType":"application/vnd.docker.distribution.manifest.v2+json","schemaVersion":2}'
      register: registry_push_test
      failed_when: false

  rescue:
    - name: "‚ö†Ô∏è  [FUNCTIONAL] Tests fonctionnels √©chou√©s (non bloquant)"
      debug:
        msg: "Les tests fonctionnels ont √©chou√©, mais la registry semble op√©rationnelle"

  when: lions_environment == "development"
  tags:
    - validation
    - functional

# =========================================================================
# COLLECTE DES M√âTRIQUES DE PERFORMANCE
# =========================================================================
- name: "üìà [METRICS] Collecte des m√©triques de ressources"
  kubernetes.core.k8s_exec:
    namespace: "{{ lions_registry_namespace }}"
    pod: "{{ registry_pods_info.resources[0].metadata.name }}"
    command: >-
      sh -c "
      echo 'CPU Usage:' && cat /sys/fs/cgroup/cpu/cpuacct.usage;
      echo 'Memory Usage:' && cat /proc/meminfo | grep MemAvailable
      "
  register: registry_metrics
  failed_when: false
  tags:
    - validation
    - metrics

# =========================================================================
# VALIDATION DES LOGS
# =========================================================================
- name: "üìù [LOGS] R√©cup√©ration des logs r√©cents"
  kubernetes.core.k8s_log:
    namespace: "{{ lions_registry_namespace }}"
    name: "{{ registry_pods_info.resources[0].metadata.name }}"
    container: "{{ lions_registry_service_name }}"
    tail_lines: 50
  register: registry_logs
  tags:
    - validation
    - logs

- name: "üìù [LOGS] Recherche d'erreurs critiques dans les logs"
  assert:
    that:
      - not (registry_logs.log | regex_search('FATAL|PANIC|CRITICAL'))
    fail_msg: "‚ùå Erreurs critiques d√©tect√©es dans les logs"
    success_msg: "‚úÖ Aucune erreur critique dans les logs"
  tags:
    - validation
    - logs

# =========================================================================
# CALCUL DES M√âTRIQUES DE VALIDATION
# =========================================================================
- name: "üìä [SUMMARY] Calcul des m√©triques de validation"
  set_fact:
    registry_validation_metrics:
      deployment_time: "{{ ansible_date_time.epoch | int - (deployment_start_time | default(ansible_date_time.epoch | int)) }}"
      pods_count: "{{ registry_pods_info.resources | length }}"
      pvc_count: "{{ registry_pvc_info.resources | length }}"
      health_status: "{{ 'healthy' if registry_health_check.status == 200 else 'unhealthy' }}"
      dns_resolution: "{{ 'ok' if registry_dns_check.rc == 0 else 'failed' }}"
      monitoring_enabled: "{{ lions_monitoring_enabled | default(true) }}"
      security_policies: "{{ lions_security_network_policies | default(true) }}"
      environment: "{{ lions_environment }}"
      version: "{{ lions_registry_version }}"
  tags:
    - validation
    - summary

# =========================================================================
# D√âFINITION DES URLS D'ACC√àS
# =========================================================================
- name: "üîó [ACCESS] Configuration des URLs d'acc√®s"
  set_fact:
    registry_access_urls:
      internal_service: "{{ lions_registry_service_name }}.{{ lions_registry_namespace }}.svc.{{ lions_k8s_dns_domain }}:{{ lions_registry_port }}"
      external_ingress: "registry.{{ lions_dns_full_domain }}"
      health_endpoint: "{{ lions_registry_service_name }}.{{ lions_registry_namespace }}.svc.{{ lions_k8s_dns_domain }}:{{ lions_registry_port }}/v2/"
      catalog_endpoint: "{{ lions_registry_service_name }}.{{ lions_registry_namespace }}.svc.{{ lions_k8s_dns_domain }}:{{ lions_registry_port }}/v2/_catalog"
  tags:
    - validation
    - access

# =========================================================================
# RAPPORT FINAL DE VALIDATION
# =========================================================================
- name: "üìã [REPORT] G√©n√©ration du rapport de validation"
  debug:
    msg:
      - "=================== RAPPORT DE VALIDATION ==================="
      - "üéØ Service: {{ lions_registry_service_name }}"
      - "üè∑Ô∏è  Version: {{ lions_registry_version }}"
      - "üåç Environnement: {{ lions_environment }}"
      - "üìä Pods d√©ploy√©s: {{ registry_validation_metrics.pods_count }}"
      - "üíæ Volumes persistants: {{ registry_validation_metrics.pvc_count }}"
      - "üè• √âtat de sant√©: {{ registry_validation_metrics.health_status }}"
      - "üîó DNS: {{ registry_validation_metrics.dns_resolution }}"
      - "üìä Monitoring: {{ 'Activ√©' if registry_validation_metrics.monitoring_enabled else 'D√©sactiv√©' }}"
      - "üîí Politiques s√©curit√©: {{ 'Activ√©es' if registry_validation_metrics.security_policies else 'D√©sactiv√©es' }}"
      - "‚è±Ô∏è  Temps de d√©ploiement: {{ registry_validation_metrics.deployment_time }}s"
      - ""
      - "üîó URLs d'acc√®s:"
      - "   ‚Ä¢ Service interne: {{ registry_access_urls.internal_service }}"
      - "   ‚Ä¢ Ingress externe: https://{{ registry_access_urls.external_ingress }}"
      - "   ‚Ä¢ Health check: {{ registry_access_urls.health_endpoint }}"
      - "   ‚Ä¢ Catalog: {{ registry_access_urls.catalog_endpoint }}"
      - ""
      - "‚úÖ Validation registry termin√©e avec succ√®s !"
      - "=========================================================="
  tags:
    - validation
    - report

# =========================================================================
# SAUVEGARDE DU RAPPORT
# =========================================================================
- name: "üíæ [REPORT] Sauvegarde du rapport de validation"
  copy:
    content: |
      # Rapport de Validation Registry LIONS
      **Date**: {{ ansible_date_time.iso8601 }}
      **Environnement**: {{ lions_environment }}
      **Version**: {{ lions_registry_version }}
      
      ## M√©triques de Validation
      {{ registry_validation_metrics | to_nice_yaml }}
      
      ## URLs d'Acc√®s
      {{ registry_access_urls | to_nice_yaml }}
      
      ## Statut: ‚úÖ SUCC√àS
    dest: "/tmp/lions-registry-validation-{{ ansible_date_time.epoch }}.md"
  delegate_to: localhost
  run_once: true
  when: lions_environment != "production"  # √âviter en production pour la s√©curit√©
  tags:
    - validation
    - report