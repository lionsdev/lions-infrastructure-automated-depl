---
# Titre: Validation post-déploiement pour la registry de conteneurs
# Description: Valide le déploiement de la registry de conteneurs Docker
# Auteur: Équipe LIONS Infrastructure
# Date: 2025-05-10
# Version: 1.0.0

- name: Récupération des informations sur les pods après initialisation
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ app_namespace | default('registry') }}"
    label_selectors:
      - app={{ app_name | default('registry') }}
  register: pods_info_after_init

- name: Vérification que les pods de la registry sont en cours d'exécution
  debug:
    msg: "{{ pods_info_after_init.resources | length }} pod(s) de la registry trouvé(s). État du premier pod: {{ pods_info_after_init.resources[0].status.phase | default('Inconnu') }}"
  when: pods_info_after_init.resources | length > 0

- name: Avertissement si aucun pod de la registry n'est trouvé
  debug:
    msg: "AVERTISSEMENT: Aucun pod de la registry n'a été trouvé. Le déploiement a peut-être échoué."
  when: pods_info_after_init.resources | length == 0

- name: Attente que la registry soit prête
  uri:
    url: "http://{{ app_name | default('registry') }}.{{ app_namespace | default('registry') }}.svc.cluster.local:{{ registry_default_port | default(5000) }}{{ registry_health_path | default('/v2/') }}"
    method: GET
    status_code: 200
    validate_certs: no
  register: health_check
  until: health_check.status == 200
  retries: 30
  delay: 10
  ignore_errors: yes
  when: pods_info_after_init.resources | length > 0

- name: Vérification de l'état de santé de la registry
  debug:
    msg: "La registry {{ app_name | default('registry') }} est en bonne santé et prête à recevoir des requêtes."
  when: health_check is defined and health_check is succeeded

- name: Avertissement si la registry n'est pas en bonne santé
  debug:
    msg: "AVERTISSEMENT: La registry {{ app_name | default('registry') }} n'est pas en bonne santé. Vérifiez les logs pour plus d'informations."
  when: health_check is defined and health_check is failed

- name: Affichage des détails de l'erreur de la registry
  debug:
    msg: 
      - "Détails de l'erreur:"
      - "Status: {{ health_check.status | default('Non disponible') }}"
      - "Message: {{ health_check.msg | default('Non disponible') }}"
  when: health_check is defined and health_check is failed

- name: Affichage de l'URL d'accès
  set_fact:
    service_url: "{{ app_name | default('registry') }}.{{ app_namespace | default('registry') }}.svc.cluster.local:{{ registry_default_port | default(5000) }}"
    ingress_url: "{{ app_name | default('registry') }}.{{ app_environment | default('development') }}.lions.dev"

- name: Affichage des informations d'accès
  debug:
    msg: 
      - "La registry {{ app_name | default('registry') }} est accessible à l'adresse interne: {{ service_url }}"
      - "La registry {{ app_name | default('registry') }} est accessible à l'adresse externe: https://{{ ingress_url }} (si l'ingress est configuré)"

- name: Test de connexion à la registry
  kubernetes.core.k8s_exec:
    namespace: "{{ app_namespace | default('registry') }}"
    pod: "{{ pods_info_after_init.resources[0].metadata.name }}"
    command: >
      curl -s -f http://localhost:{{ registry_default_port | default(5000) }}/v2/
  register: registry_connection
  failed_when: false
  when: pods_info_after_init.resources | length > 0

- name: Affichage du statut de connexion à la registry
  debug:
    msg: "La connexion à la registry est {{ 'établie' if registry_connection.rc == 0 else 'impossible' }}."
  when: pods_info_after_init.resources | length > 0

- name: Récupération des logs de la registry
  kubernetes.core.k8s_log:
    namespace: "{{ app_namespace | default('registry') }}"
    name: "{{ pods_info_after_init.resources[0].metadata.name }}"
    container: "{{ app_name | default('registry') }}"
  register: registry_logs
  when: pods_info_after_init.resources | length > 0

- name: Vérification des erreurs dans les logs
  debug:
    msg: "AVERTISSEMENT: Des erreurs ont été détectées dans les logs de la registry. Veuillez les vérifier."
  when: pods_info_after_init.resources | length > 0 and registry_logs.log is search("ERROR")

- name: Résumé du déploiement
  debug:
    msg: "Le déploiement de la registry {{ app_name | default('registry') }} en version {{ app_version | default('latest') }} est terminé avec succès."
  when: health_check is defined and health_check is succeeded

- name: Résumé du déploiement (échec)
  debug:
    msg: "Le déploiement de la registry {{ app_name | default('registry') }} en version {{ app_version | default('latest') }} a échoué. Veuillez vérifier les logs et la configuration."
  when: pods_info_after_init.resources | length == 0 or (health_check is defined and health_check is failed)
