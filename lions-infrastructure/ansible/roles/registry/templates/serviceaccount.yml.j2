# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - SERVICEACCOUNT TEMPLATE - REGISTRY
# =========================================================================
# Description: Template ServiceAccount Kubernetes pour le service Registry
# Version: 5.0.0
# Date: {{ ansible_date_time.iso8601 }}
# Maintainer: {{ lions_config_maintainer | default('devops@lions.dev') }}
# Environment: {{ lions_environment | upper }}
# =========================================================================

apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ lions_registry_service_name | default('registry') }}"
  namespace: "{{ lions_registry_namespace | default('development') }}"
  labels:
    # Labels standardisés LIONS
    app.kubernetes.io/name: "{{ lions_registry_service_name | default('registry') }}"
    app.kubernetes.io/instance: "{{ lions_registry_service_name | default('registry') }}-{{ lions_environment }}"
    app.kubernetes.io/version: "{{ lions_registry_version | default('2.8') }}"
    app.kubernetes.io/component: "container-registry"
    app.kubernetes.io/part-of: "lions-infrastructure"
    app.kubernetes.io/managed-by: "ansible"

    # Labels métier LIONS
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/service-type: "infrastructure"
    lions.dev/service-category: "development"
    lions.dev/backup-policy: "{{ lions_backup_enabled | default('true') | string }}"
    lions.dev/monitoring-enabled: "{{ lions_monitoring_enabled | default('true') | string }}"
    lions.dev/security-profile: "{{ lions_security_pod_security_standards | default('restricted') }}"

    # Labels techniques
    app: "{{ lions_registry_service_name | default('registry') }}"
    version: "{{ lions_registry_version | default('2.8') }}"
    environment: "{{ lions_environment }}"
    technology: "docker-registry"
    tier: "infrastructure"
{% if lions_registry_enabled | default(true) %}

    # Labels de déploiement
    deployment.lions.dev/strategy: "rolling"
    deployment.lions.dev/canary-enabled: "false"
    deployment.lions.dev/rollback-enabled: "true"
{% endif %}

  annotations:
    # Annotations de description
    description: "ServiceAccount pour Registry Docker - Environment {{ lions_environment | upper }}"

    # Annotations de configuration
    config.lions.dev/created-by: "ansible-role-registry"
    config.lions.dev/config-version: "{{ lions_config_version | default('5.0.0') }}"
    config.lions.dev/last-applied: "{{ ansible_date_time.iso8601 }}"
    config.lions.dev/checksum: "{{ (lions_registry_service_name + lions_registry_namespace + lions_registry_version) | hash('sha256') }}"

{% if lions_monitoring_enabled | default(true) %}
    # Annotations de monitoring
    monitoring.lions.dev/scrape: "true"
    monitoring.lions.dev/path: "/metrics"
    monitoring.lions.dev/port: "{{ lions_registry_port | default('5000') }}"
    monitoring.lions.dev/scheme: "{% if lions_security_tls_enabled | default(true) %}https{% else %}http{% endif %}"
{% endif %}

{% if lions_backup_enabled | default(true) %}
    # Annotations de sauvegarde
    backup.lions.dev/enabled: "true"
    backup.lions.dev/schedule: "{{ lions_backup_schedule | default('0 2 * * *') }}"
    backup.lions.dev/retention: "{{ lions_backup_retention_days | default('30') }}d"
    backup.lions.dev/storage-class: "{{ lions_backup_storage_class | default('standard') }}"
{% endif %}

{% if lions_security_rbac_enabled | default(true) %}
    # Annotations de sécurité
    security.lions.dev/pod-security-standards: "{{ lions_security_pod_security_standards | default('restricted') }}"
    security.lions.dev/network-policies: "{{ lions_security_network_policies | default('true') | string }}"
    security.lions.dev/rbac-enabled: "true"
    security.lions.dev/service-mesh-injection: "{{ lions_security_service_mesh_enabled | default('false') | string }}"
{% endif %}

{% if lions_vault_enabled | default(true) %}
    # Annotations Vault
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/agent-inject-status: "update"
    vault.hashicorp.com/role: "{{ lions_registry_service_name | default('registry') }}-{{ lions_environment }}"
    vault.hashicorp.com/agent-inject-secret-registry-config: "secret/{{ lions_environment }}/registry/config"
    vault.hashicorp.com/agent-inject-template-registry-config: |
      {{`{{- with secret "secret/{{ lions_environment }}/registry/config" -}}
      export REGISTRY_AUTH_HTPASSWD_REALM="Registry Realm"
      export REGISTRY_AUTH_HTPASSWD_PATH="/auth/htpasswd"
      export REGISTRY_HTTP_SECRET="{{ .Data.data.http_secret }}"
      {{- if .Data.data.storage_s3_accesskey }}
      export REGISTRY_STORAGE_S3_ACCESSKEY="{{ .Data.data.storage_s3_accesskey }}"
      export REGISTRY_STORAGE_S3_SECRETKEY="{{ .Data.data.storage_s3_secretkey }}"
      {{- end }}
      {{- end }}`}}
{% endif %}

{% if lions_environment == 'production' %}
    # Annotations spécifiques à la production
    production.lions.dev/sla-tier: "tier-1"
    production.lions.dev/disaster-recovery: "enabled"
    production.lions.dev/compliance-required: "true"
{% endif %}

{% if lions_audit_enabled | default(true) %}
    # Annotations d'audit
    audit.lions.dev/enabled: "true"
    audit.lions.dev/log-level: "{{ lions_audit_log_level | default('INFO') }}"
    audit.lions.dev/retention: "{{ lions_audit_retention_days | default('90') }}d"
{% endif %}

automountServiceAccountToken: {{ lions_security_rbac_enabled | default(true) | string }}

{% if lions_registry_image_pull_secrets is defined and lions_registry_image_pull_secrets | length > 0 %}
imagePullSecrets:
{% for secret in lions_registry_image_pull_secrets %}
  - name: "{{ secret }}"
{% endfor %}
{% endif %}

{% if lions_security_rbac_enabled | default(true) %}
# Secrets liés automatiquement au ServiceAccount
secrets:
  - name: "{{ lions_registry_service_name | default('registry') }}-token"
{% endif %}

---
{% if lions_security_rbac_enabled | default(true) %}
# =========================================================================
# TOKEN SECRET POUR LE SERVICEACCOUNT
# =========================================================================
apiVersion: v1
kind: Secret
metadata:
  name: "{{ lions_registry_service_name | default('registry') }}-token"
  namespace: "{{ lions_registry_namespace | default('development') }}"
  labels:
    app.kubernetes.io/name: "{{ lions_registry_service_name | default('registry') }}"
    app.kubernetes.io/instance: "{{ lions_registry_service_name | default('registry') }}-{{ lions_environment }}"
    app.kubernetes.io/component: "serviceaccount-token"
    app.kubernetes.io/part-of: "lions-infrastructure"
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/service-type: "infrastructure"
  annotations:
    kubernetes.io/service-account.name: "{{ lions_registry_service_name | default('registry') }}"
    description: "Token automatique pour le ServiceAccount Registry"
type: kubernetes.io/service-account-token
{% endif %}

---
{% if lions_vault_enabled | default(true) and lions_security_rbac_enabled | default(true) %}
# =========================================================================
# ROLE VAULT POUR L'AUTHENTIFICATION
# =========================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ lions_registry_service_name | default('registry') }}-vault-role"
  namespace: "{{ lions_registry_namespace | default('development') }}"
  labels:
    app.kubernetes.io/name: "{{ lions_registry_service_name | default('registry') }}"
    app.kubernetes.io/component: "vault-role"
    app.kubernetes.io/part-of: "lions-infrastructure"
    lions.dev/environment: "{{ lions_environment }}"
  annotations:
    description: "Configuration du rôle Vault pour Registry"
data:
  vault-role.json: |
    {
      "bound_service_account_names": ["{{ lions_registry_service_name | default('registry') }}"],
      "bound_service_account_namespaces": ["{{ lions_registry_namespace | default('development') }}"],
      "policies": [
        "{{ lions_registry_service_name | default('registry') }}-{{ lions_environment }}-read",
        "default"
      ],
      "ttl": "24h",
      "max_ttl": "72h"
    }
{% endif %}

---
{% if lions_monitoring_enabled | default(true) %}
# =========================================================================
# SERVICEACCOUNT POUR LE MONITORING
# =========================================================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ lions_registry_service_name | default('registry') }}-monitoring"
  namespace: "{{ lions_registry_namespace | default('development') }}"
  labels:
    app.kubernetes.io/name: "{{ lions_registry_service_name | default('registry') }}"
    app.kubernetes.io/instance: "{{ lions_registry_service_name | default('registry') }}-{{ lions_environment }}"
    app.kubernetes.io/component: "monitoring"
    app.kubernetes.io/part-of: "lions-infrastructure"
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/service-type: "monitoring"
  annotations:
    description: "ServiceAccount dédié au monitoring de Registry"
automountServiceAccountToken: true
{% endif %}