---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - NOTIFICATION SERVICE PREPARATION TASKS
# =========================================================================
# Titre: Pr√©paration des ressources pour le service de notification
# Description: Pr√©pare et valide toutes les ressources n√©cessaires pour le d√©ploiement du service de notification
# √âquipe: LIONS DevOps Team
# Version: 5.0.0
# Date: "{{ ansible_date_time.iso8601 }}"
# Documentation: https://docs.lions.dev/notification/preparation
# =========================================================================

# =========================================================================
# VARIABLES ET VALIDATION INITIALE
# =========================================================================
- name: "üîç [NOTIFICATION-PREP] Validation des variables d'environnement critiques"
  assert:
    that:
      - notification_enabled is defined
      - notification_namespace is defined
      - notification_dns.full_domain is defined
      - notification_service_meta.version is defined
      - notification_environment is defined
    fail_msg: "‚ùå Variables d'environnement LIONS critiques manquantes pour le service de notification"
    success_msg: "‚úÖ Variables d'environnement valid√©es"
  tags: [validation, environment]

- name: "üìä [NOTIFICATION-PREP] Affichage de la configuration du service de notification"
  debug:
    msg:
      - "üèóÔ∏è  Environnement: {{ notification_environment }}"
      - "üì¶ Version: {{ notification_service_meta.version }}"
      - "üåê Namespace: {{ notification_namespace }}"
      - "üîó Domaine: {{ notification_dns.full_domain }}"
      - "üíæ Stockage: {{ notification_storage.enabled }}"
      - "üîê TLS activ√©: {{ notification_tls.enabled }}"
  when: notification_debug.enabled | default(false) | bool
  tags: [debug, info]

# =========================================================================
# PR√âPARATION DE L'ENVIRONNEMENT
# =========================================================================
- name: "üìÅ [NOTIFICATION-PREP] Cr√©ation du r√©pertoire temporaire pour les templates"
  tempfile:
    state: directory
    suffix: "notification-deploy-{{ ansible_date_time.epoch }}"
    prefix: "lions-"
  register: lions_notification_temp_dir
  changed_when: false
  failed_when: lions_notification_temp_dir.path is not defined
  tags: [preparation, filesystem]

- name: "üìÇ [NOTIFICATION-PREP] V√©rification des permissions du r√©pertoire temporaire"
  file:
    path: "{{ lions_notification_temp_dir.path }}"
    mode: '0750'
    state: directory
  tags: [preparation, security]

- name: "üßπ [NOTIFICATION-PREP] Nettoyage pr√©ventif des anciennes ressources temporaires"
  find:
    paths: "/tmp"
    patterns: "lions-notification-deploy-*"
    file_type: directory
    age: "1h"
  register: old_temp_dirs
  tags: [preparation, cleanup]

- name: "üóëÔ∏è  [NOTIFICATION-PREP] Suppression des r√©pertoires temporaires obsol√®tes"
  file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ old_temp_dirs.files }}"
  when: old_temp_dirs.files | length > 0
  tags: [preparation, cleanup]

# =========================================================================
# G√âN√âRATION DES TEMPLATES KUBERNETES
# =========================================================================
- name: "üèóÔ∏è  [NOTIFICATION-PREP] G√©n√©ration des manifestes Kubernetes depuis les templates"
  template:
    src: "{{ item.src }}"
    dest: "{{ lions_notification_temp_dir.path }}/{{ item.dest }}"
    mode: '0640'
    backup: false
  loop:
    - { src: "serviceaccount.yml.j2", dest: "01-serviceaccount.yml", priority: 1 }
    - { src: "configmap.yml.j2", dest: "02-configmap.yml", priority: 2 }
    - { src: "service.yml.j2", dest: "03-service.yml", priority: 3 }
    - { src: "deployment.yml.j2", dest: "04-deployment.yml", priority: 4 }
    - { src: "ingress.yml.j2", dest: "05-ingress.yml", priority: 5 }
    - { src: "servicemonitor.yml.j2", dest: "06-servicemonitor.yml", priority: 6 }
  register: lions_notification_templates_generated
  notify:
    - validate notification configuration
    - cleanup temporary files
  tags: [templates, kubernetes]

- name: "‚úÖ [NOTIFICATION-PREP] Validation de la g√©n√©ration des templates"
  stat:
    path: "{{ lions_notification_temp_dir.path }}/{{ item.dest }}"
    get_checksum: true
  loop: "{{ lions_notification_templates_generated.results }}"
  register: lions_notification_files_validation
  failed_when: not lions_notification_files_validation.results[item.0].stat.exists
  loop_control:
    index_var: item_index
    label: "{{ item.dest }}"
  tags: [validation, templates]

- name: "üìã [NOTIFICATION-PREP] Validation syntaxique des manifestes YAML"
  shell: |
    if command -v yamllint >/dev/null 2>&1; then
      yamllint "{{ item.invocation.dest }}" || echo "WARN: yamllint validation failed for {{ item.invocation.dest }}"
    else
      python3 -c "import yaml; yaml.safe_load(open('{{ item.invocation.dest }}', 'r'))" && echo "‚úÖ YAML syntax valid"
    fi
  loop: "{{ lions_notification_templates_generated.results }}"
  register: lions_notification_yaml_validation
  failed_when:
    - lions_notification_yaml_validation.rc != 0
    - "'WARN:' not in lions_notification_yaml_validation.stdout"
  changed_when: false
  tags: [validation, yaml]

# =========================================================================
# PR√âPARATION DES SECRETS ET S√âCURIT√â
# =========================================================================
- name: "üîç [NOTIFICATION-PREP] V√©rification de l'existence du namespace cible"
  k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ notification_namespace }}"
  register: lions_notification_namespace_info
  tags: [validation, namespace]

- name: "üìõ [NOTIFICATION-PREP] Cr√©ation du namespace si n√©cessaire"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ notification_namespace }}"
        labels:
          app.kubernetes.io/name: notification-service
          app.kubernetes.io/component: notification
          app.kubernetes.io/part-of: lions-infrastructure
          lions.dev/environment: "{{ notification_environment }}"
          lions.dev/managed-by: ansible
          pod-security.kubernetes.io/enforce: restricted
          pod-security.kubernetes.io/audit: restricted
          pod-security.kubernetes.io/warn: restricted
  when: lions_notification_namespace_info.resources | length == 0
  tags: [namespace, security]

- name: "üîê [NOTIFICATION-PREP] V√©rification des secrets critiques pour le service de notification"
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ notification_namespace }}"
    name: "{{ item.name }}"
  register: lions_notification_secrets_check
  loop:
    - name: "{{ notification_secrets.admin.password_secret }}"
      description: "Identifiants administrateur du service de notification"
      required: true
    - name: "{{ notification_secrets.api.key_secret }}"
      description: "Cl√© API du service de notification"
      required: true
    - name: "{{ notification_app_config.channels.email.user_secret }}"
      description: "Identifiants SMTP"
      required: false
    - name: "{{ notification_app_config.channels.slack.webhook_secret }}"
      description: "Webhook Slack"
      required: false
  loop_control:
    label: "{{ item.description }}"
  failed_when: false
  tags: [validation, secrets]

- name: "‚ö†Ô∏è  [NOTIFICATION-PREP] Rapport des secrets manquants"
  debug:
    msg: "‚ùå Secret manquant: {{ item.item.name }} ({{ item.item.description }})"
  loop: "{{ lions_notification_secrets_check.results }}"
  when:
    - item.resources | length == 0
    - item.item.required | default(false)
  loop_control:
    label: "{{ item.item.name }}"
  tags: [validation, secrets]

- name: "üîë [NOTIFICATION-PREP] G√©n√©ration du secret JWT s'il n'existe pas"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ notification_secrets.jwt.secret_name }}"
        namespace: "{{ notification_namespace }}"
        labels:
          app.kubernetes.io/name: notification-service
          app.kubernetes.io/component: jwt-secret
          lions.dev/environment: "{{ notification_environment }}"
          lions.dev/managed-by: ansible
      type: Opaque
      data:
        jwt-secret: "{{ (ansible_date_time.epoch + ansible_hostname) | hash('sha256') | b64encode }}"
  when:
    - lions_notification_secrets_check.results | selectattr('item.name', 'equalto', notification_secrets.jwt.secret_name) | map(attribute='resources') | first | length == 0
  tags: [secrets, security]

# =========================================================================
# CR√âATION DES CONFIGMAPS POUR LES TEMPLATES DE NOTIFICATION
# =========================================================================
- name: "üìß [NOTIFICATION-PREP] Cr√©ation du ConfigMap pour les templates d'email"
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ notification_service_name }}-email-templates"
        namespace: "{{ notification_namespace }}"
        labels:
          app.kubernetes.io/name: notification-service
          app.kubernetes.io/component: email-templates
          lions.dev/environment: "{{ notification_environment }}"
        annotations:
          description: "Templates d'email pour le service de notification"
      data:
        "welcome_fr.html": |
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Bienvenue</title>
          </head>
          <body>
            <h1>Bienvenue sur notre plateforme !</h1>
            <p>Bonjour {{name}},</p>
            <p>Nous sommes ravis de vous accueillir sur notre plateforme.</p>
            <p>Cordialement,<br>L'√©quipe LIONS</p>
          </body>
          </html>
        "welcome_en.html": |
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Welcome</title>
          </head>
          <body>
            <h1>Welcome to our platform!</h1>
            <p>Hello {{name}},</p>
            <p>We are delighted to welcome you to our platform.</p>
            <p>Best regards,<br>The LIONS Team</p>
          </body>
          </html>
        "alert_fr.html": |
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Alerte</title>
          </head>
          <body>
            <h1>Alerte Syst√®me</h1>
            <p>Une alerte a √©t√© d√©clench√©e : {{alert_message}}</p>
            <p>Niveau de s√©v√©rit√© : {{severity}}</p>
            <p>Timestamp : {{timestamp}}</p>
          </body>
          </html>
        "alert_en.html": |
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="UTF-8">
            <title>Alert</title>
          </head>
          <body>
            <h1>System Alert</h1>
            <p>An alert has been triggered: {{alert_message}}</p>
            <p>Severity level: {{severity}}</p>
            <p>Timestamp: {{timestamp}}</p>
          </body>
          </html>
  register: email_templates_result
  when: notification_app_config.channels.email.enabled | bool
  tags: [templates, email]

# =========================================================================
# CR√âATION DES RESSOURCES KUBERNETES PR√âPARATOIRES
# =========================================================================
- name: "üèóÔ∏è  [NOTIFICATION-PREP] Cr√©ation du compte de service"
  k8s:
    state: present
    src: "{{ lions_notification_temp_dir.path }}/01-serviceaccount.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
    wait_condition:
      type: Ready
      status: "True"
  register: lions_notification_serviceaccount_result
  tags: [kubernetes, serviceaccount]

- name: "üóÉÔ∏è  [NOTIFICATION-PREP] Cr√©ation du ConfigMap de configuration"
  k8s:
    state: present
    src: "{{ lions_notification_temp_dir.path }}/02-configmap.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
  register: lions_notification_configmap_result
  tags: [kubernetes, configmap]

- name: "üíæ [NOTIFICATION-PREP] Cr√©ation du PersistentVolumeClaim (si stockage activ√©)"
  k8s:
    state: present
    definition: "{{ lookup('template', 'persistentvolumeclaim.yml.j2') | from_yaml }}"
    wait: true
    wait_timeout: "{{ lions_timeout_default | default(300) }}"
    wait_condition:
      type: Bound
      status: "True"
  register: lions_notification_pvc_result
  when: notification_storage.enabled | bool
  tags: [kubernetes, storage]

# =========================================================================
# VALIDATION ET V√âRIFICATIONS FINALES
# =========================================================================
- name: "üîç [NOTIFICATION-PREP] V√©rification de l'√©tat des ressources cr√©√©es"
  k8s_info:
    api_version: "{{ item.api_version }}"
    kind: "{{ item.kind }}"
    namespace: "{{ notification_namespace }}"
    name: "{{ item.name }}"
  register: lions_notification_resources_check
  loop:
    - api_version: v1
      kind: ServiceAccount
      name: "{{ notification_service_name }}"
    - api_version: v1
      kind: ConfigMap
      name: "{{ notification_service_name }}-config"
  failed_when: item.resources | length == 0
  loop_control:
    label: "{{ item.kind }}/{{ item.name }}"
  tags: [validation, resources]

- name: "üìä [NOTIFICATION-PREP] Collecte des m√©triques de pr√©paration"
  set_fact:
    lions_notification_preparation_metrics:
      namespace_created: "{{ lions_notification_namespace_info.resources | length == 0 }}"
      secrets_validated: "{{ lions_notification_secrets_check.results | length }}"
      templates_generated: "{{ lions_notification_templates_generated.results | length }}"
      resources_created: "{{ lions_notification_resources_check.results | length }}"
      preparation_duration: "{{ ansible_date_time.epoch | int - (lions_notification_temp_dir.stat.mtime | default(ansible_date_time.epoch)) | int }}"
  tags: [metrics, reporting]

- name: "üìà [NOTIFICATION-PREP] Rapport de pr√©paration"
  debug:
    msg:
      - "‚úÖ Pr√©paration du service de notification termin√©e avec succ√®s"
      - "üìä M√©triques:"
      - "  - Namespace cr√©√©: {{ lions_notification_preparation_metrics.namespace_created }}"
      - "  - Secrets valid√©s: {{ lions_notification_preparation_metrics.secrets_validated }}"
      - "  - Templates g√©n√©r√©s: {{ lions_notification_preparation_metrics.templates_generated }}"
      - "  - Ressources cr√©√©es: {{ lions_notification_preparation_metrics.resources_created }}"
      - "  - Dur√©e: {{ lions_notification_preparation_metrics.preparation_duration }}s"
      - "üöÄ Pr√™t pour le d√©ploiement"
  tags: [reporting, summary]

# =========================================================================
# ENREGISTREMENT POUR LES √âTAPES SUIVANTES
# =========================================================================
- name: "üìù [NOTIFICATION-PREP] Enregistrement des chemins des templates pour les √©tapes suivantes"
  set_fact:
    lions_notification_templates_path: "{{ lions_notification_temp_dir.path }}"
    lions_notification_deployment_ready: true
  tags: [state, handoff]

# =========================================================================
# POINTS DE CONTR√îLE POUR AUDIT
# =========================================================================
- name: "üìã [NOTIFICATION-PREP] Cr√©ation du rapport d'audit de pr√©paration"
  copy:
    content: |
      # Rapport d'Audit - Pr√©paration Service de Notification
      Date: {{ ansible_date_time.iso8601 }}
      Environnement: {{ notification_environment }}
      Version: {{ notification_service_meta.version }}
      Namespace: {{ notification_namespace }}
      Utilisateur Ansible: {{ ansible_user | default('unknown') }}
      H√¥te de contr√¥le: {{ inventory_hostname }}
      
      ## Ressources cr√©√©es
      {% for result in lions_notification_resources_check.results %}
      - {{ result.item.kind }}/{{ result.item.name }}: ‚úÖ Cr√©√©
      {% endfor %}
      
      ## Secrets valid√©s
      {% for secret in lions_notification_secrets_check.results %}
      - {{ secret.item.name }}: {{ '‚úÖ Pr√©sent' if secret.resources | length > 0 else '‚ùå Manquant' }}
      {% endfor %}
      
      ## M√©triques
      - Dur√©e de pr√©paration: {{ lions_notification_preparation_metrics.preparation_duration }}s
      - Templates g√©n√©r√©s: {{ lions_notification_preparation_metrics.templates_generated }}
    dest: "{{ lions_notification_temp_dir.path }}/preparation-audit.md"
    mode: '0640'
  when: lions_audit_enabled | default(true) | bool
  tags: [audit, documentation]