---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - NOTIFICATION SERVICE PERSISTENT VOLUME CLAIM
# =========================================================================
# Description: Template Kubernetes PersistentVolumeClaim pour le service de notification
# Version: 5.0.0
# Maintainer: LIONS DevOps Team
# Documentation: https://docs.lions.dev/infrastructure/storage/notification
# =========================================================================
# Variables requises:
#   - LIONS_NOTIFICATION_ENABLED: Active/désactive le service de notification
#   - LIONS_NOTIFICATION_NAMESPACE: Namespace de déploiement
#   - LIONS_NOTIFICATION_STORAGE_SIZE: Taille du stockage
#   - LIONS_STORAGE_CLASS_DEFAULT: Classe de stockage par défaut
#   - LIONS_ENVIRONMENT: Environnement de déploiement
# =========================================================================

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ notification_component_name | default('notification-service') }}-pvc"
  namespace: "{{ lookup('env', 'LIONS_NOTIFICATION_NAMESPACE') | default('services') }}"
  labels:
    # Labels standards LIONS Infrastructure 5.0
    app.kubernetes.io/name: "{{ notification_component_name | default('notification-service') }}"
    app.kubernetes.io/instance: "{{ notification_component_name | default('notification-service') }}-{{ lookup('env', 'LIONS_ENVIRONMENT') | default('development') }}"
    app.kubernetes.io/version: "{{ lookup('env', 'LIONS_NOTIFICATION_VERSION') | default('1.0.0') }}"
    app.kubernetes.io/component: "storage"
    app.kubernetes.io/part-of: "lions-infrastructure"
    app.kubernetes.io/managed-by: "ansible"

    # Labels métier LIONS
    lions.dev/environment: "{{ lookup('env', 'LIONS_ENVIRONMENT') | default('development') }}"
    lions.dev/project: "lions-infrastructure"
    lions.dev/version: "{{ lookup('env', 'LIONS_CONFIG_VERSION') | default('5.0.0') }}"
    lions.dev/service-type: "notification-service"
    lions.dev/data-classification: "internal"
    lions.dev/backup-policy: "{{ 'enabled' if (lookup('env', 'LIONS_BACKUP_ENABLED') | default('true') | bool) else 'disabled' }}"

    # Labels techniques
    storage.lions.dev/class: "{{ lookup('env', 'LIONS_STORAGE_CLASS_DEFAULT') | default('local-path') }}"
    storage.lions.dev/size: "{{ lookup('env', 'LIONS_NOTIFICATION_STORAGE_SIZE') | default('1Gi') }}"
    storage.lions.dev/access-mode: "ReadWriteOnce"
    storage.lions.dev/reclaim-policy: "{{ lookup('env', 'LIONS_STORAGE_RECLAIM_POLICY') | default('Retain') }}"

    # Labels de monitoring
    monitoring.lions.dev/enabled: "{{ 'true' if (lookup('env', 'LIONS_MONITORING_ENABLED') | default('true') | bool) else 'false' }}"
    monitoring.lions.dev/scrape: "false"  # PVC n'expose pas de métriques

  annotations:
    # Annotations de documentation
    description: "PersistentVolumeClaim pour le service de notification - Service de gestion des notifications"
    documentation: "https://docs.lions.dev/infrastructure/storage/notification"
    support.contact: "{{ lookup('env', 'LIONS_CONFIG_MAINTAINER') | default('devops@lions.dev') }}"

    # Annotations de déploiement
    deployment.lions.dev/created-by: "ansible"
    deployment.lions.dev/created-at: "{{ ansible_date_time.iso8601 }}"
    deployment.lions.dev/config-version: "{{ lookup('env', 'LIONS_CONFIG_VERSION') | default('5.0.0') }}"

    # Annotations de stockage
    storage.lions.dev/provisioner: "{{ lookup('env', 'LIONS_STORAGE_PROVISIONER') | default('rancher.io/local-path') }}"
    storage.lions.dev/backup-schedule: "{{ lookup('env', 'LIONS_BACKUP_SCHEDULE') | default('0 2 * * *') }}"
    storage.lions.dev/retention-days: "{{ lookup('env', 'LIONS_BACKUP_RETENTION_DAYS') | default('30') }}"

    # Annotations de sécurité
    security.lions.dev/data-classification: "internal"
    security.lions.dev/encryption-at-rest: "{{ 'enabled' if (lookup('env', 'LIONS_SECURITY_ENCRYPTION_AT_REST') | default('true') | bool) else 'disabled' }}"

    # Annotations conditionnelles pour la production
{% if lookup('env', 'LIONS_ENVIRONMENT') == 'production' %}
    storage.lions.dev/critical: "true"
    backup.lions.dev/priority: "high"
    monitoring.lions.dev/alert-on-full: "true"
{% endif %}

{% if lookup('env', 'LIONS_BACKUP_EXTERNAL_ENABLED') | default('false') | bool %}
    backup.lions.dev/external-enabled: "true"
    backup.lions.dev/external-type: "{{ lookup('env', 'LIONS_BACKUP_EXTERNAL_TYPE') | default('s3') }}"
    backup.lions.dev/external-bucket: "{{ lookup('env', 'LIONS_BACKUP_EXTERNAL_BUCKET') | default('lions-backup-' + lookup('env', 'LIONS_ENVIRONMENT')) }}"
{% endif %}

spec:
  # Configuration d'accès
  accessModes:
    - ReadWriteOnce

  # Classe de stockage avec fallback intelligent
  storageClassName: "{{ lookup('env', 'LIONS_STORAGE_CLASS_DEFAULT') | default('local-path') }}"

  # Demande de ressources avec validation
  resources:
    requests:
      storage: "{{ lookup('env', 'LIONS_NOTIFICATION_STORAGE_SIZE') | default('1Gi') }}"

  # Sélecteur de volume (optionnel pour liaison à un PV spécifique)
{% if notification_pv_selector is defined %}
  selector:
    matchLabels:
      {{ notification_pv_selector | to_nice_yaml | indent(6) }}
{% endif %}

{% if lookup('env', 'LIONS_STORAGE_CLASS_DEFAULT') == 'local-path' %}
  # Configuration spécifique pour local-path
  volumeMode: Filesystem
{% endif %}

  # =========================================================================
  # VALIDATION DU TEMPLATE
  # =========================================================================
  # Les conditions suivantes doivent être vérifiées avant le déploiement:
  # 1. LIONS_NOTIFICATION_ENABLED doit être 'true'
  # 2. LIONS_NOTIFICATION_NAMESPACE doit être défini
  # 3. LIONS_NOTIFICATION_STORAGE_SIZE doit être un format valide (ex: 1Gi)
  # 4. La classe de stockage doit exister dans le cluster
  # =========================================================================

  # Validation Jinja2 (sera vérifiée lors du rendu du template)
{% if not lookup('env', 'LIONS_NOTIFICATION_ENABLED') | default('false') | bool %}
  # ERREUR: Le service de notification n'est pas activé dans la configuration
  # Veuillez définir LIONS_NOTIFICATION_ENABLED=true dans votre fichier .env
{% endif %}

{% set storage_size = lookup('env', 'LIONS_NOTIFICATION_STORAGE_SIZE') | default('1Gi') %}
{% if not storage_size | regex_search('^[0-9]+[KMGT]i?$') %}
  # ERREUR: Format de taille de stockage invalide: {{ storage_size }}
  # Format attendu: nombre suivi de K/M/G/T et optionnellement 'i' (ex: 1Gi, 500M)
{% endif %}

# =========================================================================
# NOTES DE DÉPLOIEMENT
# =========================================================================
# - Ce PVC est optimisé pour les déploiements du service de notification mono-instance
# - Pour une configuration HA, considérez l'utilisation de ReadWriteMany
# - La classe de stockage local-path est recommandée pour les tests
# - Pour la production, utilisez une classe de stockage avec réplication
# - Les sauvegardes automatiques sont configurées via les annotations
# - Le stockage est utilisé pour les templates et les logs de notification
# =========================================================================