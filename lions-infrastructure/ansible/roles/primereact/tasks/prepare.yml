---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - PR√âPARATION PRIMEREACT
# =========================================================================
# Description: Pr√©pare les ressources n√©cessaires pour d√©ployer PrimeReact
# Responsabilit√©: Provisioning et validation des pr√©requis infrastructure
# Auteur: √âquipe DevOps LIONS Infrastructure
# Version: 5.0.0
# Date: "{{ ansible_date_time.iso8601 }}"
# Documentation: https://docs.lions.dev/applications/primereact/preparation
# =========================================================================

# =========================================================================
# PHASE 1: VALIDATION DES PR√âREQUIS CRITIQUES
# =========================================================================

- name: "üîç Validation - V√©rification du statut d'activation de PrimeReact"
  assert:
    that:
      - primereact_enabled | default(lookup('env', 'LIONS_PRIMEREACT_ENABLED') | bool) | bool
    fail_msg: "‚ùå PrimeReact n'est pas activ√©. V√©rifiez LIONS_PRIMEREACT_ENABLED dans votre configuration."
    success_msg: "‚úÖ PrimeReact est activ√© et pr√™t pour le d√©ploiement"
  tags: [validation, primereact, critical]

- name: "üîç Validation - V√©rification de la disponibilit√© du namespace"
  k8s_info:
    api_version: v1
    kind: Namespace
    name: "{{ primereact_namespace }}"
  register: namespace_check
  failed_when: false
  tags: [validation, namespace]

- name: "üèóÔ∏è  Provisioning - Cr√©ation du namespace si n√©cessaire"
  k8s:
    name: "{{ primereact_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
    definition:
      metadata:
        name: "{{ primereact_namespace }}"
        labels:
          app.kubernetes.io/name: primereact
          app.kubernetes.io/component: frontend
          app.kubernetes.io/part-of: lions-infrastructure
          app.kubernetes.io/managed-by: ansible
          lions.dev/environment: "{{ lions_environment }}"
          lions.dev/version: "{{ primereact_version }}"
        annotations:
          lions.dev/created-by: "ansible-lions-infrastructure"
          lions.dev/creation-timestamp: "{{ ansible_date_time.iso8601 }}"
  when: namespace_check.resources | length == 0
  register: namespace_creation
  tags: [provisioning, namespace]

# =========================================================================
# PHASE 2: PR√âPARATION DE L'ENVIRONNEMENT DE TRAVAIL
# =========================================================================

- name: "üìÅ Workspace - Cr√©ation du r√©pertoire temporaire s√©curis√©"
  tempfile:
    state: directory
    suffix: ".primereact-{{ ansible_date_time.epoch }}"
    prefix: "lions-deploy-"
  register: primereact_workspace
  changed_when: false
  tags: [workspace, security]

- name: "üîí S√©curit√© - Configuration des permissions du workspace"
  file:
    path: "{{ primereact_workspace.path }}"
    mode: '0700'
    owner: "{{ ansible_user | default('root') }}"
  changed_when: false
  tags: [workspace, security]

- name: "üìù Debug - Affichage des informations de workspace"
  debug:
    msg:
      - "Workspace PrimeReact cr√©√©: {{ primereact_workspace.path }}"
      - "Namespace cible: {{ primereact_namespace }}"
      - "Environnement: {{ lions_environment }}"
      - "Version PrimeReact: {{ primereact_version }}"
  when: primereact_debug_enabled | default(false) | bool
  tags: [debug, workspace]

# =========================================================================
# PHASE 3: G√âN√âRATION DES MANIFESTES KUBERNETES
# =========================================================================

- name: "üèóÔ∏è  Template - G√©n√©ration des manifestes Kubernetes"
  template:
    src: "{{ item.template }}"
    dest: "{{ primereact_workspace.path }}/{{ item.manifest }}"
    mode: '0600'
    backup: no
  loop:
    - { template: "serviceaccount.yml.j2", manifest: "01-serviceaccount.yml" }
    - { template: "configmap.yml.j2", manifest: "02-configmap.yml" }
    - { template: "service.yml.j2", manifest: "03-service.yml" }
    - { template: "deployment.yml.j2", manifest: "04-deployment.yml" }
    - { template: "ingress.yml.j2", manifest: "05-ingress.yml" }
    - { template: "servicemonitor.yml.j2", manifest: "06-servicemonitor.yml" }
    - { template: "networkpolicy.yml.j2", manifest: "07-networkpolicy.yml" }
  register: primereact_templates_generated
  notify: "cleanup workspace"
  tags: [templating, kubernetes]

- name: "‚úÖ Validation - V√©rification de l'int√©grit√© des manifestes g√©n√©r√©s"
  stat:
    path: "{{ primereact_workspace.path }}/{{ item }}"
    get_checksum: yes
    checksum_algorithm: sha256
  loop:
    - "01-serviceaccount.yml"
    - "02-configmap.yml"
    - "03-service.yml"
    - "04-deployment.yml"
    - "05-ingress.yml"
    - "06-servicemonitor.yml"
    - "07-networkpolicy.yml"
  register: primereact_manifests_validation
  failed_when: not item.stat.exists
  tags: [validation, kubernetes]

- name: "üìä Audit - Enregistrement des checksums des manifestes"
  set_fact:
    primereact_manifests_checksums: "{{ primereact_manifests_validation.results | map(attribute='stat.checksum') | list }}"
  tags: [audit, security]

# =========================================================================
# PHASE 4: VALIDATION DE LA SYNTAXE KUBERNETES
# =========================================================================

- name: "üîç Validation - V√©rification de la syntaxe YAML des manifestes"
  k8s:
    state: present
    src: "{{ primereact_workspace.path }}/{{ item }}"
    dry_run: yes
    validate:
      fail_on_error: yes
      strict: yes
  loop:
    - "01-serviceaccount.yml"
    - "02-configmap.yml"
    - "03-service.yml"
    - "04-deployment.yml"
    - "05-ingress.yml"
    - "06-servicemonitor.yml"
    - "07-networkpolicy.yml"
  register: primereact_syntax_validation
  when: primereact_validate_syntax | default(true) | bool
  tags: [validation, syntax, kubernetes]

# =========================================================================
# PHASE 5: CR√âATION DES RESSOURCES DE BASE
# =========================================================================

- name: "üîê S√©curit√© - Cr√©ation du ServiceAccount avec permissions minimales"
  k8s:
    state: present
    src: "{{ primereact_workspace.path }}/01-serviceaccount.yml"
    wait: true
    wait_condition:
      type: Ready
      status: "True"
    wait_timeout: "{{ primereact_timeout_short | default(60) }}"
  register: primereact_serviceaccount_creation
  tags: [security, rbac, kubernetes]

- name: "‚öôÔ∏è  Configuration - Cr√©ation du ConfigMap applicatif"
  k8s:
    state: present
    src: "{{ primereact_workspace.path }}/02-configmap.yml"
    wait: true
    wait_timeout: "{{ primereact_timeout_short | default(60) }}"
  register: primereact_configmap_creation
  tags: [configuration, kubernetes]

- name: "üåê R√©seau - Cr√©ation du Service de communication"
  k8s:
    state: present
    src: "{{ primereact_workspace.path }}/03-service.yml"
    wait: true
    wait_condition:
      type: Ready
      status: "True"
    wait_timeout: "{{ primereact_timeout_short | default(60) }}"
  register: primereact_service_creation
  tags: [networking, kubernetes]

- name: "üîí S√©curit√© - Application des NetworkPolicies"
  k8s:
    state: present
    src: "{{ primereact_workspace.path }}/07-networkpolicy.yml"
    wait: true
    wait_timeout: "{{ primereact_timeout_short | default(60) }}"
  register: primereact_networkpolicy_creation
  when: primereact_network_policies_enabled | default(lookup('env', 'LIONS_SECURITY_NETWORK_POLICIES') | bool) | bool
  tags: [security, networking, kubernetes]

# =========================================================================
# PHASE 6: VALIDATION DES D√âPENDANCES EXTERNES
# =========================================================================

- name: "üîç D√©pendances - V√©rification de la disponibilit√© de Redis"
  k8s_info:
    api_version: v1
    kind: Service
    namespace: "{{ primereact_redis_namespace | default(redis_namespace | default('database')) }}"
    name: "{{ primereact_redis_service_name | default('redis') }}"
  register: primereact_redis_check
  failed_when: false
  when: primereact_redis_enabled | default(lookup('env', 'LIONS_REDIS_ENABLED') | bool) | bool
  tags: [dependencies, redis, validation]

- name: "‚ö†Ô∏è  D√©pendances - Avertissement Redis indisponible"
  debug:
    msg:
      - "‚ö†Ô∏è  ATTENTION: Service Redis non disponible"
      - "Namespace recherch√©: {{ primereact_redis_namespace | default(redis_namespace | default('database')) }}"
      - "Service recherch√©: {{ primereact_redis_service_name | default('redis') }}"
      - "Impact: Performances r√©duites pour le cache applicatif"
      - "Action recommand√©e: D√©ployez Redis avant PrimeReact ou d√©sactivez la d√©pendance"
  when:
    - primereact_redis_enabled | default(lookup('env', 'LIONS_REDIS_ENABLED') | bool) | bool
    - primereact_redis_check is defined
    - (primereact_redis_check is failed or primereact_redis_check.resources | length == 0)
  tags: [dependencies, redis, warning]

- name: "üîç D√©pendances - V√©rification de la disponibilit√© de PostgreSQL"
  k8s_info:
    api_version: v1
    kind: Service
    namespace: "{{ primereact_postgres_namespace | default(postgres_namespace | default('database')) }}"
    name: "{{ primereact_postgres_service_name | default('postgresql') }}"
  register: primereact_postgres_check
  failed_when: false
  when: primereact_postgres_enabled | default(lookup('env', 'LIONS_POSTGRES_ENABLED') | bool) | bool
  tags: [dependencies, postgres, validation]

- name: "‚ùå D√©pendances - √âchec critique PostgreSQL"
  fail:
    msg:
      - "‚ùå ERREUR CRITIQUE: Service PostgreSQL non disponible"
      - "Namespace recherch√©: {{ primereact_postgres_namespace | default(postgres_namespace | default('database')) }}"
      - "Service recherch√©: {{ primereact_postgres_service_name | default('postgresql') }}"
      - "Impact: Impossible de d√©marrer PrimeReact sans base de donn√©es"
      - "Action requise: D√©ployez PostgreSQL avant de continuer"
  when:
    - primereact_postgres_enabled | default(lookup('env', 'LIONS_POSTGRES_ENABLED') | bool) | bool
    - primereact_postgres_check is defined
    - (primereact_postgres_check is failed or primereact_postgres_check.resources | length == 0)
    - primereact_fail_on_missing_deps | default(true) | bool
  tags: [dependencies, postgres, critical]

# =========================================================================
# PHASE 7: VALIDATION DES SECRETS APPLICATIFS
# =========================================================================

- name: "üîê Secrets - V√©rification de l'existence des secrets applicatifs"
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ primereact_namespace }}"
    name: "{{ item }}"
  register: primereact_secrets_check
  failed_when: false
  loop: "{{ primereact_required_secrets }}"
  tags: [security, secrets, validation]

- name: "üîê Secrets - Compilation des secrets manquants"
  set_fact:
    primereact_missing_secrets: >-
      {{
        primereact_secrets_check.results |
        selectattr('failed', 'defined') |
        selectattr('failed', 'equalto', true) |
        map(attribute='item') |
        list +
        primereact_secrets_check.results |
        selectattr('resources', 'defined') |
        selectattr('resources', 'equalto', []) |
        map(attribute='item') |
        list
      }}
  tags: [security, secrets]

- name: "‚ö†Ô∏è  Secrets - Avertissement secrets manquants"
  debug:
    msg:
      - "‚ö†Ô∏è  ATTENTION: Secrets manquants d√©tect√©s"
      - "Secrets manquants: {{ primereact_missing_secrets | join(', ') }}"
      - "Namespace: {{ primereact_namespace }}"
      - "Impact: L'application peut ne pas d√©marrer correctement"
      - "Action recommand√©e: Cr√©ez les secrets avant le d√©ploiement"
      - "Commande exemple: kubectl create secret generic <nom> --from-literal=<cl√©>=<valeur> -n {{ primereact_namespace }}"
  when: primereact_missing_secrets | length > 0
  tags: [security, secrets, warning]

- name: "‚ùå Secrets - √âchec critique secrets manquants"
  fail:
    msg:
      - "‚ùå ERREUR CRITIQUE: Secrets obligatoires manquants"
      - "Secrets manquants: {{ primereact_missing_secrets | join(', ') }}"
      - "Action requise: Cr√©ez tous les secrets avant de continuer"
  when:
    - primereact_missing_secrets | length > 0
    - primereact_fail_on_missing_secrets | default(false) | bool
  tags: [security, secrets, critical]

# =========================================================================
# PHASE 8: PR√âPARATION DU MONITORING
# =========================================================================

- name: "üìä Monitoring - V√©rification de la disponibilit√© de Prometheus"
  k8s_info:
    api_version: v1
    kind: Service
    namespace: "{{ monitoring_namespace | default('monitoring') }}"
    name: "prometheus-server"
  register: primereact_prometheus_check
  failed_when: false
  when: primereact_monitoring_enabled | default(lookup('env', 'LIONS_MONITORING_ENABLED') | bool) | bool
  tags: [monitoring, prometheus, validation]

- name: "üìä Monitoring - Pr√©paration du ServiceMonitor"
  debug:
    msg:
      - "ServiceMonitor sera cr√©√© pour: {{ primereact_app_name }}"
      - "Namespace monitoring: {{ monitoring_namespace | default('monitoring') }}"
      - "M√©triques expos√©es sur le port: {{ primereact_metrics_port | default(9090) }}"
  when:
    - primereact_monitoring_enabled | default(lookup('env', 'LIONS_MONITORING_ENABLED') | bool) | bool
    - primereact_prometheus_check is defined
    - not (primereact_prometheus_check is failed or primereact_prometheus_check.resources | length == 0)
  tags: [monitoring, preparation]

# =========================================================================
# PHASE 9: R√âSUM√â ET √âTAT FINAL
# =========================================================================

- name: "üìã R√©sum√© - Compilation du statut de pr√©paration"
  set_fact:
    primereact_preparation_summary:
      status: "ready"
      timestamp: "{{ ansible_date_time.iso8601 }}"
      workspace: "{{ primereact_workspace.path }}"
      namespace: "{{ primereact_namespace }}"
      environment: "{{ lions_environment }}"
      version: "{{ primereact_version }}"
      manifests_generated: "{{ primereact_templates_generated.results | length }}"
      manifests_validated: "{{ primereact_manifests_validation.results | length }}"
      dependencies:
        redis:
          enabled: "{{ primereact_redis_enabled | default(lookup('env', 'LIONS_REDIS_ENABLED') | bool) | bool }}"
          available: "{{ primereact_redis_check is defined and not (primereact_redis_check is failed or primereact_redis_check.resources | length == 0) }}"
        postgres:
          enabled: "{{ primereact_postgres_enabled | default(lookup('env', 'LIONS_POSTGRES_ENABLED') | bool) | bool }}"
          available: "{{ primereact_postgres_check is defined and not (primereact_postgres_check is failed or primereact_postgres_check.resources | length == 0) }}"
        monitoring:
          enabled: "{{ primereact_monitoring_enabled | default(lookup('env', 'LIONS_MONITORING_ENABLED') | bool) | bool }}"
          available: "{{ primereact_prometheus_check is defined and not (primereact_prometheus_check is failed or primereact_prometheus_check.resources | length == 0) }}"
      security:
        network_policies: "{{ primereact_network_policies_enabled | default(lookup('env', 'LIONS_SECURITY_NETWORK_POLICIES') | bool) | bool }}"
        missing_secrets: "{{ primereact_missing_secrets | default([]) | length }}"
      warnings: "{{ (primereact_missing_secrets | default([]) | length > 0) or (primereact_redis_enabled | default(false) and primereact_redis_check is defined and (primereact_redis_check is failed or primereact_redis_check.resources | length == 0)) }}"
  tags: [summary, audit]

- name: "‚úÖ R√©sum√© - Affichage du statut final de pr√©paration"
  debug:
    msg:
      - "üéØ PR√âPARATION PRIMEREACT TERMIN√âE"
      - "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
      - "üìä Statut: {{ primereact_preparation_summary.status | upper }}"
      - "üïê Timestamp: {{ primereact_preparation_summary.timestamp }}"
      - "üìÅ Workspace: {{ primereact_preparation_summary.workspace }}"
      - "üè∑Ô∏è  Namespace: {{ primereact_preparation_summary.namespace }}"
      - "üåç Environnement: {{ primereact_preparation_summary.environment }}"
      - "üîñ Version: {{ primereact_preparation_summary.version }}"
      - "üìù Manifestes g√©n√©r√©s: {{ primereact_preparation_summary.manifests_generated }}"
      - "‚úÖ Manifestes valid√©s: {{ primereact_preparation_summary.manifests_validated }}"
      - "‚ö†Ô∏è  Avertissements: {{ primereact_preparation_summary.warnings | ternary('OUI', 'AUCUN') }}"
      - "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
      - "üöÄ Pr√™t pour le d√©ploiement: {{ not primereact_preparation_summary.warnings or primereact_ignore_warnings | default(false) }}"
  tags: [summary, final]

# =========================================================================
# HANDLERS DE NETTOYAGE
# =========================================================================

- name: "üßπ Cleanup - Enregistrement du workspace pour nettoyage"
  set_fact:
    workspaces_to_cleanup: "{{ workspaces_to_cleanup | default([]) + [primereact_workspace.path] }}"
  changed_when: false
  tags: [cleanup, always]