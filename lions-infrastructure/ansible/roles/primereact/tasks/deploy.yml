---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - D√âPLOIEMENT PRIMEREACT
# =========================================================================
# Description: D√©ploiement s√©curis√© d'applications PrimeReact sur Kubernetes
# Version: 5.0.0
# Auteur: LIONS DevOps Team
# Date: 2025-05-30
# Documentation: https://docs.lions.dev/components/primereact
# =========================================================================

# =========================================================================
# VALIDATION PR√â-D√âPLOIEMENT
# =========================================================================
- name: "üîç Validation de la configuration PrimeReact"
  block:
    - name: "V√©rification de l'activation du service PrimeReact"
      assert:
        that:
          - primereact_config.enabled | default(false) | bool
        fail_msg: "‚ùå Le service PrimeReact n'est pas activ√© dans la configuration"
        success_msg: "‚úÖ Service PrimeReact activ√©"

    - name: "Validation des variables d'environnement critiques"
      assert:
        that:
          - primereact_config.namespace is defined
          - primereact_config.app_name is defined
          - primereact_config.version is defined
          - primereact_config.port is defined
        fail_msg: "‚ùå Variables de configuration PrimeReact manquantes"
        success_msg: "‚úÖ Configuration PrimeReact valid√©e"

    - name: "V√©rification de la disponibilit√© du namespace"
      k8s_info:
        api_version: v1
        kind: Namespace
        name: "{{ primereact_config.namespace }}"
      register: namespace_check

    - name: "Validation de l'existence du namespace"
      assert:
        that:
          - namespace_check.resources | length > 0
        fail_msg: "‚ùå Le namespace {{ primereact_config.namespace }} n'existe pas"
        success_msg: "‚úÖ Namespace {{ primereact_config.namespace }} disponible"

  tags:
    - validation
    - primereact

# =========================================================================
# PR√âPARATION DU D√âPLOIEMENT
# =========================================================================
- name: "üèóÔ∏è  Pr√©paration de l'environnement de d√©ploiement"
  block:
    - name: "G√©n√©ration des manifestes Kubernetes"
      include_tasks: prepare.yml
      vars:
        component_name: "{{ primereact_config.app_name }}"
        component_namespace: "{{ primereact_config.namespace }}"

    - name: "V√©rification de la g√©n√©ration des templates"
      stat:
        path: "{{ temp_dir.path }}/{{ item }}"
      register: template_files
      loop:
        - deployment.yml
        - service.yml
        - configmap.yml
        - serviceaccount.yml
      failed_when: not template_files.results | selectattr('stat.exists') | list

    - name: "Configuration des secrets pour PrimeReact"
      include_tasks: "{{ role_path }}/../common/tasks/setup-secrets.yml"
      vars:
        app_name: "{{ primereact_config.app_name }}"
        app_namespace: "{{ primereact_config.namespace }}"
        secrets_config: "{{ primereact_config.secrets | default({}) }}"
      when: primereact_config.secrets is defined

  tags:
    - preparation
    - primereact

# =========================================================================
# D√âPLOIEMENT DES RESSOURCES KUBERNETES
# =========================================================================
- name: "üöÄ D√©ploiement des ressources PrimeReact"
  block:
    - name: "D√©ploiement du ServiceAccount"
      k8s:
        state: present
        src: "{{ temp_dir.path }}/serviceaccount.yml"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ lions_timeout_default | default(300) }}"
      register: serviceaccount_result

    - name: "D√©ploiement de la ConfigMap"
      k8s:
        state: present
        src: "{{ temp_dir.path }}/configmap.yml"
      register: configmap_result

    - name: "D√©ploiement du Service"
      k8s:
        state: present
        src: "{{ temp_dir.path }}/service.yml"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ lions_timeout_default | default(300) }}"
      register: service_result

    - name: "D√©ploiement de l'application PrimeReact"
      k8s:
        state: present
        src: "{{ temp_dir.path }}/deployment.yml"
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: "{{ lions_timeout_deployment | default(1800) }}"
      register: deployment_result

    - name: "D√©ploiement de l'Ingress (si activ√©)"
      k8s:
        state: present
        src: "{{ temp_dir.path }}/ingress.yml"
        wait: true
        wait_timeout: "{{ lions_timeout_default | default(300) }}"
      register: ingress_result
      when:
        - primereact_config.ingress.enabled | default(true) | bool
        - lions_environment != 'development' or primereact_config.ingress.force_dev | default(false) | bool

  rescue:
    - name: "‚ùå √âchec du d√©ploiement - Collecte des informations de debug"
      include_tasks: "{{ role_path }}/../common/tasks/debug-deployment.yml"
      vars:
        failed_app_name: "{{ primereact_config.app_name }}"
        failed_namespace: "{{ primereact_config.namespace }}"

    - name: "‚ùå √âchec critique du d√©ploiement PrimeReact"
      fail:
        msg: |
          Le d√©ploiement de PrimeReact a √©chou√©.
          V√©rifiez les logs ci-dessus pour plus de d√©tails.
          Namespace: {{ primereact_config.namespace }}
          Application: {{ primereact_config.app_name }}

  tags:
    - deployment
    - primereact

# =========================================================================
# D√âPLOIEMENT DU MONITORING (SI ACTIV√â)
# =========================================================================
- name: "üìä Configuration du monitoring PrimeReact"
  block:
    - name: "D√©ploiement du ServiceMonitor"
      k8s:
        state: present
        src: "{{ temp_dir.path }}/servicemonitor.yml"
        wait: true
        wait_timeout: "{{ lions_timeout_default | default(300) }}"
      register: servicemonitor_result

    - name: "Configuration des alertes sp√©cifiques"
      include_tasks: monitoring.yml
      vars:
        monitoring_component: "{{ primereact_config.app_name }}"
        monitoring_namespace: "{{ primereact_config.namespace }}"

  when:
    - lions_monitoring_enabled | default(true) | bool
    - primereact_config.monitoring.enabled | default(true) | bool
  tags:
    - monitoring
    - primereact

# =========================================================================
# V√âRIFICATIONS POST-D√âPLOIEMENT
# =========================================================================
- name: "üîç V√©rifications post-d√©ploiement"
  block:
    - name: "V√©rification du statut du d√©ploiement"
      k8s_info:
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ primereact_config.namespace }}"
        name: "{{ primereact_config.app_name }}"
      register: deployment_status
      until:
        - deployment_status.resources | length > 0
        - deployment_status.resources[0].status.availableReplicas is defined
        - deployment_status.resources[0].status.availableReplicas == (deployment_status.resources[0].spec.replicas | int)
        - deployment_status.resources[0].status.readyReplicas is defined
        - deployment_status.resources[0].status.readyReplicas == (deployment_status.resources[0].spec.replicas | int)
      retries: "{{ (lions_timeout_deployment | default(1800) | int / 30) | int }}"
      delay: 30

    - name: "R√©cup√©ration des informations d√©taill√©es sur les pods"
      k8s_info:
        api_version: v1
        kind: Pod
        namespace: "{{ primereact_config.namespace }}"
        label_selectors:
          - "app.kubernetes.io/name={{ primereact_config.app_name }}"
          - "app.kubernetes.io/component=frontend"
      register: pods_info

    - name: "Validation de l'√©tat des pods"
      assert:
        that:
          - pods_info.resources | length > 0
          - pods_info.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
        fail_msg: "‚ùå Aucun pod PrimeReact n'est en cours d'ex√©cution"
        success_msg: "‚úÖ Pods PrimeReact d√©ploy√©s avec succ√®s"

    - name: "Affichage du statut des pods"
      debug:
        msg: |
          üìã Statut des pods PrimeReact:
          - Pod: {{ item.metadata.name }}
          - √âtat: {{ item.status.phase }}
          - Node: {{ item.spec.nodeName | default('Non assign√©') }}
          - IP: {{ item.status.podIP | default('Non assign√©e') }}
          - Red√©marrages: {{ item.status.containerStatuses[0].restartCount | default(0) }}
      loop: "{{ pods_info.resources }}"
      loop_control:
        label: "{{ item.metadata.name }}"

  tags:
    - verification
    - primereact

# =========================================================================
# TESTS DE SANT√â DE L'APPLICATION
# =========================================================================
- name: "üè• Tests de sant√© de l'application"
  block:
    - name: "Attente de l'initialisation compl√®te"
      pause:
        seconds: "{{ primereact_config.init_delay | default(30) }}"

    - name: "Test de connectivit√© interne (service)"
      uri:
        url: "http://{{ primereact_config.app_name }}.{{ primereact_config.namespace }}.svc.cluster.local:{{ primereact_config.port }}/health"
        method: GET
        status_code: [200, 404]  # 404 accept√© si pas d'endpoint health
        timeout: 30
      register: internal_health_check
      retries: 5
      delay: 10
      ignore_errors: true

    - name: "Test de disponibilit√© de l'interface utilisateur"
      uri:
        url: "http://{{ primereact_config.app_name }}.{{ primereact_config.namespace }}.svc.cluster.local:{{ primereact_config.port }}/"
        method: GET
        status_code: [200, 302]
        timeout: 30
      register: ui_availability_check
      retries: 5
      delay: 10

    - name: "Test de l'Ingress (si configur√©)"
      uri:
        url: "{{ primereact_config.ingress.protocol | default('https') }}://{{ primereact_config.ingress.host | default(primereact_config.app_name + '.' + lions_dns_full_domain) }}"
        method: GET
        status_code: [200, 302, 503]  # 503 temporaire acceptable
        timeout: 30
        validate_certs: "{{ not (lions_security_tls_staging | default(true) | bool) }}"
      register: external_access_check
      retries: 3
      delay: 15
      ignore_errors: true
      when:
        - primereact_config.ingress.enabled | default(true) | bool
        - lions_environment != 'development' or primereact_config.ingress.force_dev | default(false) | bool

  rescue:
    - name: "‚ö†Ô∏è  Tests de sant√© partiellement √©chou√©s"
      debug:
        msg: |
          ‚ö†Ô∏è  Certains tests de sant√© ont √©chou√©, mais l'application peut √™tre fonctionnelle.
          V√©rifiez les d√©tails ci-dessous et les logs de l'application.

  tags:
    - health-check
    - primereact

# =========================================================================
# CONFIGURATION DE L'AUTOSCALING (SI ACTIV√â)
# =========================================================================
- name: "‚öñÔ∏è  Configuration de l'autoscaling"
  block:
    - name: "D√©ploiement du HorizontalPodAutoscaler"
      k8s:
        state: present
        definition:
          apiVersion: autoscaling/v2
          kind: HorizontalPodAutoscaler
          metadata:
            name: "{{ primereact_config.app_name }}-hpa"
            namespace: "{{ primereact_config.namespace }}"
            labels:
              app.kubernetes.io/name: "{{ primereact_config.app_name }}"
              app.kubernetes.io/component: frontend
              app.kubernetes.io/part-of: lions-infrastructure
              app.kubernetes.io/managed-by: ansible
          spec:
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: "{{ primereact_config.app_name }}"
            minReplicas: "{{ primereact_config.autoscaling.min_replicas | default(lions_autoscaling_min_replicas | default(1)) }}"
            maxReplicas: "{{ primereact_config.autoscaling.max_replicas | default(lions_autoscaling_max_replicas | default(10)) }}"
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  target:
                    type: Utilization
                    averageUtilization: "{{ primereact_config.autoscaling.cpu_target | default(lions_autoscaling_cpu_target | default(70)) }}"
              - type: Resource
                resource:
                  name: memory
                  target:
                    type: Utilization
                    averageUtilization: "{{ primereact_config.autoscaling.memory_target | default(lions_autoscaling_memory_target | default(80)) }}"
        wait: true
        wait_timeout: "{{ lions_timeout_default | default(300) }}"

  when:
    - lions_autoscaling_enabled | default(true) | bool
    - primereact_config.autoscaling.enabled | default(false) | bool
  tags:
    - autoscaling
    - primereact

# =========================================================================
# RAPPORT DE D√âPLOIEMENT
# =========================================================================
- name: "üìã G√©n√©ration du rapport de d√©ploiement"
  block:
    - name: "Collecte des informations finales"
      set_fact:
        deployment_report:
          application: "{{ primereact_config.app_name }}"
          namespace: "{{ primereact_config.namespace }}"
          version: "{{ primereact_config.version }}"
          environment: "{{ lions_environment }}"
          replicas: "{{ deployment_status.resources[0].status.availableReplicas | default(0) }}"
          pods_ready: "{{ pods_info.resources | selectattr('status.phase', 'equalto', 'Running') | list | length }}"
          service_type: "{{ service_result.result.spec.type | default('ClusterIP') }}"
          ingress_enabled: "{{ primereact_config.ingress.enabled | default(true) | bool }}"
          monitoring_enabled: "{{ primereact_config.monitoring.enabled | default(true) | bool }}"
          autoscaling_enabled: "{{ primereact_config.autoscaling.enabled | default(false) | bool }}"
          deployment_time: "{{ ansible_date_time.iso8601 }}"
          internal_url: "http://{{ primereact_config.app_name }}.{{ primereact_config.namespace }}.svc.cluster.local:{{ primereact_config.port }}"
          external_url: "{{ primereact_config.ingress.protocol | default('https') }}://{{ primereact_config.ingress.host | default(primereact_config.app_name + '.' + lions_dns_full_domain) }}"

    - name: "üìã Affichage du rapport de d√©ploiement"
      debug:
        msg: |
          =========================================================================
          üéâ D√âPLOIEMENT PRIMEREACT TERMIN√â AVEC SUCC√àS
          =========================================================================
          üì± Application: {{ deployment_report.application }}
          üè∑Ô∏è  Version: {{ deployment_report.version }}
          üè† Namespace: {{ deployment_report.namespace }}
          üåç Environnement: {{ deployment_report.environment }}
          üìä R√©plicas actives: {{ deployment_report.replicas }}
          üü¢ Pods pr√™ts: {{ deployment_report.pods_ready }}
          
          üîó ACC√àS:
          üì° URL interne: {{ deployment_report.internal_url }}
          {% if deployment_report.ingress_enabled %}
          üåê URL externe: {{ deployment_report.external_url }}
          {% endif %}
          
          üìä FONCTIONNALIT√âS:
          üìà Monitoring: {{ '‚úÖ' if deployment_report.monitoring_enabled else '‚ùå' }}
          ‚öñÔ∏è  Autoscaling: {{ '‚úÖ' if deployment_report.autoscaling_enabled else '‚ùå' }}
          üîí Ingress: {{ '‚úÖ' if deployment_report.ingress_enabled else '‚ùå' }}
          
          ‚è∞ D√©ploy√© le: {{ deployment_report.deployment_time }}
          =========================================================================

    - name: "üíæ Sauvegarde du rapport de d√©ploiement"
      copy:
        content: "{{ deployment_report | to_nice_yaml }}"
        dest: "/tmp/lions-primereact-deployment-{{ ansible_date_time.epoch }}.yml"
        mode: '0644'
      delegate_to: localhost

  tags:
    - reporting
    - primereact

# =========================================================================
# NETTOYAGE POST-D√âPLOIEMENT
# =========================================================================
- name: "üßπ Nettoyage des ressources temporaires"
  block:
    - name: "Suppression des fichiers temporaires"
      file:
        path: "{{ temp_dir.path }}"
        state: absent
      when: temp_dir is defined

    - name: "Nettoyage du cache Ansible"
      meta: clear_facts

  always:
    - name: "üìù Log final du d√©ploiement"
      debug:
        msg: "‚úÖ D√©ploiement PrimeReact termin√© - {{ ansible_date_time.iso8601 }}"

  tags:
    - cleanup
    - primereact