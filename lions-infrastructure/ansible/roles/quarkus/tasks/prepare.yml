---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - PR√âPARATION QUARKUS
# =========================================================================
# Description: Pr√©paration et validation des ressources pour d√©ploiement Quarkus
# Version: 5.0.0
# Maintainer: DevOps Team LIONS
# Date: "{{ ansible_date_time.iso8601 }}"
# Environnement: "{{ lions_environment | default('development') }}"
# =========================================================================

- name: "üìã Initialisation des variables de pr√©paration Quarkus"
  set_fact:
    quarkus_prep_config:
      namespace: "{{ lions_quarkus_namespace }}"
      app_name: "{{ lions_quarkus_service_name }}"
      app_version: "{{ lions_quarkus_version | default('latest') }}"
      environment: "{{ lions_environment }}"
      debug_mode: "{{ lions_debug_mode | default(false) }}"
      dry_run: "{{ lions_dry_run | default(false) }}"
      timestamp: "{{ ansible_date_time.epoch }}"
    quarkus_temp_config:
      base_dir: "/tmp/lions-quarkus-{{ ansible_date_time.epoch }}"
      templates_dir: "templates"
      manifests_dir: "manifests"
      cleanup_on_failure: true
    quarkus_required_templates:
      - name: "deployment"
        src: "deployment.yml.j2"
        dest: "deployment.yml"
        required: true
      - name: "service"
        src: "service.yml.j2"
        dest: "service.yml"
        required: true
      - name: "ingress"
        src: "ingress.yml.j2"
        dest: "ingress.yml"
        required: "{{ lions_security_tls_enabled | default(true) }}"
      - name: "ingress-traefik"
        src: "ingress-traefik.yml.j2"
        dest: "ingress-traefik.yml"
        required: "{{ lions_k8s_traefik_enabled | default(true) }}"
      - name: "configmap"
        src: "configmap.yml.j2"
        dest: "configmap.yml"
        required: true
      - name: "serviceaccount"
        src: "serviceaccount.yml.j2"
        dest: "serviceaccount.yml"
        required: "{{ lions_security_rbac_enabled | default(true) }}"
      - name: "servicemonitor"
        src: "servicemonitor.yml.j2"
        dest: "servicemonitor.yml"
        required: "{{ lions_monitoring_enabled | default(true) }}"
  tags:
    - quarkus
    - preparation
    - initialization

- name: "üîç Validation des pr√©requis pour Quarkus"
  block:
    - name: "V√©rification de la disponibilit√© du cluster Kubernetes"
      k8s_info:
        api_version: v1
        kind: Namespace
        name: "{{ quarkus_prep_config.namespace }}"
      register: quarkus_namespace_check
      failed_when: false

    - name: "Validation des variables critiques"
      assert:
        that:
          - quarkus_prep_config.namespace is defined
          - quarkus_prep_config.namespace | length > 0
          - quarkus_prep_config.app_name is defined
          - quarkus_prep_config.app_name | length > 0
          - lions_quarkus_enabled | default(false) | bool
        fail_msg: "‚ùå Variables critiques manquantes pour Quarkus"
        success_msg: "‚úÖ Variables critiques valid√©es"

    - name: "V√©rification de l'√©tat du namespace"
      debug:
        msg: |
          üìä √âtat du namespace {{ quarkus_prep_config.namespace }}:
          - Existe: {{ quarkus_namespace_check.resources | length > 0 }}
          - √âtat: {{ quarkus_namespace_check.resources[0].status.phase if quarkus_namespace_check.resources | length > 0 else 'Non trouv√©' }}

  rescue:
    - name: "‚ùå √âchec de la validation des pr√©requis"
      fail:
        msg: "La validation des pr√©requis a √©chou√©. V√©rifiez la configuration et la connectivit√© Kubernetes."

  tags:
    - quarkus
    - validation
    - prerequisites

- name: "üìÅ Cr√©ation de la structure de r√©pertoires temporaires"
  block:
    - name: "Cr√©ation du r√©pertoire de base temporaire"
      file:
        path: "{{ quarkus_temp_config.base_dir }}"
        state: directory
        mode: '0750'
      register: quarkus_temp_base_dir
      changed_when: false

    - name: "Cr√©ation des sous-r√©pertoires"
      file:
        path: "{{ quarkus_temp_config.base_dir }}/{{ item }}"
        state: directory
        mode: '0750'
      loop:
        - "{{ quarkus_temp_config.templates_dir }}"
        - "{{ quarkus_temp_config.manifests_dir }}"
        - "logs"
        - "backup"
      changed_when: false

    - name: "Enregistrement du r√©pertoire temporaire"
      set_fact:
        quarkus_working_dir: "{{ quarkus_temp_base_dir.path }}"
        cacheable: false

  rescue:
    - name: "‚ùå √âchec de cr√©ation des r√©pertoires temporaires"
      fail:
        msg: "Impossible de cr√©er la structure de r√©pertoires temporaires dans {{ quarkus_temp_config.base_dir }}"

  tags:
    - quarkus
    - preparation
    - filesystem

- name: "üìù G√©n√©ration des manifestes Kubernetes pour Quarkus"
  block:
    - name: "G√©n√©ration des templates requis"
      template:
        src: "{{ item.src }}"
        dest: "{{ quarkus_working_dir }}/{{ quarkus_temp_config.manifests_dir }}/{{ item.dest }}"
        mode: '0640'
        backup: true
      loop: "{{ quarkus_required_templates }}"
      when: item.required | bool
      register: quarkus_templates_generated
      notify:
        - "backup quarkus manifests"

    - name: "Validation de la syntaxe YAML des manifestes"
      include_tasks: validate_yaml_syntax.yml
      vars:
        manifest_file: "{{ quarkus_working_dir }}/{{ quarkus_temp_config.manifests_dir }}/{{ item.dest }}"
      loop: "{{ quarkus_required_templates }}"
      when: item.required | bool

    - name: "G√©n√©ration du r√©sum√© des manifestes"
      template:
        src: "manifest-summary.yml.j2"
        dest: "{{ quarkus_working_dir }}/manifest-summary.yml"
        mode: '0640'
      vars:
        generated_manifests: "{{ quarkus_templates_generated.results | selectattr('changed') | list }}"

  rescue:
    - name: "‚ùå √âchec de g√©n√©ration des manifestes"
      debug:
        msg: "Erreur lors de la g√©n√©ration des manifestes Kubernetes pour {{ quarkus_prep_config.app_name }}"

    - name: "Nettoyage en cas d'√©chec"
      file:
        path: "{{ quarkus_working_dir }}"
        state: absent
      when: quarkus_temp_config.cleanup_on_failure | bool

    - name: "Arr√™t du processus"
      fail:
        msg: "G√©n√©ration des manifestes √©chou√©e. V√©rifiez les templates et les variables."

  tags:
    - quarkus
    - templates
    - manifests

- name: "üîí Pr√©paration des ressources de s√©curit√©"
  block:
    - name: "Cr√©ation du ServiceAccount"
      k8s:
        state: present
        definition: "{{ lookup('file', quarkus_working_dir + '/' + quarkus_temp_config.manifests_dir + '/serviceaccount.yml') | from_yaml }}"
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: "{{ lions_timeout_default | default(300) }}"
      register: quarkus_serviceaccount_result
      when: lions_security_rbac_enabled | default(true) | bool

    - name: "V√©rification des secrets d'application"
      k8s_info:
        api_version: v1
        kind: Secret
        namespace: "{{ quarkus_prep_config.namespace }}"
        name: "{{ quarkus_prep_config.app_name }}-secrets"
      register: quarkus_secrets_check

    - name: "Cr√©ation des secrets par d√©faut si n√©cessaires"
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ quarkus_prep_config.app_name }}-secrets"
            namespace: "{{ quarkus_prep_config.namespace }}"
            labels:
              app.kubernetes.io/name: "{{ quarkus_prep_config.app_name }}"
              app.kubernetes.io/component: "application"
              app.kubernetes.io/part-of: "lions-infrastructure"
              app.kubernetes.io/managed-by: "ansible"
              lions.dev/environment: "{{ quarkus_prep_config.environment }}"
          type: Opaque
          data:
            # Secrets par d√©faut - √Ä remplacer par les vraies valeurs
            app-secret: "{{ 'changeme' | b64encode }}"
      when:
        - quarkus_secrets_check.resources | length == 0
        - not lions_dry_run | default(false) | bool
      register: quarkus_default_secrets_created

  rescue:
    - name: "‚ö†Ô∏è Avertissement pour les ressources de s√©curit√©"
      debug:
        msg: |
          ‚ö†Ô∏è Probl√®me lors de la pr√©paration des ressources de s√©curit√©:
          - ServiceAccount: {{ 'OK' if quarkus_serviceaccount_result is succeeded else 'ERREUR' }}
          - Secrets: {{ 'Existants' if quarkus_secrets_check.resources | length > 0 else 'Cr√©√©s par d√©faut' }}

  tags:
    - quarkus
    - security
    - rbac

- name: "‚öôÔ∏è Pr√©paration de la configuration applicative"
  block:
    - name: "Cr√©ation du ConfigMap principal"
      k8s:
        state: present
        definition: "{{ lookup('file', quarkus_working_dir + '/' + quarkus_temp_config.manifests_dir + '/configmap.yml') | from_yaml }}"
        wait: true
        wait_timeout: "{{ lions_timeout_default | default(300) }}"
      register: quarkus_configmap_result

    - name: "Validation de la configuration Quarkus"
      k8s_info:
        api_version: v1
        kind: ConfigMap
        namespace: "{{ quarkus_prep_config.namespace }}"
        name: "{{ quarkus_prep_config.app_name }}-config"
      register: quarkus_config_validation

    - name: "G√©n√©ration du manifeste de validation des ressources"
      template:
        src: "resource-validation.yml.j2"
        dest: "{{ quarkus_working_dir }}/resource-validation.yml"
        mode: '0640'
      vars:
        validation_results:
          serviceaccount: "{{ quarkus_serviceaccount_result | default({}) }}"
          configmap: "{{ quarkus_configmap_result }}"
          secrets: "{{ quarkus_secrets_check }}"

  rescue:
    - name: "‚ùå √âchec de pr√©paration de la configuration"
      debug:
        msg: "Erreur lors de la cr√©ation des ressources de configuration pour {{ quarkus_prep_config.app_name }}"

    - name: "Diagnostic des erreurs de configuration"
      debug:
        var: quarkus_configmap_result
      when: quarkus_configmap_result is failed

  tags:
    - quarkus
    - configuration
    - configmap

- name: "üìä Collecte des informations de pr√©paration"
  block:
    - name: "Collecte des statistiques de pr√©paration"
      set_fact:
        quarkus_preparation_summary:
          status: "completed"
          timestamp: "{{ ansible_date_time.iso8601 }}"
          environment: "{{ quarkus_prep_config.environment }}"
          namespace: "{{ quarkus_prep_config.namespace }}"
          app_name: "{{ quarkus_prep_config.app_name }}"
          working_directory: "{{ quarkus_working_dir }}"
          generated_manifests: "{{ quarkus_templates_generated.results | selectattr('changed') | map(attribute='dest') | list }}"
          resources_created:
            serviceaccount: "{{ quarkus_serviceaccount_result is succeeded }}"
            configmap: "{{ quarkus_configmap_result is succeeded }}"
            secrets: "{{ quarkus_secrets_check.resources | length > 0 or quarkus_default_secrets_created is succeeded }}"
          next_steps:
            - "Ex√©cuter les t√¢ches de d√©ploiement"
            - "V√©rifier les logs d'application"
            - "Configurer le monitoring"
        cacheable: false

    - name: "Affichage du r√©sum√© de pr√©paration"
      debug:
        msg: |
          ‚úÖ Pr√©paration Quarkus termin√©e avec succ√®s!
          
          üìã R√©sum√©:
          - Application: {{ quarkus_preparation_summary.app_name }}
          - Namespace: {{ quarkus_preparation_summary.namespace }}
          - Environnement: {{ quarkus_preparation_summary.environment }}
          - R√©pertoire de travail: {{ quarkus_preparation_summary.working_directory }}
          
          üìÑ Manifestes g√©n√©r√©s: {{ quarkus_preparation_summary.generated_manifests | length }}
          {{ quarkus_preparation_summary.generated_manifests | join(', ') }}
          
          üîß Ressources cr√©√©es:
          - ServiceAccount: {{ '‚úÖ' if quarkus_preparation_summary.resources_created.serviceaccount else '‚ùå' }}
          - ConfigMap: {{ '‚úÖ' if quarkus_preparation_summary.resources_created.configmap else '‚ùå' }}
          - Secrets: {{ '‚úÖ' if quarkus_preparation_summary.resources_created.secrets else '‚ùå' }}

  rescue:
    - name: "‚ö†Ô∏è Pr√©paration compl√©t√©e avec des avertissements"
      debug:
        msg: "La pr√©paration s'est termin√©e mais avec des avertissements. V√©rifiez les logs pour plus de d√©tails."

  always:
    - name: "üíæ Sauvegarde des logs de pr√©paration"
      copy:
        content: "{{ quarkus_preparation_summary | to_nice_yaml }}"
        dest: "{{ quarkus_working_dir }}/logs/preparation-summary-{{ ansible_date_time.epoch }}.yml"
        mode: '0640'
      when: quarkus_preparation_summary is defined

  tags:
    - quarkus
    - summary
    - reporting

- name: "üßπ Nettoyage et finalisation"
  block:
    - name: "Conservation des manifestes importants"
      synchronize:
        src: "{{ quarkus_working_dir }}/{{ quarkus_temp_config.manifests_dir }}/"
        dest: "{{ lions_storage_base_path | default('/opt/lions/storage') }}/manifests/quarkus/{{ quarkus_prep_config.environment }}/"
        mode: push
        archive: true
        delete: false
      delegate_to: localhost
      when: not lions_dry_run | default(false) | bool

    - name: "Mise √† jour du registre des d√©ploiements"
      lineinfile:
        path: "{{ lions_storage_base_path | default('/opt/lions/storage') }}/deployment-registry.log"
        line: "{{ ansible_date_time.iso8601 }} PREPARE {{ quarkus_prep_config.app_name }} {{ quarkus_prep_config.namespace }} {{ quarkus_prep_config.environment }} SUCCESS"
        create: true
        mode: '0640'
      when: not lions_dry_run | default(false) | bool

  rescue:
    - name: "‚ö†Ô∏è Avertissement de nettoyage"
      debug:
        msg: "Impossible de finaliser compl√®tement le nettoyage, mais la pr√©paration principale a r√©ussi."

  tags:
    - quarkus
    - cleanup
    - finalization