# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - QUARKUS SERVICE ACCOUNT TEMPLATE
# =========================================================================
# Description: Template Jinja2 pour le ServiceAccount Kubernetes des applications Quarkus
# Composant: Quarkus Application ServiceAccount
# Version: 5.0.0
# Maintainer: DevOps LIONS Team
# Documentation: https://docs.lions.dev/infrastructure/quarkus/serviceaccount
# =========================================================================

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
  namespace: "{{ lions_quarkus_namespace }}"
  labels:
    # Labels standards Kubernetes
    app.kubernetes.io/name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    app.kubernetes.io/instance: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-{{ lions_environment }}"
    app.kubernetes.io/version: "{{ lions_quarkus_app_version | default('latest') }}"
    app.kubernetes.io/component: "backend"
    app.kubernetes.io/part-of: "lions-infrastructure"
    app.kubernetes.io/managed-by: "ansible"
    
    # Labels spécifiques LIONS
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/technology: "quarkus"
    lions.dev/tier: "application"
    lions.dev/rbac-enabled: "{{ lions_security_rbac_enabled | lower }}"
    
    # Labels pour la sécurité
    security.lions.dev/token-automount: "{{ lions_quarkus_automount_token | default('false') | lower }}"
    security.lions.dev/pod-security-standard: "{{ lions_security_pod_security_standard | default('restricted') }}"
    
  annotations:
    # Annotations de documentation
    description: "ServiceAccount Quarkus {{ lions_quarkus_app_name | default(lions_quarkus_service_name) }} v{{ lions_quarkus_app_version | default('latest') }}"
    lions.dev/documentation: "https://docs.lions.dev/infrastructure/quarkus"
    lions.dev/serviceaccount-checksum: "{{ ansible_date_time.epoch }}"
    
    # Annotations pour la configuration
    serviceaccount.lions.dev/last-updated: "{{ ansible_date_time.iso8601 }}"
    serviceaccount.lions.dev/environment: "{{ lions_environment }}"
    serviceaccount.lions.dev/managed-by: "lions-infrastructure-ansible"
    
{% if lions_cloud_provider is defined %}
    # Annotations spécifiques au cloud provider
{% if lions_cloud_provider == 'aws' and lions_quarkus_aws_iam_role is defined %}
    eks.amazonaws.com/role-arn: "{{ lions_quarkus_aws_iam_role }}"
    eks.amazonaws.com/sts-regional-endpoints: "{{ lions_quarkus_aws_sts_regional | default('true') }}"
{% elif lions_cloud_provider == 'gcp' and lions_quarkus_gcp_service_account is defined %}
    iam.gke.io/gcp-service-account: "{{ lions_quarkus_gcp_service_account }}"
{% elif lions_cloud_provider == 'azure' and lions_quarkus_azure_identity is defined %}
    azure.workload.identity/client-id: "{{ lions_quarkus_azure_identity }}"
    azure.workload.identity/tenant-id: "{{ lions_quarkus_azure_tenant }}"
{% endif %}
{% endif %}
    
{% if lions_vault_enabled | bool and lions_quarkus_vault_auth_enabled | default(false) | bool %}
    # Annotations pour l'authentification Vault
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "{{ lions_quarkus_vault_role | default(lions_quarkus_app_name | default(lions_quarkus_service_name)) }}"
    vault.hashicorp.com/auth-path: "auth/{{ lions_vault_auth_method | default('kubernetes') }}"
{% if lions_quarkus_vault_secrets is defined %}
{% for secret in lions_quarkus_vault_secrets %}
    vault.hashicorp.com/agent-inject-secret-{{ secret.name }}: "{{ secret.path }}"
    vault.hashicorp.com/agent-inject-template-{{ secret.name }}: |
      {{ '{{' }}- with secret "{{ secret.path }}" -{{ '}}' }}
      {{ secret.template | default('{{ .Data.data | toJSON }}') }}
      {{ '{{' }}- end {{ '}}' }}
{% endfor %}
{% endif %}
{% endif %}
    
{% if lions_quarkus_custom_serviceaccount_annotations is defined %}
    # Annotations personnalisées
{% for key, value in lions_quarkus_custom_serviceaccount_annotations.items() %}
    {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

# =========================================================================
# CONFIGURATION DU SERVICE ACCOUNT
# =========================================================================

# Contrôle du montage automatique du token de service
automountServiceAccountToken: {{ lions_quarkus_automount_token | default('false') | bool }}

{% if lions_quarkus_image_pull_secrets is defined %}
# Secrets pour les registres d'images privés
imagePullSecrets:
{% for secret in lions_quarkus_image_pull_secrets %}
  - name: "{{ secret }}"
{% endfor %}
{% endif %}

{% if lions_quarkus_additional_secrets is defined %}
# Secrets additionnels associés au ServiceAccount
secrets:
{% for secret in lions_quarkus_additional_secrets %}
  - name: "{{ secret.name }}"
{% if secret.namespace is defined %}
    namespace: "{{ secret.namespace }}"
{% endif %}
{% endfor %}
{% endif %}

---
{% if lions_security_rbac_enabled | bool %}
# =========================================================================
# RÔLE RBAC POUR L'APPLICATION QUARKUS
# =========================================================================

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-role"
  namespace: "{{ lions_quarkus_namespace }}"
  labels:
    app.kubernetes.io/name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    app.kubernetes.io/instance: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-{{ lions_environment }}"
    app.kubernetes.io/component: "backend"
    app.kubernetes.io/part-of: "lions-infrastructure"
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/technology: "quarkus"
  annotations:
    description: "Rôle RBAC pour l'application Quarkus {{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    lions.dev/rbac-checksum: "{{ ansible_date_time.epoch }}"
rules:
  # Permissions de base pour l'application
{% if lions_quarkus_rbac_configmaps_read | default(false) | bool %}
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch"]
    resourceNames: 
      - "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-config"
{% endif %}

{% if lions_quarkus_rbac_secrets_read | default(false) | bool %}
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
    resourceNames: 
      - "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-secrets"
{% if lions_vault_enabled | bool %}
      - "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-vault-secrets"
{% endif %}
{% endif %}

{% if lions_quarkus_rbac_pods_read | default(false) | bool %}
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
    resourceNames: []
{% endif %}

{% if lions_quarkus_rbac_services_read | default(false) | bool %}
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get", "list", "watch"]
{% endif %}

{% if lions_quarkus_rbac_endpoints_read | default(false) | bool %}
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch"]
{% endif %}

{% if lions_kubernetes_discovery_enabled | default(false) | bool %}
  # Permissions pour la découverte de services Kubernetes
  - apiGroups: [""]
    resources: ["services", "endpoints", "pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch"]
{% endif %}

{% if lions_quarkus_custom_rbac_rules is defined %}
  # Règles RBAC personnalisées
{% for rule in lions_quarkus_custom_rbac_rules %}
  - apiGroups: {{ rule.api_groups | to_json }}
    resources: {{ rule.resources | to_json }}
    verbs: {{ rule.verbs | to_json }}
{% if rule.resource_names is defined %}
    resourceNames: {{ rule.resource_names | to_json }}
{% endif %}
{% if rule.namespace is defined %}
    namespace: "{{ rule.namespace }}"
{% endif %}
{% endfor %}
{% endif %}

---
# =========================================================================
# LIAISON RÔLE-SERVICE ACCOUNT
# =========================================================================

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-rolebinding"
  namespace: "{{ lions_quarkus_namespace }}"
  labels:
    app.kubernetes.io/name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    app.kubernetes.io/instance: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-{{ lions_environment }}"
    app.kubernetes.io/component: "backend"
    app.kubernetes.io/part-of: "lions-infrastructure"
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/technology: "quarkus"
  annotations:
    description: "Liaison rôle-ServiceAccount pour l'application Quarkus {{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    lions.dev/rolebinding-checksum: "{{ ansible_date_time.epoch }}"
subjects:
  - kind: ServiceAccount
    name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    namespace: "{{ lions_quarkus_namespace }}"
roleRef:
  kind: Role
  name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-role"
  apiGroup: rbac.authorization.k8s.io

{% if lions_quarkus_cluster_rbac_enabled | default(false) | bool %}
---
# =========================================================================
# RÔLE CLUSTER POUR PERMISSIONS GLOBALES (SI NÉCESSAIRE)
# =========================================================================

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-cluster-role"
  labels:
    app.kubernetes.io/name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    app.kubernetes.io/instance: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-{{ lions_environment }}"
    app.kubernetes.io/component: "backend"
    app.kubernetes.io/part-of: "lions-infrastructure"
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/technology: "quarkus"
  annotations:
    description: "ClusterRole pour l'application Quarkus {{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    lions.dev/clusterrole-checksum: "{{ ansible_date_time.epoch }}"
rules:
{% if lions_quarkus_cluster_rbac_rules is defined %}
{% for rule in lions_quarkus_cluster_rbac_rules %}
  - apiGroups: {{ rule.api_groups | to_json }}
    resources: {{ rule.resources | to_json }}
    verbs: {{ rule.verbs | to_json }}
{% if rule.resource_names is defined %}
    resourceNames: {{ rule.resource_names | to_json }}
{% endif %}
{% endfor %}
{% else %}
  # Permissions par défaut minimales
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
{% endif %}

---
# =========================================================================
# LIAISON CLUSTER ROLE-SERVICE ACCOUNT
# =========================================================================

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-cluster-rolebinding"
  labels:
    app.kubernetes.io/name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    app.kubernetes.io/instance: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-{{ lions_environment }}"
    app.kubernetes.io/component: "backend"
    app.kubernetes.io/part-of: "lions-infrastructure"
    lions.dev/environment: "{{ lions_environment }}"
    lions.dev/technology: "quarkus"
  annotations:
    description: "Liaison ClusterRole-ServiceAccount pour l'application Quarkus {{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    lions.dev/clusterrolebinding-checksum: "{{ ansible_date_time.epoch }}"
subjects:
  - kind: ServiceAccount
    name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}"
    namespace: "{{ lions_quarkus_namespace }}"
roleRef:
  kind: ClusterRole
  name: "{{ lions_quarkus_app_name | default(lions_quarkus_service_name) }}-cluster-role"
  apiGroup: rbac.authorization.k8s.io
{% endif %}

{% endif %}