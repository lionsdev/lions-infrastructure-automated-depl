# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - PRIMEFACES VALIDATION TASKS
# =========================================================================
# Description: T√¢ches Ansible pour la validation post-d√©ploiement PrimeFaces
# Composant: PrimeFaces Application Validation
# Version: 5.0.0
# Maintainer: DevOps LIONS Team
# Documentation: https://docs.lions.dev/infrastructure/primefaces/validation
# =========================================================================

---
# =========================================================================
# PHASE DE VALIDATION - INITIALISATION
# =========================================================================

- name: "PrimeFaces Validate | {{ current_phase | default('validation') | title }} - Initialisation"
  set_fact:
    primefaces_validate_start_time: "{{ ansible_date_time.epoch }}"
    primefaces_validation_tests:
      kubernetes_resources: false
      application_health: false
      database_connectivity: false
      cache_connectivity: false
      external_accessibility: false
      ssl_certificate: false
      monitoring_metrics: false
      authentication: false
      performance_baseline: false
      security_headers: false
      api_endpoints: false
      ui_responsiveness: false
    primefaces_validation_errors: []
    primefaces_validation_warnings: []
    primefaces_application_url: "https://{{ lions_primefaces_hostname }}.{{ lions_dns_full_domain }}"
    primefaces_internal_url: "http://{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}.{{ lions_primefaces_namespace }}.svc.cluster.local:{{ lions_primefaces_port }}"
  tags:
    - primefaces
    - validate
    - init

- name: "PrimeFaces Validate | Affichage des informations de validation"
  debug:
    msg:
      - "üîç Validation post-d√©ploiement PrimeFaces"
      - "üìã Application: {{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
      - "üè∑Ô∏è  Namespace: {{ lions_primefaces_namespace }}"
      - "üåç Environnement: {{ lions_environment }}"
      - "üåê URL externe: {{ primefaces_application_url }}"
      - "üîó URL interne: {{ primefaces_internal_url }}"
  when: primefaces_deployment_config.debug_mode | default(false) | bool
  tags:
    - primefaces
    - validate
    - debug

# =========================================================================
# VALIDATION DES RESSOURCES KUBERNETES
# =========================================================================

- name: "PrimeFaces Validate | V√©rification du Deployment"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ lions_primefaces_namespace }}"
    name: "{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
    wait: true
    wait_condition:
      type: Available
      status: "True"
    wait_timeout: "{{ lions_primefaces_validation_timeout | default(300) }}"
  register: primefaces_deployment_status
  failed_when: false

- name: "PrimeFaces Validate | V√©rification du Service"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Service
    namespace: "{{ lions_primefaces_namespace }}"
    name: "{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
  register: primefaces_service_status
  failed_when: false

- name: "PrimeFaces Validate | V√©rification de l'Ingress"
  kubernetes.core.k8s_info:
    api_version: networking.k8s.io/v1
    kind: Ingress
    namespace: "{{ lions_primefaces_namespace }}"
    name: "{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
  register: primefaces_ingress_status
  when: lions_ingress_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | V√©rification des Pods"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ lions_primefaces_namespace }}"
    label_selectors:
      - "app.kubernetes.io/name={{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
  register: primefaces_pods_status
  failed_when: false

- name: "PrimeFaces Validate | Analyse de l'√©tat des pods"
  set_fact:
    primefaces_healthy_pods: "{{ primefaces_pods_status.resources | selectattr('status.phase', 'equalto', 'Running') | list | length }}"
    primefaces_total_pods: "{{ primefaces_pods_status.resources | length }}"
    primefaces_expected_pods: "{{ lions_primefaces_replicas | default('1') | int }}"

- name: "PrimeFaces Validate | Validation des ressources Kubernetes"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'kubernetes_resources': (primefaces_deployment_status.resources | default([]) | length > 0) and (primefaces_service_status.resources | default([]) | length > 0) and (primefaces_healthy_pods | int == primefaces_expected_pods | int)}) }}"
    primefaces_validation_errors: "{{ primefaces_validation_errors + ['KubernetesResources: Resources not properly deployed'] if not ((primefaces_deployment_status.resources | default([]) | length > 0) and (primefaces_service_status.resources | default([]) | length > 0) and (primefaces_healthy_pods | int == primefaces_expected_pods | int)) else primefaces_validation_errors }}"

# =========================================================================
# VALIDATION DE LA SANT√â DE L'APPLICATION
# =========================================================================

- name: "PrimeFaces Validate | Test de sant√© - Startup probe"
  uri:
    url: "{{ primefaces_internal_url }}/actuator/health/readiness"
    method: GET
    status_code: [200, 503]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_startup_health
  retries: "{{ lions_primefaces_health_retries | default(30) }}"
  delay: "{{ lions_primefaces_health_delay | default(10) }}"
  until: primefaces_startup_health.status == 200
  when: lions_monitoring_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Test de sant√© - Liveness probe"
  uri:
    url: "{{ primefaces_internal_url }}/actuator/health/liveness"
    method: GET
    status_code: [200]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_liveness_health
  when: lions_monitoring_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Test de sant√© - Application endpoint"
  uri:
    url: "{{ primefaces_internal_url }}{{ lions_primefaces_context_path | default('/') }}"
    method: GET
    status_code: [200, 302, 401]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_app_health
  retries: 5
  delay: 10
  until: primefaces_app_health.status in [200, 302, 401]
  failed_when: false

- name: "PrimeFaces Validate | Validation de la sant√© de l'application"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'application_health': (primefaces_startup_health.status == 200 or not lions_monitoring_enabled | bool) and (primefaces_liveness_health.status == 200 or not lions_monitoring_enabled | bool) and (primefaces_app_health.status in [200, 302, 401])}) }}"
    primefaces_validation_errors: "{{ primefaces_validation_errors + ['ApplicationHealth: Application not responding properly'] if not ((primefaces_startup_health.status == 200 or not lions_monitoring_enabled | bool) and (primefaces_liveness_health.status == 200 or not lions_monitoring_enabled | bool) and (primefaces_app_health.status in [200, 302, 401])) else primefaces_validation_errors }}"

# =========================================================================
# VALIDATION DE LA CONNECTIVIT√â BASE DE DONN√âES
# =========================================================================

- name: "PrimeFaces Validate | Test de connectivit√© PostgreSQL"
  uri:
    url: "{{ primefaces_internal_url }}/actuator/health/db"
    method: GET
    status_code: [200]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_db_health
  when: 
    - lions_postgres_enabled | bool
    - lions_monitoring_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Test de requ√™te base de donn√©es"
  uri:
    url: "{{ primefaces_internal_url }}/actuator/health"
    method: GET
    status_code: [200]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_overall_health
  when: lions_postgres_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Validation de la connectivit√© base de donn√©es"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'database_connectivity': (primefaces_db_health.status == 200 or not lions_monitoring_enabled | bool) and (primefaces_overall_health.status == 200 or not lions_postgres_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['DatabaseConnectivity: Database health check failed'] if (lions_postgres_enabled | bool and ((primefaces_db_health.status != 200 and lions_monitoring_enabled | bool) or primefaces_overall_health.status != 200)) else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DE LA CONNECTIVIT√â CACHE REDIS
# =========================================================================

- name: "PrimeFaces Validate | Test de connectivit√© Redis"
  uri:
    url: "{{ primefaces_internal_url }}/actuator/health/redis"
    method: GET
    status_code: [200]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_redis_health
  when: 
    - lions_redis_enabled | bool
    - lions_monitoring_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Validation de la connectivit√© Redis"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'cache_connectivity': (primefaces_redis_health.status == 200) or not (lions_redis_enabled | bool and lions_monitoring_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['CacheConnectivity: Redis health check failed'] if (lions_redis_enabled | bool and lions_monitoring_enabled | bool and primefaces_redis_health.status != 200) else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DE L'ACCESSIBILIT√â EXTERNE
# =========================================================================

- name: "PrimeFaces Validate | Test d'accessibilit√© externe"
  uri:
    url: "{{ primefaces_application_url }}"
    method: GET
    status_code: [200, 301, 302, 401, 403]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: "{{ lions_security_tls_enabled | bool }}"
    follow_redirects: false
  register: primefaces_external_access
  when: lions_ingress_enabled | bool
  retries: 3
  delay: 10
  failed_when: false

- name: "PrimeFaces Validate | Validation de l'accessibilit√© externe"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'external_accessibility': (primefaces_external_access.status in [200, 301, 302, 401, 403]) or not (lions_ingress_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['ExternalAccessibility: External access failed'] if (lions_ingress_enabled | bool and primefaces_external_access.status not in [200, 301, 302, 401, 403]) else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DU CERTIFICAT SSL
# =========================================================================

- name: "PrimeFaces Validate | V√©rification du certificat SSL"
  uri:
    url: "{{ primefaces_application_url }}"
    method: HEAD
    timeout: "{{ lions_timeout_default }}"
    validate_certs: true
  register: primefaces_ssl_check
  when: 
    - lions_ingress_enabled | bool
    - lions_security_tls_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Validation du certificat SSL"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'ssl_certificate': (primefaces_ssl_check.status in [200, 301, 302, 401, 403]) or not (lions_security_tls_enabled | bool and lions_ingress_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['SSLCertificate: SSL certificate validation failed'] if (lions_security_tls_enabled | bool and lions_ingress_enabled | bool and primefaces_ssl_check.status not in [200, 301, 302, 401, 403]) else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DES M√âTRIQUES DE MONITORING
# =========================================================================

- name: "PrimeFaces Validate | Test des m√©triques Prometheus"
  uri:
    url: "{{ primefaces_internal_url }}/actuator/prometheus"
    method: GET
    status_code: [200]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_metrics_check
  when: lions_monitoring_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Validation des m√©triques de monitoring"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'monitoring_metrics': (primefaces_metrics_check.status == 200) or not (lions_monitoring_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['MonitoringMetrics: Prometheus metrics not available'] if (lions_monitoring_enabled | bool and primefaces_metrics_check.status != 200) else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DE L'AUTHENTIFICATION
# =========================================================================

- name: "PrimeFaces Validate | Test d'authentification Keycloak"
  uri:
    url: "{{ primefaces_application_url }}/login"
    method: GET
    status_code: [200, 302, 401]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: "{{ lions_security_tls_enabled | bool }}"
    follow_redirects: false
  register: primefaces_auth_check
  when: 
    - lions_keycloak_enabled | bool
    - lions_ingress_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Validation de l'authentification"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'authentication': (primefaces_auth_check.status in [200, 302, 401]) or not (lions_keycloak_enabled | bool and lions_ingress_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['Authentication: Authentication system not responding'] if (lions_keycloak_enabled | bool and lions_ingress_enabled | bool and primefaces_auth_check.status not in [200, 302, 401]) else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DES HEADERS DE S√âCURIT√â
# =========================================================================

- name: "PrimeFaces Validate | Test des headers de s√©curit√©"
  uri:
    url: "{{ primefaces_application_url }}"
    method: HEAD
    timeout: "{{ lions_timeout_default }}"
    validate_certs: "{{ lions_security_tls_enabled | bool }}"
  register: primefaces_security_headers
  when: lions_ingress_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Analyse des headers de s√©curit√©"
  set_fact:
    primefaces_security_headers_present: >-
      {{ (primefaces_security_headers.response_headers is defined) and
         ('X-Frame-Options' in primefaces_security_headers.response_headers or 'x-frame-options' in primefaces_security_headers.response_headers) and
         ('X-Content-Type-Options' in primefaces_security_headers.response_headers or 'x-content-type-options' in primefaces_security_headers.response_headers) }}
  when: 
    - lions_ingress_enabled | bool
    - primefaces_security_headers is succeeded

- name: "PrimeFaces Validate | Validation des headers de s√©curit√©"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'security_headers': primefaces_security_headers_present | default(false) or not (lions_ingress_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['SecurityHeaders: Security headers not properly configured'] if (lions_ingress_enabled | bool and not primefaces_security_headers_present | default(false)) else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DES ENDPOINTS API
# =========================================================================

- name: "PrimeFaces Validate | Test des endpoints API principaux"
  uri:
    url: "{{ primefaces_internal_url }}/api/{{ item }}"
    method: GET
    status_code: [200, 401, 403, 404]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_api_endpoints
  loop:
    - "health"
    - "version" 
    - "status"
  failed_when: false
  ignore_errors: yes

- name: "PrimeFaces Validate | Validation des endpoints API"
  set_fact:
    primefaces_api_success_count: "{{ primefaces_api_endpoints.results | selectattr('status', 'in', [200, 401, 403]) | list | length }}"

- name: "PrimeFaces Validate | Mise √† jour de la validation API"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'api_endpoints': (primefaces_api_success_count | int) >= 1}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['APIEndpoints: Some API endpoints not responding'] if (primefaces_api_success_count | int) < 1 else primefaces_validation_warnings }}"

# =========================================================================
# VALIDATION DE LA RESPONSIVIT√â DE L'INTERFACE
# =========================================================================

- name: "PrimeFaces Validate | Test de responsivit√© de l'interface"
  uri:
    url: "{{ primefaces_application_url }}"
    method: GET
    timeout: "{{ lions_primefaces_ui_timeout | default(30) }}"
    validate_certs: "{{ lions_security_tls_enabled | bool }}"
  register: primefaces_ui_response
  when: lions_ingress_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Validation de la responsivit√© UI"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'ui_responsiveness': (primefaces_ui_response.elapsed | default(999)) < (lions_primefaces_ui_timeout | default(30)) or not (lions_ingress_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['UIResponsiveness: UI response time is slow'] if (lions_ingress_enabled | bool and (primefaces_ui_response.elapsed | default(999)) >= (lions_primefaces_ui_timeout | default(30))) else primefaces_validation_warnings }}"

# =========================================================================
# BASELINE DE PERFORMANCE
# =========================================================================

- name: "PrimeFaces Validate | Test de performance baseline"
  uri:
    url: "{{ primefaces_internal_url }}/actuator/metrics/http.server.requests"
    method: GET
    status_code: [200]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: false
  register: primefaces_performance_metrics
  when: lions_monitoring_enabled | bool
  failed_when: false

- name: "PrimeFaces Validate | Validation de la baseline de performance"
  set_fact:
    primefaces_validation_tests: "{{ primefaces_validation_tests | combine({'performance_baseline': (primefaces_performance_metrics.status == 200) or not (lions_monitoring_enabled | bool)}) }}"
    primefaces_validation_warnings: "{{ primefaces_validation_warnings + ['PerformanceBaseline: Performance metrics not available'] if (lions_monitoring_enabled | bool and primefaces_performance_metrics.status != 200) else primefaces_validation_warnings }}"

# =========================================================================
# RAPPORT DE VALIDATION
# =========================================================================

- name: "PrimeFaces Validate | Collecte des m√©triques de validation"
  set_fact:
    primefaces_validation_metrics:
      duration: "{{ (ansible_date_time.epoch | int) - (primefaces_validate_start_time | int) }}"
      tests_passed: "{{ primefaces_validation_tests.values() | select('equalto', true) | list | length }}"
      total_tests: "{{ primefaces_validation_tests | length }}"
      success_rate: "{{ ((primefaces_validation_tests.values() | select('equalto', true) | list | length) / (primefaces_validation_tests | length) * 100) | round(2) }}"
      errors_count: "{{ primefaces_validation_errors | length }}"
      warnings_count: "{{ primefaces_validation_warnings | length }}"
      critical_tests_passed: >-
        {{ primefaces_validation_tests.kubernetes_resources and
           primefaces_validation_tests.application_health }}

- name: "PrimeFaces Validate | Rapport de validation d√©taill√©"
  debug:
    msg:
      - "üìä RAPPORT DE VALIDATION POST-D√âPLOIEMENT PRIMEFACES"
      - "=================================================="
      - "‚è±Ô∏è  Dur√©e: {{ primefaces_validation_metrics.duration }}s"
      - "‚úÖ Tests r√©ussis: {{ primefaces_validation_metrics.tests_passed }}/{{ primefaces_validation_metrics.total_tests }}"
      - "üìä Taux de succ√®s: {{ primefaces_validation_metrics.success_rate }}%"
      - "‚ùå Erreurs critiques: {{ primefaces_validation_metrics.errors_count }}"
      - "‚ö†Ô∏è  Avertissements: {{ primefaces_validation_metrics.warnings_count }}"
      - ""
      - "üìã D√©tail des validations:"
      - "üéØ Ressources Kubernetes: {{ '‚úÖ' if primefaces_validation_tests.kubernetes_resources else '‚ùå' }}"
      - "üè• Sant√© application: {{ '‚úÖ' if primefaces_validation_tests.application_health else '‚ùå' }}"
      - "üóÑÔ∏è  Connectivit√© BDD: {{ '‚úÖ' if primefaces_validation_tests.database_connectivity else '‚ö†Ô∏è' }}"
      - "üíæ Connectivit√© Cache: {{ '‚úÖ' if primefaces_validation_tests.cache_connectivity else '‚ö†Ô∏è' }}"
      - "üåê Accessibilit√© externe: {{ '‚úÖ' if primefaces_validation_tests.external_accessibility else '‚ö†Ô∏è' }}"
      - "üîí Certificat SSL: {{ '‚úÖ' if primefaces_validation_tests.ssl_certificate else '‚ö†Ô∏è' }}"
      - "üìä M√©triques monitoring: {{ '‚úÖ' if primefaces_validation_tests.monitoring_metrics else '‚ö†Ô∏è' }}"
      - "üîê Authentification: {{ '‚úÖ' if primefaces_validation_tests.authentication else '‚ö†Ô∏è' }}"
      - "üõ°Ô∏è  Headers s√©curit√©: {{ '‚úÖ' if primefaces_validation_tests.security_headers else '‚ö†Ô∏è' }}"
      - "üîå Endpoints API: {{ '‚úÖ' if primefaces_validation_tests.api_endpoints else '‚ö†Ô∏è' }}"
      - "‚ö° Responsivit√© UI: {{ '‚úÖ' if primefaces_validation_tests.ui_responsiveness else '‚ö†Ô∏è' }}"
      - "üìà Baseline performance: {{ '‚úÖ' if primefaces_validation_tests.performance_baseline else '‚ö†Ô∏è' }}"
      - ""
      - "üîó URLs de test:"
      - "- Application: {{ primefaces_application_url }}"
      - "- Sant√©: {{ primefaces_internal_url }}/actuator/health"
      - "- M√©triques: {{ primefaces_internal_url }}/actuator/prometheus"
  tags:
    - primefaces
    - validate
    - report

# =========================================================================
# GESTION DES √âCHECS CRITIQUES
# =========================================================================

- name: "PrimeFaces Validate | √âchec critique de validation"
  fail:
    msg: |
      ‚ùå Validation critique √©chou√©e pour PrimeFaces!
      
      üö® Erreurs critiques d√©tect√©es:
      {% for error in primefaces_validation_errors %}
      - {{ error }}
      {% endfor %}
      
      üìã Tests √©chou√©s:
      {% for test, status in primefaces_validation_tests.items() %}
      {% if not status %}
      - {{ test }}: FAILED
      {% endif %}
      {% endfor %}
      
      üîß Actions requises:
      1. V√©rifiez les logs des pods: kubectl logs -n {{ lions_primefaces_namespace }} -l app.kubernetes.io/name={{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}
      2. V√©rifiez l'√©tat des ressources: kubectl get all -n {{ lions_primefaces_namespace }}
      3. Consultez la documentation de d√©pannage: https://docs.lions.dev/infrastructure/primefaces/troubleshooting
  when: >
    not primefaces_validation_metrics.critical_tests_passed or
    primefaces_validation_metrics.errors_count > 0

- name: "PrimeFaces Validate | Avertissements de validation"
  debug:
    msg:
      - "‚ö†Ô∏è  Avertissements d√©tect√©s:"
      - "{{ primefaces_validation_warnings | join('\n- ') if primefaces_validation_warnings | length > 0 else 'Aucun avertissement' }}"
      - ""
      - "üìã L'application est fonctionnelle mais certaines fonctionnalit√©s peuvent √™tre limit√©es"
      - "üîß Consultez la documentation pour les optimisations: https://docs.lions.dev/infrastructure/primefaces/optimization"
  when: 
    - primefaces_validation_metrics.critical_tests_passed
    - primefaces_validation_metrics.warnings_count > 0

- name: "PrimeFaces Validate | Succ√®s de la validation"
  debug:
    msg:
      - "üéâ Validation PrimeFaces termin√©e avec succ√®s!"
      - "‚úÖ Tous les tests critiques sont pass√©s"
      - "üìä Taux de succ√®s: {{ primefaces_validation_metrics.success_rate }}%"
      - "üåê Application accessible: {{ primefaces_application_url }}"
      - "üìä Monitoring disponible: {{ 'Oui' if primefaces_validation_tests.monitoring_metrics else 'Non' }}"
      - "üîí S√©curit√© configur√©e: {{ 'Oui' if primefaces_validation_tests.ssl_certificate and primefaces_validation_tests.security_headers else 'Partiellement' }}"
  when: 
    - primefaces_validation_metrics.critical_tests_passed
    - primefaces_validation_metrics.errors_count == 0
    - primefaces_validation_metrics.success_rate == 100

# =========================================================================
# G√âN√âRATION DU RAPPORT DE D√âPLOIEMENT
# =========================================================================

- name: "PrimeFaces Validate | Cr√©ation du r√©pertoire de rapports"
  file:
    path: "/var/log/lions/deployments"
    state: directory
    mode: '0755'
  delegate_to: localhost
  ignore_errors: yes

- name: "PrimeFaces Validate | G√©n√©ration du rapport de d√©ploiement"
  copy:
    content: |
      =========================================================================
      RAPPORT DE D√âPLOIEMENT LIONS INFRASTRUCTURE 5.0 - PRIMEFACES
      =========================================================================
      
      Application: {{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}
      Version: {{ lions_primefaces_app_version | default('latest') }}
      Environnement: {{ lions_environment }}
      Namespace: {{ lions_primefaces_namespace }}
      Date de d√©ploiement: {{ ansible_date_time.iso8601 }}
      Dur√©e de validation: {{ primefaces_validation_metrics.duration }}s
      
      =========================================================================
      URLS D'ACC√àS
      =========================================================================
      Application: {{ primefaces_application_url }}
      Sant√©: {{ primefaces_internal_url }}/actuator/health
      M√©triques: {{ primefaces_internal_url }}/actuator/prometheus
      {% if lions_monitoring_enabled | bool %}
      Dashboard Grafana: https://grafana.{{ lions_dns_full_domain }}/d/lions-primefaces-{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}-{{ lions_environment }}
      {% endif %}
      
      =========================================================================
      STATUT DE VALIDATION
      =========================================================================
      Statut global: {{ 'SUCC√àS' if primefaces_validation_metrics.success_rate == 100 else 'AVERTISSEMENT' if primefaces_validation_metrics.critical_tests_passed else '√âCHEC' }}
      Tests r√©ussis: {{ primefaces_validation_metrics.tests_passed }}/{{ primefaces_validation_metrics.total_tests }}
      Taux de succ√®s: {{ primefaces_validation_metrics.success_rate }}%
      Erreurs critiques: {{ primefaces_validation_metrics.errors_count }}
      Avertissements: {{ primefaces_validation_metrics.warnings_count }}
      
      =========================================================================
      D√âTAIL DES TESTS
      =========================================================================
      {% for test, status in primefaces_validation_tests.items() %}
      {{ test }}: {{ 'SUCC√àS' if status else '√âCHEC' }}
      {% endfor %}
      
      =========================================================================
      RESSOURCES D√âPLOY√âES
      =========================================================================
      Pods sains: {{ primefaces_healthy_pods }}/{{ primefaces_expected_pods }}
      CPU Requests: {{ lions_primefaces_cpu_request | default('N/A') }}
      Memory Requests: {{ lions_primefaces_memory_request | default('N/A') }}
      CPU Limits: {{ lions_primefaces_cpu_limit | default('N/A') }}
      Memory Limits: {{ lions_primefaces_memory_limit | default('N/A') }}
      
      =========================================================================
      SERVICES INT√âGR√âS
      =========================================================================
      PostgreSQL: {{ 'Activ√©' if lions_postgres_enabled | bool else 'D√©sactiv√©' }}
      Redis: {{ 'Activ√©' if lions_redis_enabled | bool else 'D√©sactiv√©' }}
      Keycloak: {{ 'Activ√©' if lions_keycloak_enabled | bool else 'D√©sactiv√©' }}
      Monitoring: {{ 'Activ√©' if lions_monitoring_enabled | bool else 'D√©sactiv√©' }}
      Ingress: {{ 'Activ√©' if lions_ingress_enabled | bool else 'D√©sactiv√©' }}
      TLS: {{ 'Activ√©' if lions_security_tls_enabled | bool else 'D√©sactiv√©' }}
      
      =========================================================================
      ERREURS ET AVERTISSEMENTS
      =========================================================================
      {% if primefaces_validation_errors | length > 0 %}
      Erreurs:
      {% for error in primefaces_validation_errors %}
      - {{ error }}
      {% endfor %}
      {% endif %}
      
      {% if primefaces_validation_warnings | length > 0 %}
      Avertissements:
      {% for warning in primefaces_validation_warnings %}
      - {{ warning }}
      {% endfor %}
      {% endif %}
      
      =========================================================================
      DOCUMENTATION ET SUPPORT
      =========================================================================
      Documentation: https://docs.lions.dev/infrastructure/primefaces
      D√©pannage: https://docs.lions.dev/infrastructure/primefaces/troubleshooting
      Support: DevOps LIONS Team <devops@lions.dev>
      
      =========================================================================
      COMMANDES UTILES
      =========================================================================
      V√©rifier les pods:
      kubectl get pods -n {{ lions_primefaces_namespace }} -l app.kubernetes.io/name={{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}
      
      Consulter les logs:
      kubectl logs -n {{ lions_primefaces_namespace }} -l app.kubernetes.io/name={{ lions_primefaces_app_name | default(lions_primefaces_service_name) }} --tail=100
      
      D√©crire le d√©ploiement:
      kubectl describe deployment -n {{ lions_primefaces_namespace }} {{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}
      
      Test de sant√©:
      curl {{ primefaces_internal_url }}/actuator/health
      
      =========================================================================
    dest: "/var/log/lions/deployments/{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}-{{ lions_environment }}-{{ ansible_date_time.date }}.log"
    mode: '0644'
  delegate_to: localhost
  ignore_errors: yes

# =========================================================================
# NETTOYAGE POST-VALIDATION
# =========================================================================

- name: "PrimeFaces Validate | Nettoyage des fichiers temporaires"
  file:
    path: "{{ primefaces_temp_dir }}"
    state: absent
  when: 
    - primefaces_temp_dir is defined
    - not primefaces_deployment_config.debug_mode | default(false) | bool
  ignore_errors: yes
  tags:
    - primefaces
    - validate
    - cleanup

# =========================================================================
# EXPOSITION DES VARIABLES POUR INT√âGRATION
# =========================================================================

- name: "PrimeFaces Validate | Exposition des r√©sultats de validation"
  set_fact:
    primefaces_validation_successful: "{{ primefaces_validation_metrics.critical_tests_passed }}"
    primefaces_validation_score: "{{ primefaces_validation_metrics.success_rate }}"
    primefaces_deployment_url: "{{ primefaces_application_url }}"
    primefaces_health_endpoint: "{{ primefaces_internal_url }}/actuator/health"
    primefaces_metrics_endpoint: "{{ primefaces_internal_url }}/actuator/prometheus"
    primefaces_deployment_status: "{{ 'SUCCESS' if primefaces_validation_metrics.success_rate == 100 else 'WARNING' if primefaces_validation_metrics.critical_tests_passed else 'FAILED' }}"
  tags:
    - primefaces
    - validate
    - variables