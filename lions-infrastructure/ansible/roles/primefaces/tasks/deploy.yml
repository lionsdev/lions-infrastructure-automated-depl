# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - PRIMEFACES DEPLOYMENT TASKS
# =========================================================================
# Description: T√¢ches Ansible pour le d√©ploiement des applications PrimeFaces
# Composant: PrimeFaces Application Deployment
# Version: 5.0.0
# Maintainer: DevOps LIONS Team
# Documentation: https://docs.lions.dev/infrastructure/primefaces/deployment
# =========================================================================

---
# =========================================================================
# PHASE DE D√âPLOIEMENT - COMPOSANTS KUBERNETES
# =========================================================================

- name: "PrimeFaces Deploy | {{ current_phase | default('deployment') | title }} - Initialisation"
  set_fact:
    primefaces_deploy_start_time: "{{ ansible_date_time.epoch }}"
    primefaces_deploy_components:
      configmap: false
      serviceaccount: false
      deployment: false
      service: false
      ingress: false
      servicemonitor: false
      pvc: false
    primefaces_deploy_errors: []
  tags:
    - primefaces
    - deploy
    - init

- name: "PrimeFaces Deploy | Affichage des informations de d√©ploiement"
  debug:
    msg:
      - "üöÄ D√©but du d√©ploiement PrimeFaces"
      - "üìã Application: {{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
      - "üè∑Ô∏è  Namespace: {{ lions_primefaces_namespace }}"
      - "üåç Environnement: {{ lions_environment }}"
      - "üÜî Version: {{ lions_primefaces_app_version | default('latest') }}"
  when: primefaces_deployment_config.debug_mode | default(false) | bool
  tags:
    - primefaces
    - deploy
    - debug

# =========================================================================
# D√âPLOIEMENT DE LA CONFIGMAP
# =========================================================================

- name: "PrimeFaces Deploy | G√©n√©ration de la ConfigMap"
  template:
    src: configmap.yml.j2
    dest: "{{ primefaces_temp_dir }}/configmap.yml"
    mode: '0644'
  register: primefaces_configmap_template

- name: "PrimeFaces Deploy | Application de la ConfigMap"
  kubernetes.core.k8s:
    state: present
    src: "{{ primefaces_temp_dir }}/configmap.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default }}"
    wait_condition:
      type: Created
      status: "True"
  register: primefaces_configmap_result
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification du d√©ploiement ConfigMap"
  set_fact:
    primefaces_deploy_components: "{{ primefaces_deploy_components | combine({'configmap': primefaces_configmap_result is succeeded}) }}"
    primefaces_deploy_errors: "{{ primefaces_deploy_errors + ['ConfigMap: ' + (primefaces_configmap_result.msg | default('Unknown error'))] if primefaces_configmap_result is failed else primefaces_deploy_errors }}"

# =========================================================================
# D√âPLOIEMENT DU SERVICE ACCOUNT
# =========================================================================

- name: "PrimeFaces Deploy | G√©n√©ration du ServiceAccount"
  template:
    src: serviceaccount.yml.j2
    dest: "{{ primefaces_temp_dir }}/serviceaccount.yml"
    mode: '0644'
  register: primefaces_serviceaccount_template

- name: "PrimeFaces Deploy | Application du ServiceAccount"
  kubernetes.core.k8s:
    state: present
    src: "{{ primefaces_temp_dir }}/serviceaccount.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default }}"
  register: primefaces_serviceaccount_result
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification du d√©ploiement ServiceAccount"
  set_fact:
    primefaces_deploy_components: "{{ primefaces_deploy_components | combine({'serviceaccount': primefaces_serviceaccount_result is succeeded}) }}"
    primefaces_deploy_errors: "{{ primefaces_deploy_errors + ['ServiceAccount: ' + (primefaces_serviceaccount_result.msg | default('Unknown error'))] if primefaces_serviceaccount_result is failed else primefaces_deploy_errors }}"

# =========================================================================
# D√âPLOIEMENT DU PERSISTENT VOLUME CLAIM
# =========================================================================

- name: "PrimeFaces Deploy | G√©n√©ration du PersistentVolumeClaim"
  template:
    src: persistentvolumeclaim.yml.j2
    dest: "{{ primefaces_temp_dir }}/persistentvolumeclaim.yml"
    mode: '0644'
  when: lions_primefaces_storage_enabled | default(false) | bool
  register: primefaces_pvc_template

- name: "PrimeFaces Deploy | Application du PersistentVolumeClaim"
  kubernetes.core.k8s:
    state: present
    src: "{{ primefaces_temp_dir }}/persistentvolumeclaim.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default }}"
    wait_condition:
      type: Bound
      status: "True"
  when: lions_primefaces_storage_enabled | default(false) | bool
  register: primefaces_pvc_result
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification du d√©ploiement PVC"
  set_fact:
    primefaces_deploy_components: "{{ primefaces_deploy_components | combine({'pvc': primefaces_pvc_result is succeeded or not (lions_primefaces_storage_enabled | default(false) | bool)}) }}"
    primefaces_deploy_errors: "{{ primefaces_deploy_errors + ['PVC: ' + (primefaces_pvc_result.msg | default('Unknown error'))] if (primefaces_pvc_result is failed and lions_primefaces_storage_enabled | default(false) | bool) else primefaces_deploy_errors }}"

# =========================================================================
# D√âPLOIEMENT PRINCIPAL - DEPLOYMENT
# =========================================================================

- name: "PrimeFaces Deploy | G√©n√©ration du Deployment"
  template:
    src: deployment.yml.j2
    dest: "{{ primefaces_temp_dir }}/deployment.yml"
    mode: '0644'
  register: primefaces_deployment_template

- name: "PrimeFaces Deploy | Application du Deployment"
  kubernetes.core.k8s:
    state: present
    src: "{{ primefaces_temp_dir }}/deployment.yml"
    wait: true
    wait_timeout: "{{ lions_primefaces_deployment_timeout | default(600) }}"
    wait_condition:
      type: Progressing
      status: "True"
      reason: NewReplicaSetAvailable
  register: primefaces_deployment_result
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification du d√©ploiement Deployment"
  set_fact:
    primefaces_deploy_components: "{{ primefaces_deploy_components | combine({'deployment': primefaces_deployment_result is succeeded}) }}"
    primefaces_deploy_errors: "{{ primefaces_deploy_errors + ['Deployment: ' + (primefaces_deployment_result.msg | default('Unknown error'))] if primefaces_deployment_result is failed else primefaces_deploy_errors }}"

# =========================================================================
# ATTENTE DE LA DISPONIBILIT√â DES PODS
# =========================================================================

- name: "PrimeFaces Deploy | Attente de la disponibilit√© des pods"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: "{{ lions_primefaces_namespace }}"
    name: "{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
    wait: true
    wait_timeout: "{{ lions_primefaces_readiness_timeout | default(300) }}"
    wait_condition:
      type: Available
      status: "True"
  register: primefaces_deployment_status
  retries: "{{ primefaces_error_handling.max_retries | default(3) }}"
  delay: "{{ primefaces_error_handling.retry_delay | default(10) }}"
  until: >
    primefaces_deployment_status.resources | length > 0 and
    primefaces_deployment_status.resources[0].status.availableReplicas is defined and
    primefaces_deployment_status.resources[0].status.availableReplicas == primefaces_deployment_status.resources[0].spec.replicas
  when: primefaces_deploy_components.deployment
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification de l'√©tat des pods"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ lions_primefaces_namespace }}"
    label_selectors:
      - "app.kubernetes.io/name={{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}"
      - "app.kubernetes.io/instance={{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}-{{ lions_environment }}"
  register: primefaces_pods_status
  when: primefaces_deploy_components.deployment

- name: "PrimeFaces Deploy | Analyse des pods non op√©rationnels"
  set_fact:
    primefaces_unhealthy_pods: >-
      {{ primefaces_pods_status.resources | default([]) |
         selectattr('status.phase', 'ne', 'Running') |
         list }}
  when: 
    - primefaces_deploy_components.deployment
    - primefaces_pods_status.resources is defined

- name: "PrimeFaces Deploy | Logging des pods probl√©matiques"
  debug:
    msg:
      - "‚ö†Ô∏è  Pod non op√©rationnel d√©tect√©:"
      - "üìõ Nom: {{ item.metadata.name }}"
      - "üìä Phase: {{ item.status.phase }}"
      - "üîç Conditions: {{ item.status.conditions | default([]) | map(attribute='type') | list }}"
  loop: "{{ primefaces_unhealthy_pods | default([]) }}"
  when: primefaces_unhealthy_pods | default([]) | length > 0

# =========================================================================
# D√âPLOIEMENT DU SERVICE
# =========================================================================

- name: "PrimeFaces Deploy | G√©n√©ration du Service"
  template:
    src: service.yml.j2
    dest: "{{ primefaces_temp_dir }}/service.yml"
    mode: '0644'
  register: primefaces_service_template

- name: "PrimeFaces Deploy | Application du Service"
  kubernetes.core.k8s:
    state: present
    src: "{{ primefaces_temp_dir }}/service.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default }}"
  register: primefaces_service_result
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification du d√©ploiement Service"
  set_fact:
    primefaces_deploy_components: "{{ primefaces_deploy_components | combine({'service': primefaces_service_result is succeeded}) }}"
    primefaces_deploy_errors: "{{ primefaces_deploy_errors + ['Service: ' + (primefaces_service_result.msg | default('Unknown error'))] if primefaces_service_result is failed else primefaces_deploy_errors }}"

# =========================================================================
# D√âPLOIEMENT DE L'INGRESS
# =========================================================================

- name: "PrimeFaces Deploy | G√©n√©ration de l'Ingress"
  template:
    src: ingress.yml.j2
    dest: "{{ primefaces_temp_dir }}/ingress.yml"
    mode: '0644'
  when: lions_ingress_enabled | bool
  register: primefaces_ingress_template

- name: "PrimeFaces Deploy | Application de l'Ingress"
  kubernetes.core.k8s:
    state: present
    src: "{{ primefaces_temp_dir }}/ingress.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default }}"
  when: lions_ingress_enabled | bool
  register: primefaces_ingress_result
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification du d√©ploiement Ingress"
  set_fact:
    primefaces_deploy_components: "{{ primefaces_deploy_components | combine({'ingress': primefaces_ingress_result is succeeded or not (lions_ingress_enabled | bool)}) }}"
    primefaces_deploy_errors: "{{ primefaces_deploy_errors + ['Ingress: ' + (primefaces_ingress_result.msg | default('Unknown error'))] if (primefaces_ingress_result is failed and lions_ingress_enabled | bool) else primefaces_deploy_errors }}"

# =========================================================================
# D√âPLOIEMENT DU SERVICEMONITOR
# =========================================================================

- name: "PrimeFaces Deploy | G√©n√©ration du ServiceMonitor"
  template:
    src: servicemonitor.yml.j2
    dest: "{{ primefaces_temp_dir }}/servicemonitor.yml"
    mode: '0644'
  when: lions_monitoring_enabled | bool
  register: primefaces_servicemonitor_template

- name: "PrimeFaces Deploy | Application du ServiceMonitor"
  kubernetes.core.k8s:
    state: present
    src: "{{ primefaces_temp_dir }}/servicemonitor.yml"
    wait: true
    wait_timeout: "{{ lions_timeout_default }}"
  when: lions_monitoring_enabled | bool
  register: primefaces_servicemonitor_result
  failed_when: false

- name: "PrimeFaces Deploy | V√©rification du d√©ploiement ServiceMonitor"
  set_fact:
    primefaces_deploy_components: "{{ primefaces_deploy_components | combine({'servicemonitor': primefaces_servicemonitor_result is succeeded or not (lions_monitoring_enabled | bool)}) }}"
    primefaces_deploy_errors: "{{ primefaces_deploy_errors + ['ServiceMonitor: ' + (primefaces_servicemonitor_result.msg | default('Unknown error'))] if (primefaces_servicemonitor_result is failed and lions_monitoring_enabled | bool) else primefaces_deploy_errors }}"

# =========================================================================
# TESTS DE CONNECTIVIT√â ET HEALTH CHECKS
# =========================================================================

- name: "PrimeFaces Deploy | Test de connectivit√© interne"
  uri:
    url: "http://{{ lions_primefaces_app_name | default(lions_primefaces_service_name) }}.{{ lions_primefaces_namespace }}.svc.cluster.local:{{ lions_primefaces_port }}/actuator/health"
    method: GET
    status_code: [200, 503]
    timeout: "{{ lions_timeout_default }}"
  register: primefaces_internal_health_check
  retries: "{{ lions_primefaces_health_retries | default(5) }}"
  delay: "{{ lions_primefaces_health_delay | default(10) }}"
  until: primefaces_internal_health_check.status == 200
  when: 
    - primefaces_deploy_components.deployment
    - primefaces_deploy_components.service
    - lions_monitoring_enabled | bool
  failed_when: false

- name: "PrimeFaces Deploy | Test de connectivit√© externe (via Ingress)"
  uri:
    url: "https://{{ lions_primefaces_hostname }}.{{ lions_dns_full_domain }}/actuator/health"
    method: GET
    status_code: [200, 503]
    timeout: "{{ lions_timeout_default }}"
    validate_certs: "{{ lions_security_tls_enabled | bool }}"
  register: primefaces_external_health_check
  retries: "{{ lions_primefaces_health_retries | default(3) }}"
  delay: "{{ lions_primefaces_health_delay | default(15) }}"
  until: primefaces_external_health_check.status == 200
  when: 
    - primefaces_deploy_components.ingress
    - lions_ingress_enabled | bool
    - lions_monitoring_enabled | bool
    - lions_environment != 'development'
  failed_when: false

# =========================================================================
# VALIDATION POST-D√âPLOIEMENT
# =========================================================================

- name: "PrimeFaces Deploy | Collecte des m√©triques de d√©ploiement"
  set_fact:
    primefaces_deployment_metrics:
      duration: "{{ (ansible_date_time.epoch | int) - (primefaces_deploy_start_time | int) }}"
      components_deployed: "{{ primefaces_deploy_components.values() | select('equalto', true) | list | length }}"
      total_components: "{{ primefaces_deploy_components | length }}"
      success_rate: "{{ ((primefaces_deploy_components.values() | select('equalto', true) | list | length) / (primefaces_deploy_components | length) * 100) | round(2) }}"
      errors_count: "{{ primefaces_deploy_errors | length }}"
      pods_healthy: "{{ (primefaces_pods_status.resources | default([]) | selectattr('status.phase', 'equalto', 'Running') | list | length) if primefaces_pods_status.resources is defined else 0 }}"
      internal_health: "{{ 'OK' if primefaces_internal_health_check.status == 200 else 'FAILED' }}"
      external_health: "{{ 'OK' if primefaces_external_health_check.status == 200 else 'FAILED' }}"

- name: "PrimeFaces Deploy | Rapport de d√©ploiement"
  debug:
    msg:
      - "üìä RAPPORT DE D√âPLOIEMENT PRIMEFACES"
      - "============================================"
      - "‚è±Ô∏è  Dur√©e: {{ primefaces_deployment_metrics.duration }}s"
      - "üì¶ Composants d√©ploy√©s: {{ primefaces_deployment_metrics.components_deployed }}/{{ primefaces_deployment_metrics.total_components }}"
      - "‚úÖ Taux de succ√®s: {{ primefaces_deployment_metrics.success_rate }}%"
      - "üè• Pods sains: {{ primefaces_deployment_metrics.pods_healthy }}"
      - "üîç Sant√© interne: {{ primefaces_deployment_metrics.internal_health }}"
      - "üåê Sant√© externe: {{ primefaces_deployment_metrics.external_health }}"
      - "‚ùå Erreurs: {{ primefaces_deployment_metrics.errors_count }}"
      - "{% if primefaces_deploy_errors | length > 0 %}üö® D√©tails des erreurs: {{ primefaces_deploy_errors | join(', ') }}{% endif %}"
  tags:
    - primefaces
    - deploy
    - report

# =========================================================================
# GESTION DES √âCHECS DE D√âPLOIEMENT
# =========================================================================

- name: "PrimeFaces Deploy | √âchec du d√©ploiement - Composants critiques"
  fail:
    msg: |
      ‚ùå √âchec critique du d√©ploiement PrimeFaces!
      
      üìã Composants en √©chec:
      {% for component, status in primefaces_deploy_components.items() %}
      - {{ component }}: {{ 'OK' if status else 'FAILED' }}
      {% endfor %}
      
      üö® Erreurs d√©tect√©es:
      {% for error in primefaces_deploy_errors %}
      - {{ error }}
      {% endfor %}
      
      üîç V√©rifiez les logs pour plus de d√©tails
  when: >
    not primefaces_deploy_components.configmap or
    not primefaces_deploy_components.serviceaccount or
    not primefaces_deploy_components.deployment or
    not primefaces_deploy_components.service or
    primefaces_deployment_metrics.success_rate < 80

- name: "PrimeFaces Deploy | Avertissement - Composants non critiques"
  debug:
    msg:
      - "‚ö†Ô∏è  Avertissement: Certains composants non critiques ont √©chou√©"
      - "üìã Le d√©ploiement principal est fonctionnel mais incomplet"
      - "üîß Composants √† v√©rifier: {{ primefaces_deploy_errors | join(', ') }}"
  when: 
    - primefaces_deploy_components.deployment
    - primefaces_deploy_components.service
    - primefaces_deploy_errors | length > 0
    - primefaces_deployment_metrics.success_rate >= 80

- name: "PrimeFaces Deploy | Succ√®s du d√©ploiement"
  debug:
    msg:
      - "üéâ D√©ploiement PrimeFaces termin√© avec succ√®s!"
      - "üåê Application accessible √†: https://{{ lions_primefaces_hostname }}.{{ lions_dns_full_domain }}"
      - "üìä M√©triques: https://{{ lions_primefaces_hostname }}.{{ lions_dns_full_domain }}/actuator/metrics"
      - "üè• Health Check: https://{{ lions_primefaces_hostname }}.{{ lions_dns_full_domain }}/actuator/health"
  when: 
    - primefaces_deployment_metrics.success_rate == 100
    - primefaces_deploy_errors | length == 0

# =========================================================================
# NETTOYAGE POST-D√âPLOIEMENT
# =========================================================================

- name: "PrimeFaces Deploy | Nettoyage des fichiers temporaires"
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ primefaces_temp_dir }}/configmap.yml"
    - "{{ primefaces_temp_dir }}/serviceaccount.yml"
    - "{{ primefaces_temp_dir }}/deployment.yml"
    - "{{ primefaces_temp_dir }}/service.yml"
    - "{{ primefaces_temp_dir }}/ingress.yml"
    - "{{ primefaces_temp_dir }}/servicemonitor.yml"
    - "{{ primefaces_temp_dir }}/persistentvolumeclaim.yml"
  when: not primefaces_deployment_config.debug_mode | default(false) | bool
  ignore_errors: yes
  tags:
    - primefaces
    - deploy
    - cleanup
