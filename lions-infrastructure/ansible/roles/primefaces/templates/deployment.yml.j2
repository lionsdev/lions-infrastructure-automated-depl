---
# Titre: Template de déploiement Kubernetes pour PrimeFaces
# Description: Définit le déploiement Kubernetes pour une application PrimeFaces
# Auteur: Équipe LIONS Infrastructure
# Date: 2025-05-07
# Version: 1.0.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ app_name }}"
  namespace: "{{ app_namespace }}"
  labels:
    app: "{{ app_name }}"
    version: "{{ app_version }}"
    environment: "{{ app_environment }}"
    technology: "primefaces"
  annotations:
    description: "Déploiement de l'application {{ app_name }} ({{ app_version }}) en environnement {{ app_environment }}"
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: {{ primefaces_replicas[app_environment] }}
  selector:
    matchLabels:
      app: "{{ app_name }}"
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: "{{ app_name }}"
        version: "{{ app_version }}"
        environment: "{{ app_environment }}"
        technology: "primefaces"
      annotations:
        prometheus.io/scrape: "{{ primefaces_prometheus_scrape | string | lower }}"
        prometheus.io/path: "{{ primefaces_prometheus_path }}"
        prometheus.io/port: "{{ primefaces_prometheus_port | string }}"
    spec:
      serviceAccountName: "{{ app_name }}"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: "{{ app_name }}"
          image: "registry.lions.dev/{{ app_name }}:{{ app_version }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: {{ primefaces_default_port }}
              protocol: TCP
          env:
            - name: JAVA_OPTS
              value: "{{ primefaces_java_opts }}"
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ primefaces_profile }}"
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PRIMEFACES_THEME
              value: "{{ primefaces_theme }}"
            - name: PRIMEFACES_FONTAWESOME
              value: "{{ primefaces_fontawesome | string | lower }}"
            - name: PRIMEFACES_RESPONSIVE
              value: "{{ primefaces_responsive | string | lower }}"
          envFrom:
            - configMapRef:
                name: "{{ app_name }}-config"
            - secretRef:
                name: "{{ app_name }}-secrets"
                optional: true
          resources:
            requests:
              cpu: "{{ primefaces_resources[app_environment].requests.cpu }}"
              memory: "{{ primefaces_resources[app_environment].requests.memory }}"
            limits:
              cpu: "{{ primefaces_resources[app_environment].limits.cpu }}"
              memory: "{{ primefaces_resources[app_environment].limits.memory }}"
          readinessProbe:
            {{- primefaces_readiness_probe | to_nice_yaml(indent=2) | indent(12) }}
          livenessProbe:
            {{- primefaces_liveness_probe | to_nice_yaml(indent=2) | indent(12) }}
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: config-volume
              mountPath: /config
              readOnly: true
            {% if primefaces_persistent_storage | bool %}
            - name: data-volume
              mountPath: /data
            {% endif %}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: false
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: config-volume
          configMap:
            name: "{{ app_name }}-config"
        {% if primefaces_persistent_storage | bool %}
        - name: data-volume
          persistentVolumeClaim:
            claimName: "{{ app_name }}-pvc"
        {% endif %}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - "{{ app_name }}"
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60