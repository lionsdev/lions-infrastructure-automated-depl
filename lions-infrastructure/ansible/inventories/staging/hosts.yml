---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - INVENTAIRE STAGING
# =========================================================================
# Description: Inventaire Ansible pour l'environnement de staging
# Version: 5.0.0
# Environnement: staging
# Maintainer: DevOps Team
# Documentation: https://docs.lions.dev/infrastructure/inventories/staging
# =========================================================================

all:
  children:
    # =====================================================================
    # GROUPE KUBERNETES - CLUSTER K3S
    # =====================================================================
    kubernetes:
      children:
        # Nœuds de contrôle K3s
        control_plane:
          hosts:
            "{{ lions_k8s_control_plane_nodes | default(['kube-master-staging-01']) | first }}":
              ansible_host: "{{ lions_infra_staging_master_ip | default('192.168.2.101') }}"
              k3s_role: server
              k3s_server_init: true
              k3s_token: "{{ lions_k8s_cluster_token }}"
              k3s_datastore_endpoint: "{{ lions_k8s_ha_datastore_endpoint | default('') }}"
              # Configuration spécifique au nœud maître
              node_labels:
                - "node-role.kubernetes.io/control-plane=true"
                - "lions.dev/environment=staging"
                - "lions.dev/node-type=control-plane"
              node_taints:
                - "node-role.kubernetes.io/control-plane:NoSchedule"

        # Nœuds workers K3s
        workers:
          hosts:
            kube-worker-staging-01:
              ansible_host: "{{ lions_infra_staging_worker_01_ip | default('192.168.2.111') }}"
              k3s_role: agent
              k3s_server_url: "https://{{ lions_infra_staging_master_ip | default('192.168.2.101') }}:6443"
              k3s_token: "{{ lions_k8s_cluster_token }}"
              # Configuration spécifique au worker
              node_labels:
                - "lions.dev/environment=staging"
                - "lions.dev/node-type=worker"
                - "lions.dev/workload-type=general"

            kube-worker-staging-02:
              ansible_host: "{{ lions_infra_staging_worker_02_ip | default('192.168.2.112') }}"
              k3s_role: agent
              k3s_server_url: "https://{{ lions_infra_staging_master_ip | default('192.168.2.101') }}:6443"
              k3s_token: "{{ lions_k8s_cluster_token }}"
              # Configuration spécifique au worker
              node_labels:
                - "lions.dev/environment=staging"
                - "lions.dev/node-type=worker"
                - "lions.dev/workload-type=general"

      # Variables communes au cluster Kubernetes
      vars:
        k3s_version: "{{ lions_k8s_version | default('v1.30.2+k3s1') }}"
        k3s_install_channel: "{{ lions_k8s_install_channel | default('stable') }}"
        k3s_data_dir: "{{ lions_k8s_data_dir | default('/var/lib/rancher/k3s') }}"
        k3s_config_file: "{{ lions_k8s_config_file | default('/etc/rancher/k3s/k3s.yaml') }}"

        # Configuration réseau K3s
        k3s_cluster_cidr: "{{ lions_k8s_cluster_cidr | default('10.42.0.0/16') }}"
        k3s_service_cidr: "{{ lions_k8s_service_cidr | default('10.43.0.0/16') }}"
        k3s_dns_domain: "{{ lions_k8s_dns_domain | default('cluster.local') }}"

        # Configuration des composants intégrés
        k3s_disable_components:
          - traefik  # Nous déployons notre propre Traefik
        k3s_enable_components:
          - metrics-server
          - local-storage

        # Configuration sécurité
        k3s_secrets_encryption: "{{ lions_security_secrets_encryption | default(true) }}"
        k3s_audit_enabled: "{{ lions_audit_enabled | default(true) }}"

    # =====================================================================
    # GROUPE BASES DE DONNÉES
    # =====================================================================
    databases:
      children:
        postgresql:
          hosts:
            postgresql-staging-01:
              ansible_host: "{{ lions_infra_staging_db_ip | default('192.168.2.201') }}"
              db_role: primary
              db_type: postgresql
              db_version: "{{ lions_postgres_version | default('15.4') }}"
              # Configuration spécifique PostgreSQL
              postgresql_config:
                max_connections: 200
                shared_buffers: "256MB"
                effective_cache_size: "1GB"
                maintenance_work_mem: "64MB"
                checkpoint_completion_target: 0.9
                wal_buffers: "16MB"
                default_statistics_target: 100
                random_page_cost: 1.1

        redis:
          hosts:
            redis-staging-01:
              ansible_host: "{{ lions_infra_staging_redis_ip | default('192.168.2.202') }}"
              db_role: primary
              db_type: redis
              db_version: "{{ lions_redis_version | default('7.2') }}"
              # Configuration spécifique Redis
              redis_config:
                maxmemory: "512mb"
                maxmemory_policy: "allkeys-lru"
                save: "900 1 300 10 60 10000"
                appendonly: "yes"
                appendfsync: "everysec"

    # =====================================================================
    # GROUPE MONITORING ET OBSERVABILITÉ
    # =====================================================================
    monitoring:
      hosts:
        monitoring-staging-01:
          ansible_host: "{{ lions_infra_staging_monitoring_ip | default('192.168.2.301') }}"
          monitoring_role: primary
          # Services de monitoring installés
          monitoring_services:
            - prometheus
            - grafana
            - alertmanager
            - node_exporter
            - blackbox_exporter
          # Configuration Prometheus
          prometheus_config:
            storage_retention: "{{ lions_prometheus_retention | default('15d') }}"
            storage_size: "{{ lions_prometheus_storage_size | default('30Gi') }}"
            scrape_interval: "15s"
            evaluation_interval: "15s"
          # Configuration Grafana
          grafana_config:
            admin_user: "{{ lions_grafana_admin_user | default('admin') }}"
            enable_anonymous: false
            allow_sign_up: false

    # =====================================================================
    # GROUPE SÉCURITÉ ET GESTION DES SECRETS
    # =====================================================================
    security:
      children:
        vault:
          hosts:
            vault-staging-01:
              ansible_host: "{{ lions_infra_staging_vault_ip | default('192.168.2.401') }}"
              vault_role: primary
              vault_version: "{{ lions_vault_version | default('1.15.2') }}"
              vault_port: "{{ lions_vault_port | default('8200') }}"
              # Configuration Vault
              vault_config:
                storage_type: "file"
                storage_path: "{{ lions_vault_data_dir | default('/opt/vault/data') }}"
                tls_enabled: "{{ lions_security_tls_enabled | default(true) }}"
                ui_enabled: true
                api_addr: "{{ lions_vault_addr | default('https://vault.staging.lions.dev') }}"
                cluster_addr: "https://{{ ansible_host }}:8201"

    # =====================================================================
    # GROUPE SERVICES INFRASTRUCTURE
    # =====================================================================
    infrastructure_services:
      children:
        load_balancers:
          hosts:
            haproxy-staging-01:
              ansible_host: "{{ lions_infra_staging_lb_ip | default('192.168.2.501') }}"
              lb_role: primary
              lb_type: haproxy
              # Configuration Load Balancer
              lb_backends:
                - name: "k8s-api"
                  port: 6443
                  servers:
                    - "{{ lions_infra_staging_master_ip | default('192.168.2.101') }}:6443"
                - name: "k8s-ingress-http"
                  port: 80
                  servers:
                    - "{{ lions_infra_staging_worker_01_ip | default('192.168.2.111') }}:80"
                    - "{{ lions_infra_staging_worker_02_ip | default('192.168.2.112') }}:80"
                - name: "k8s-ingress-https"
                  port: 443
                  servers:
                    - "{{ lions_infra_staging_worker_01_ip | default('192.168.2.111') }}:443"
                    - "{{ lions_infra_staging_worker_02_ip | default('192.168.2.112') }}:443"

        dns_servers:
          hosts:
            dns-staging-01:
              ansible_host: "{{ lions_infra_staging_dns_ip | default('192.168.2.601') }}"
              dns_role: primary
              dns_type: bind9
              # Configuration DNS
              dns_zones:
                - name: "{{ lions_dns_domain_base | default('lions.dev') }}"
                  type: master
                  records:
                    - type: A
                      name: "staging"
                      value: "{{ lions_infra_staging_lb_ip | default('192.168.2.501') }}"
                    - type: CNAME
                      name: "*.staging"
                      value: "staging.{{ lions_dns_domain_base | default('lions.dev') }}"

  # ===========================================================================
  # VARIABLES GLOBALES POUR L'ENVIRONNEMENT STAGING
  # ===========================================================================
  vars:
    # -----------------------------------------------------------------------
    # Configuration de connexion Ansible
    # -----------------------------------------------------------------------
    ansible_user: "{{ lions_infra_target_user | default('lions-admin') }}"
    ansible_ssh_private_key_file: "{{ lions_infra_ssh_key_path | default('~/.ssh/lions_staging_rsa') }}"
    ansible_ssh_port: "{{ lions_infra_target_port | default('22') }}"
    ansible_become: true
    ansible_become_method: sudo
    ansible_become_user: root

    # Configuration de connexion SSH avancée
    ansible_ssh_common_args: >-
      -o StrictHostKeyChecking=no
      -o UserKnownHostsFile=/dev/null
      -o ControlMaster=auto
      -o ControlPersist=60s
      -o ControlPath=~/.ssh/ansible-%r@%h:%p
      -o ServerAliveInterval=60
      -o ServerAliveCountMax=3

    # -----------------------------------------------------------------------
    # Configuration de l'environnement
    # -----------------------------------------------------------------------
    lions_environment: staging
    lions_deployment_mode: "{{ lions_deployment_mode | default('cluster') }}"
    lions_config_version: "5.0.0"

    # -----------------------------------------------------------------------
    # Configuration DNS et domaines
    # -----------------------------------------------------------------------
    lions_dns_domain_base: "{{ lions_dns_domain_base | default('lions.dev') }}"
    lions_dns_full_domain: "staging.{{ lions_dns_domain_base }}"
    lions_dns_wildcard_enabled: "{{ lions_dns_wildcard_enabled | default(true) }}"

    # -----------------------------------------------------------------------
    # Configuration réseau
    # -----------------------------------------------------------------------
    lions_network_staging_subnet: "192.168.2.0/24"
    lions_network_staging_gateway: "192.168.2.1"
    lions_network_staging_dns_servers:
      - "192.168.2.601"  # DNS staging interne
      - "8.8.8.8"        # DNS Google (fallback)
      - "1.1.1.1"        # DNS Cloudflare (fallback)

    # -----------------------------------------------------------------------
    # Configuration sécurité
    # -----------------------------------------------------------------------
    lions_security_tls_enabled: "{{ lions_security_tls_enabled | default(true) }}"
    lions_security_tls_staging: "{{ lions_security_tls_staging | default(true) }}"
    lions_security_network_policies: "{{ lions_security_network_policies | default(true) }}"
    lions_security_rbac_enabled: "{{ lions_security_rbac_enabled | default(true) }}"

    # -----------------------------------------------------------------------
    # Configuration stockage
    # -----------------------------------------------------------------------
    lions_storage_class_default: "{{ lions_storage_class_default | default('local-path') }}"
    lions_storage_base_path: "{{ lions_storage_base_path | default('/opt/lions/storage') }}"

    # -----------------------------------------------------------------------
    # Configuration backup
    # -----------------------------------------------------------------------
    lions_backup_enabled: "{{ lions_backup_enabled | default(true) }}"
    lions_backup_retention_days: "{{ lions_backup_retention_days | default(15) }}"
    lions_backup_schedule: "{{ lions_backup_schedule | default('0 3 * * *') }}"  # 3AM daily

    # -----------------------------------------------------------------------
    # Configuration monitoring
    # -----------------------------------------------------------------------
    lions_monitoring_enabled: "{{ lions_monitoring_enabled | default(true) }}"
    lions_monitoring_namespace: "{{ lions_monitoring_namespace | default('monitoring') }}"
    lions_log_level: "{{ lions_log_level | default('INFO') }}"
    lions_audit_enabled: "{{ lions_audit_enabled | default(true) }}"

    # -----------------------------------------------------------------------
    # Configuration des ressources par défaut
    # -----------------------------------------------------------------------
    lions_resources_profile: medium  # small|medium|large
    lions_autoscaling_enabled: "{{ lions_autoscaling_enabled | default(true) }}"
    lions_autoscaling_min_replicas: "{{ lions_autoscaling_min_replicas | default(2) }}"
    lions_autoscaling_max_replicas: "{{ lions_autoscaling_max_replicas | default(8) }}"

    # -----------------------------------------------------------------------
    # Configuration des timeouts
    # -----------------------------------------------------------------------
    lions_timeout_deployment: "{{ lions_timeout_deployment | default(1200) }}"  # 20 minutes
    lions_timeout_rollback: "{{ lions_timeout_rollback | default(600) }}"       # 10 minutes
    lions_timeout_health_check: "{{ lions_timeout_health_check | default(300) }}" # 5 minutes

    # -----------------------------------------------------------------------
    # Tags et labels pour la traçabilité
    # -----------------------------------------------------------------------
    lions_common_labels:
      environment: staging
      project: lions-infrastructure
      version: "5.0.0"
      managed_by: ansible
      maintainer: devops-team

    lions_common_annotations:
      "lions.dev/environment": staging
      "lions.dev/config-version": "5.0.0"
      "lions.dev/last-updated": "{{ ansible_date_time.iso8601 }}"
      "lions.dev/managed-by": "lions-infrastructure-ansible"

# =============================================================================
# GROUPES DYNAMIQUES BASÉS SUR LES RÔLES
# =============================================================================
# Ces groupes sont créés automatiquement en fonction des rôles définis
# Ils permettent de cibler facilement des ensembles de serveurs par fonction