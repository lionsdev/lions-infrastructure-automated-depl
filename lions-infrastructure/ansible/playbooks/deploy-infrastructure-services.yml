---
# =========================================================================
# LIONS INFRASTRUCTURE 5.0 - D√âPLOIEMENT SERVICES D'INFRASTRUCTURE
# =========================================================================
# Description: D√©ploie les services d'infrastructure core avec gestion avanc√©e
# Version: 5.0.0
# Auteur: DevOps Team - LIONS Infrastructure
# Date: 2025-05-26
# Documentation: https://docs.lions.dev/infrastructure/playbooks/deploy-infrastructure
# =========================================================================

- name: "LIONS Infrastructure 5.0 - D√©ploiement Services d'Infrastructure"
  hosts: "{{ lions_target_hosts | default('vps') }}"
  become: true
  gather_facts: true
  serial: "{{ lions_deployment_serial | default('100%') }}"
  max_fail_percentage: "{{ lions_max_fail_percentage | default(0) }}"

  vars:
    # =====================================================================
    # CONFIGURATION PRINCIPALE DU PLAYBOOK
    # =====================================================================
    playbook_name: "deploy-infrastructure-services"
    playbook_version: "5.0.0"
    deployment_timestamp: "{{ ansible_date_time.iso8601 }}"
    deployment_id: "{{ deployment_timestamp | regex_replace('[^0-9]', '') }}"

    # Variables d'environnement (utilisation stricte des variables LIONS_*)
    lions_environment: "{{ lookup('env', 'LIONS_ENVIRONMENT') | default('development') }}"
    lions_deployment_mode: "{{ lookup('env', 'LIONS_DEPLOYMENT_MODE') | default('single') }}"
    lions_debug_mode: "{{ lookup('env', 'LIONS_DEBUG_MODE') | default('false') | bool }}"
    lions_dry_run: "{{ lookup('env', 'LIONS_DRY_RUN') | default('false') | bool }}"

    # Configuration DNS et domaines
    lions_dns_domain_base: "{{ lookup('env', 'LIONS_DNS_DOMAIN_BASE') | default('lions.local') }}"
    lions_dns_subdomain_prefix: "{{ lookup('env', 'LIONS_DNS_SUBDOMAIN_PREFIX') | default(lions_environment) }}"
    lions_dns_full_domain: "{{ lions_dns_subdomain_prefix }}.{{ lions_dns_domain_base }}"

    # Configuration des timeouts
    lions_timeout_deployment: "{{ lookup('env', 'LIONS_TIMEOUT_DEPLOYMENT') | default('1800') | int }}"
    lions_timeout_default: "{{ lookup('env', 'LIONS_TIMEOUT_DEFAULT') | default('300') | int }}"

    # Configuration du logging
    lions_log_level: "{{ lookup('env', 'LIONS_LOG_LEVEL') | default('INFO') }}"
    lions_audit_enabled: "{{ lookup('env', 'LIONS_AUDIT_ENABLED') | default('true') | bool }}"

    # =====================================================================
    # CONFIGURATION DES SERVICES √Ä D√âPLOYER
    # =====================================================================
    infrastructure_services:
      # Registry Docker
      - name: "registry"
        enabled: "{{ lookup('env', 'LIONS_REGISTRY_ENABLED') | default('true') | bool }}"
        priority: 1
        role_name: "registry"
        config:
          app_name: "registry"
          app_namespace: "{{ lookup('env', 'LIONS_REGISTRY_NAMESPACE') | default('development') }}"
          app_version: "{{ lookup('env', 'LIONS_REGISTRY_VERSION') | default('2.8') }}"
          app_port: "{{ lookup('env', 'LIONS_REGISTRY_PORT') | default('5000') | int }}"
          app_domain: "registry.{{ lions_dns_full_domain }}"
          storage_size: "{{ lookup('env', 'LIONS_REGISTRY_STORAGE_SIZE') | default('50Gi') }}"
          service_name: "{{ lookup('env', 'LIONS_REGISTRY_SERVICE_NAME') | default('registry') }}"

      # PostgreSQL
      - name: "postgres"
        enabled: "{{ lookup('env', 'LIONS_POSTGRES_ENABLED') | default('true') | bool }}"
        priority: 2
        role_name: "postgres"
        config:
          app_name: "postgresql"
          app_namespace: "{{ lookup('env', 'LIONS_POSTGRES_NAMESPACE') | default('database') }}"
          app_version: "{{ lookup('env', 'LIONS_POSTGRES_VERSION') | default('15.4') }}"
          app_port: "{{ lookup('env', 'LIONS_POSTGRES_PORT') | default('5432') | int }}"
          app_domain: "postgres.{{ lions_dns_full_domain }}"
          storage_size: "{{ lookup('env', 'LIONS_POSTGRES_STORAGE_SIZE') | default('20Gi') }}"
          service_name: "{{ lookup('env', 'LIONS_POSTGRES_SERVICE_NAME') | default('postgresql') }}"
          database_name: "{{ lookup('env', 'LIONS_POSTGRES_DATABASE') | default('lions_db') }}"
          backup_enabled: "{{ lookup('env', 'LIONS_POSTGRES_BACKUP_ENABLED') | default('true') | bool }}"

      # PgAdmin
      - name: "pgadmin"
        enabled: "{{ lookup('env', 'LIONS_POSTGRES_ENABLED') | default('true') | bool }}"
        priority: 3
        role_name: "pgadmin"
        depends_on: ["postgres"]
        config:
          app_name: "pgadmin"
          app_namespace: "{{ lookup('env', 'LIONS_POSTGRES_NAMESPACE') | default('database') }}"
          app_version: "latest"
          app_port: 80
          app_domain: "pgadmin.{{ lions_dns_full_domain }}"
          service_name: "pgadmin"
          postgres_host: "{{ lookup('env', 'LIONS_POSTGRES_SERVICE_NAME') | default('postgresql') }}.{{ lookup('env', 'LIONS_POSTGRES_NAMESPACE') | default('database') }}.svc.cluster.local"
          postgres_port: "{{ lookup('env', 'LIONS_POSTGRES_PORT') | default('5432') | int }}"

      # Redis
      - name: "redis"
        enabled: "{{ lookup('env', 'LIONS_REDIS_ENABLED') | default('true') | bool }}"
        priority: 4
        role_name: "redis"
        config:
          app_name: "redis"
          app_namespace: "{{ lookup('env', 'LIONS_REDIS_NAMESPACE') | default('database') }}"
          app_version: "{{ lookup('env', 'LIONS_REDIS_VERSION') | default('7.2') }}"
          app_port: "{{ lookup('env', 'LIONS_REDIS_PORT') | default('6379') | int }}"
          app_domain: "redis.{{ lions_dns_full_domain }}"
          storage_size: "{{ lookup('env', 'LIONS_REDIS_STORAGE_SIZE') | default('5Gi') }}"
          service_name: "{{ lookup('env', 'LIONS_REDIS_SERVICE_NAME') | default('redis') }}"

      # Gitea
      - name: "gitea"
        enabled: "{{ lookup('env', 'LIONS_GITEA_ENABLED') | default('true') | bool }}"
        priority: 5
        role_name: "gitea"
        depends_on: ["postgres"]
        config:
          app_name: "gitea"
          app_namespace: "{{ lookup('env', 'LIONS_GITEA_NAMESPACE') | default('development') }}"
          app_version: "{{ lookup('env', 'LIONS_GITEA_VERSION') | default('1.20.5') }}"
          app_port: "{{ lookup('env', 'LIONS_GITEA_PORT') | default('3000') | int }}"
          app_domain: "gitea.{{ lions_dns_full_domain }}"
          storage_size: "{{ lookup('env', 'LIONS_GITEA_STORAGE_SIZE') | default('10Gi') }}"
          service_name: "{{ lookup('env', 'LIONS_GITEA_SERVICE_NAME') | default('gitea') }}"
          postgres_host: "{{ lookup('env', 'LIONS_POSTGRES_SERVICE_NAME') | default('postgresql') }}.{{ lookup('env', 'LIONS_POSTGRES_NAMESPACE') | default('database') }}.svc.cluster.local"
          postgres_port: "{{ lookup('env', 'LIONS_POSTGRES_PORT') | default('5432') | int }}"

      # Keycloak
      - name: "keycloak"
        enabled: "{{ lookup('env', 'LIONS_KEYCLOAK_ENABLED') | default('true') | bool }}"
        priority: 6
        role_name: "keycloak"
        depends_on: ["postgres"]
        config:
          app_name: "keycloak"
          app_namespace: "{{ lookup('env', 'LIONS_KEYCLOAK_NAMESPACE') | default('security') }}"
          app_version: "{{ lookup('env', 'LIONS_KEYCLOAK_VERSION') | default('22.0') }}"
          app_port: "{{ lookup('env', 'LIONS_KEYCLOAK_PORT') | default('8080') | int }}"
          app_domain: "keycloak.{{ lions_dns_full_domain }}"
          service_name: "{{ lookup('env', 'LIONS_KEYCLOAK_SERVICE_NAME') | default('keycloak') }}"
          realm_name: "{{ lookup('env', 'LIONS_KEYCLOAK_REALM') | default('lions') }}"
          admin_user: "{{ lookup('env', 'LIONS_KEYCLOAK_ADMIN_USER') | default('admin') }}"
          postgres_host: "{{ lookup('env', 'LIONS_POSTGRES_SERVICE_NAME') | default('postgresql') }}.{{ lookup('env', 'LIONS_POSTGRES_NAMESPACE') | default('database') }}.svc.cluster.local"
          postgres_port: "{{ lookup('env', 'LIONS_POSTGRES_PORT') | default('5432') | int }}"

      # Ollama
      - name: "ollama"
        enabled: "{{ lookup('env', 'LIONS_OLLAMA_ENABLED') | default('true') | bool }}"
        priority: 7
        role_name: "ollama"
        config:
          app_name: "ollama"
          app_namespace: "{{ lookup('env', 'LIONS_OLLAMA_NAMESPACE') | default('ai') }}"
          app_version: "{{ lookup('env', 'LIONS_OLLAMA_VERSION') | default('0.1.26') }}"
          app_port: "{{ lookup('env', 'LIONS_OLLAMA_PORT') | default('11434') | int }}"
          app_domain: "ollama.{{ lions_dns_full_domain }}"
          storage_size: "{{ lookup('env', 'LIONS_OLLAMA_STORAGE_SIZE') | default('100Gi') }}"
          service_name: "{{ lookup('env', 'LIONS_OLLAMA_SERVICE_NAME') | default('ollama') }}"
          gpu_enabled: "{{ lookup('env', 'LIONS_OLLAMA_GPU_ENABLED') | default('false') | bool }}"

  # =======================================================================
  # PRE-TASKS - VALIDATION ET PR√âPARATION
  # =======================================================================
  pre_tasks:
    - name: "üîç Validation - Affichage des informations de d√©ploiement"
      debug:
        msg:
          - "=================================================="
          - "LIONS Infrastructure 5.0 - D√©ploiement Services"
          - "=================================================="
          - "Environnement: {{ lions_environment }}"
          - "Mode de d√©ploiement: {{ lions_deployment_mode }}"
          - "Domaine complet: {{ lions_dns_full_domain }}"
          - "ID de d√©ploiement: {{ deployment_id }}"
          - "Timestamp: {{ deployment_timestamp }}"
          - "Mode debug: {{ lions_debug_mode }}"
          - "Mode dry-run: {{ lions_dry_run }}"
          - "=================================================="
      tags: ["always", "validation"]

    - name: "üîç Validation - V√©rification des variables critiques"
      assert:
        that:
          - lions_environment in ['development', 'staging', 'production']
          - lions_dns_domain_base is defined and lions_dns_domain_base | length > 0
          - lions_deployment_mode in ['single', 'cluster', 'ha']
        fail_msg: "Variables d'environnement critiques manquantes ou invalides"
        success_msg: "Variables d'environnement valid√©es avec succ√®s"
      tags: ["always", "validation"]

    - name: "üîß Pr√©paration - Installation des d√©pendances Python requises"
      pip:
        name:
          - kubernetes>=24.2.0
          - PyYAML>=6.0
          - jsonpatch>=1.32
          - jmespath>=1.0.0
        state: present
        extra_args: "--upgrade --user"
      become: false
      when: not lions_dry_run
      tags: ["preparation"]

    - name: "üîß Pr√©paration - V√©rification de la connectivit√© Kubernetes"
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Node
      register: k8s_nodes_check
      failed_when: false
      when: not lions_dry_run
      tags: ["preparation", "k8s"]

    - name: "‚ùå √âchec - Kubernetes non accessible"
      fail:
        msg: "Impossible de se connecter au cluster Kubernetes. V√©rifiez la configuration."
      when:
        - not lions_dry_run
        - k8s_nodes_check is defined
        - k8s_nodes_check.failed | default(false)
      tags: ["preparation", "k8s"]

    - name: "‚úÖ Succ√®s - Cluster Kubernetes accessible"
      debug:
        msg: "Cluster Kubernetes accessible - {{ k8s_nodes_check.resources | length }} n≈ìud(s) d√©tect√©(s)"
      when:
        - not lions_dry_run
        - k8s_nodes_check is defined
        - not (k8s_nodes_check.failed | default(false))
      tags: ["preparation", "k8s"]

    - name: "üìù Audit - Enregistrement du d√©but de d√©ploiement"
      lineinfile:
        path: "/var/log/lions-infrastructure-audit.log"
        line: "{{ deployment_timestamp }} | START | {{ playbook_name }} | {{ lions_environment }} | {{ deployment_id }} | {{ ansible_user }}@{{ inventory_hostname }}"
        create: true
        mode: "0644"
      when:
        - lions_audit_enabled
        - not lions_dry_run
      tags: ["audit"]

  # =======================================================================
  # TASKS PRINCIPALES - D√âPLOIEMENT DES SERVICES
  # =======================================================================
  tasks:
    - name: "üöÄ D√©ploiement - Services d'infrastructure par ordre de priorit√©"
      include_tasks: "tasks/deploy_service.yml"
      vars:
        service: "{{ item }}"
        service_config: "{{ item.config }}"
        deployment_context:
          environment: "{{ lions_environment }}"
          domain: "{{ lions_dns_full_domain }}"
          timestamp: "{{ deployment_timestamp }}"
          deployment_id: "{{ deployment_id }}"
          dry_run: "{{ lions_dry_run }}"
          debug: "{{ lions_debug_mode }}"
      loop: "{{ infrastructure_services | selectattr('enabled') | sort(attribute='priority') }}"
      loop_control:
        loop_var: item
        label: "{{ item.name }} (priorit√©: {{ item.priority }})"
      when: item.enabled | default(false)
      tags: ["deployment"]

    - name: "üîç Validation - V√©rification post-d√©ploiement des services"
      include_tasks: "tasks/validate_service.yml"
      vars:
        service: "{{ item }}"
        service_config: "{{ item.config }}"
      loop: "{{ infrastructure_services | selectattr('enabled') | list }}"
      loop_control:
        loop_var: item
        label: "{{ item.name }}"
      when:
        - item.enabled | default(false)
        - not lions_dry_run
      tags: ["validation", "post-deployment"]

  # =======================================================================
  # POST-TASKS - FINALISATION ET VALIDATION
  # =======================================================================
  post_tasks:
    - name: "üìä R√©sum√© - Collecte des informations de d√©ploiement"
      set_fact:
        deployment_summary:
          playbook: "{{ playbook_name }}"
          version: "{{ playbook_version }}"
          environment: "{{ lions_environment }}"
          timestamp: "{{ deployment_timestamp }}"
          deployment_id: "{{ deployment_id }}"
          services_deployed: "{{ infrastructure_services | selectattr('enabled') | map(attribute='name') | list }}"
          total_services: "{{ infrastructure_services | selectattr('enabled') | list | length }}"
          domain: "{{ lions_dns_full_domain }}"
          dry_run: "{{ lions_dry_run }}"
      tags: ["summary"]

    - name: "‚úÖ Succ√®s - Affichage du r√©sum√© de d√©ploiement"
      debug:
        msg:
          - "=============================================="
          - "D√âPLOIEMENT TERMIN√â AVEC SUCC√àS"
          - "=============================================="
          - "Services d√©ploy√©s: {{ deployment_summary.services_deployed | join(', ') }}"
          - "Total: {{ deployment_summary.total_services }} service(s)"
          - "Environnement: {{ deployment_summary.environment }}"
          - "Domaine: {{ deployment_summary.domain }}"
          - "ID de d√©ploiement: {{ deployment_summary.deployment_id }}"
          - "Timestamp: {{ deployment_summary.timestamp }}"
          - "=============================================="
          - "üåê Acc√®s aux services:"
          - "{% for service in infrastructure_services | selectattr('enabled') %}"
          - "  ‚Ä¢ {{ service.name | title }}: https://{{ service.config.app_domain }}"
          - "{% endfor %}"
          - "=============================================="
      tags: ["summary"]

    - name: "üìù Audit - Enregistrement de fin de d√©ploiement"
      lineinfile:
        path: "/var/log/lions-infrastructure-audit.log"
        line: "{{ ansible_date_time.iso8601 }} | SUCCESS | {{ playbook_name }} | {{ lions_environment }} | {{ deployment_id }} | {{ deployment_summary.total_services }} services deployed"
        mode: "0644"
      when:
        - lions_audit_enabled
        - not lions_dry_run
      tags: ["audit"]

    - name: "üîÑ Sauvegarde - Enregistrement de la configuration de d√©ploiement"
      copy:
        content: "{{ deployment_summary | to_nice_yaml }}"
        dest: "/opt/lions/deployments/{{ deployment_id }}-infrastructure-services.yml"
        mode: "0644"
      when: not lions_dry_run
      tags: ["backup"]

  # =======================================================================
  # GESTION DES ERREURS
  # =======================================================================
  rescue:
    - name: "‚ùå Erreur - D√©ploiement √©chou√©"
      debug:
        msg:
          - "=============================================="
          - "ERREUR LORS DU D√âPLOIEMENT"
          - "=============================================="
          - "Playbook: {{ playbook_name }}"
          - "Environnement: {{ lions_environment }}"
          - "ID de d√©ploiement: {{ deployment_id }}"
          - "Timestamp: {{ deployment_timestamp }}"
          - "=============================================="
      tags: ["error-handling"]

    - name: "üìù Audit - Enregistrement de l'√©chec"
      lineinfile:
        path: "/var/log/lions-infrastructure-audit.log"
        line: "{{ ansible_date_time.iso8601 }} | FAILED | {{ playbook_name }} | {{ lions_environment }} | {{ deployment_id }} | Deployment failed"
        mode: "0644"
      when: lions_audit_enabled
      tags: ["audit", "error-handling"]

    - name: "üîÑ Rollback - D√©clenchement automatique si configur√©"
      include_tasks: "tasks/rollback_deployment.yml"
      vars:
        rollback_deployment_id: "{{ deployment_id }}"
        rollback_services: "{{ infrastructure_services | selectattr('enabled') | map(attribute='name') | list }}"
      when:
        - lookup('env', 'LIONS_AUTO_ROLLBACK_ENABLED') | default('false') | bool
        - not lions_dry_run
      tags: ["rollback", "error-handling"]

  # =========================================================================
  # HANDLERS - ACTIONS D√âCLENCH√âES PAR LES NOTIFICATIONS
  # =========================================================================
  handlers:
    - name: "üîÑ restart monitoring"
      debug:
        msg: "Red√©marrage du monitoring suite aux changements"
      tags: ["handlers"]

    - name: "üìß send notification"
      debug:
        msg: "Envoi de notification - Service: {{ service_name | default('unknown') }}"
      tags: ["handlers"]

    - name: "üîç validate deployment"
      debug:
        msg: "Validation du d√©ploiement demand√©e"
      tags: ["handlers"]