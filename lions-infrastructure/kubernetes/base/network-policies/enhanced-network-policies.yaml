---
# Titre: Politiques réseau améliorées
# Description: Définit des politiques réseau améliorées pour l'infrastructure LIONS
# Auteur: Équipe LIONS Infrastructure
# Date: 2025-05-16
# Version: 1.0.0

# Politique pour Gitea
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: gitea-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      technology: gitea
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app: traefik
    ports:
    - protocol: TCP
      port: 3001
    - protocol: TCP
      port: 22
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 3001
  egress:
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          technology: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    ports:
    - protocol: TCP
      port: 25
    - protocol: TCP
      port: 465
    - protocol: TCP
      port: 587
  policyTypes:
  - Ingress
  - Egress
---
# Politique pour Keycloak
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: keycloak-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      technology: keycloak
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app: traefik
    ports:
    - protocol: TCP
      port: 8085
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8085
  - from:
    - podSelector:
        matchLabels:
          technology: quarkus
    - podSelector:
        matchLabels:
          technology: primefaces
    - podSelector:
        matchLabels:
          technology: primereact
    ports:
    - protocol: TCP
      port: 8085
  egress:
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          technology: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  policyTypes:
  - Ingress
  - Egress
---
# Politique pour Ollama
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ollama-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      technology: ollama
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app: traefik
    ports:
    - protocol: TCP
      port: 11434
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 11434
  - from:
    - podSelector:
        matchLabels:
          technology: quarkus
    - podSelector:
        matchLabels:
          technology: primefaces
    - podSelector:
        matchLabels:
          technology: primereact
    ports:
    - protocol: TCP
      port: 11434
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  policyTypes:
  - Ingress
  - Egress
---
# Politique pour PgAdmin
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pgadmin-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      technology: pgadmin
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app: traefik
    ports:
    - protocol: TCP
      port: 5050
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 5050
  egress:
  - to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          technology: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  policyTypes:
  - Ingress
  - Egress
---
# Politique pour le namespace monitoring
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-network-policy
  namespace: monitoring
spec:
  podSelector: {}
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app: traefik
    ports:
    - protocol: TCP
      port: 3000  # Grafana
    - protocol: TCP
      port: 9090  # Prometheus
    - protocol: TCP
      port: 9093  # Alertmanager
  - from:
    - namespaceSelector: {}
  egress:
  - to:
    - namespaceSelector: {}
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    ports:
    - protocol: TCP
      port: 25  # SMTP
    - protocol: TCP
      port: 465  # SMTPS
    - protocol: TCP
      port: 587  # Submission
    - protocol: TCP
      port: 443  # HTTPS
  policyTypes:
  - Ingress
  - Egress
---
# Politique pour le namespace cert-manager
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cert-manager-network-policy
  namespace: cert-manager
spec:
  podSelector: {}
  ingress:
  - from:
    - namespaceSelector: {}
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    ports:
    - protocol: TCP
      port: 443  # HTTPS pour Let's Encrypt
  policyTypes:
  - Ingress
  - Egress
---
# Politique pour le namespace kubernetes-dashboard
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubernetes-dashboard-network-policy
  namespace: kubernetes-dashboard
spec:
  podSelector: {}
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app: traefik
    ports:
    - protocol: TCP
      port: 443
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  policyTypes:
  - Ingress
  - Egress
---
# Politique pour limiter l'accès externe des applications
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-external-access
  namespace: default
spec:
  podSelector: {}
  egress:
  - to:
    - namespaceSelector: {}
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
    ports:
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 80   # HTTP (pour les redirections)
    - protocol: TCP
      port: 25   # SMTP
    - protocol: TCP
      port: 465  # SMTPS
    - protocol: TCP
      port: 587  # Submission
  policyTypes:
  - Egress