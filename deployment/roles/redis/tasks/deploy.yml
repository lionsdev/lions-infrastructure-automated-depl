---
# Titre: Déploiement de Redis
# Description: Déploie Redis sur Kubernetes
# Auteur: Équipe LIONS Infrastructure
# Date: 2025-05-08
# Version: 1.0.0

- name: Déploiement de Redis via StatefulSet
  k8s:
    state: present
    src: "{{ temp_dir.path }}/statefulset.yml"
  register: statefulset_result

- name: Création du service pour Redis
  k8s:
    state: present
    src: "{{ temp_dir.path }}/service.yml"
  register: service_result

- name: Attente du déploiement
  k8s_info:
    api_version: apps/v1
    kind: StatefulSet
    namespace: "{{ app_namespace }}"
    name: "{{ app_name }}"
  register: statefulset_status
  until: statefulset_status.resources[0].status.readyReplicas is defined and statefulset_status.resources[0].status.readyReplicas == statefulset_status.resources[0].spec.replicas
  retries: 30
  delay: 10
  ignore_errors: yes

- name: Vérification du statut du déploiement
  fail:
    msg: "Le déploiement de Redis a échoué. Veuillez vérifier les logs pour plus d'informations."
  when: statefulset_status is failed or statefulset_status.resources | length == 0

- name: Récupération des informations sur les pods
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ app_namespace }}"
    label_selectors:
      - "app={{ app_name }}"
  register: pods_info

- name: Affichage des informations sur les pods
  debug:
    msg: "Pod {{ item.metadata.name }} est dans l'état {{ item.status.phase }}"
  loop: "{{ pods_info.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"

- name: Attente de l'initialisation de Redis
  pause:
    seconds: "{{ redis_init_delay | default(30) }}"
  when: statefulset_status is succeeded

- name: Vérification de l'état des pods après initialisation
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ app_namespace }}"
    label_selectors:
      - "app={{ app_name }}"
  register: pods_info_after_init

- name: Affichage des informations sur les pods après initialisation
  debug:
    msg: "Pod {{ item.metadata.name }} est dans l'état {{ item.status.phase }} après initialisation"
  loop: "{{ pods_info_after_init.resources }}"
  loop_control:
    label: "{{ item.metadata.name }}"

- name: Vérification des logs des pods pour détecter des erreurs
  shell: "kubectl logs -n {{ app_namespace }} {{ item.metadata.name }} | grep -i error | tail -10"
  loop: "{{ pods_info_after_init.resources }}"
  register: pod_logs
  ignore_errors: yes
  changed_when: false
  loop_control:
    label: "{{ item.metadata.name }}"

- name: Affichage des erreurs dans les logs (si présentes)
  debug:
    msg: "Erreurs détectées dans les logs de {{ item.item.metadata.name }}: {{ item.stdout }}"
  loop: "{{ pod_logs.results }}"
  when: item.stdout != ""
  loop_control:
    label: "{{ item.item.metadata.name }}"

- name: Vérification de la disponibilité de Redis
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- redis-cli ping"
  register: redis_ping
  ignore_errors: yes
  retries: 5
  delay: 10
  until: redis_ping.rc == 0 and redis_ping.stdout == "PONG"
  changed_when: false

- name: Avertissement si Redis n'est pas disponible
  debug:
    msg: "AVERTISSEMENT: Redis n'est pas disponible. Vérifiez les logs pour plus d'informations."
  when: redis_ping is failed

- name: Vérification de la configuration Redis
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- redis-cli config get maxmemory"
  register: redis_config
  ignore_errors: yes
  changed_when: false
  when: redis_ping is succeeded

- name: Affichage de la configuration Redis
  debug:
    msg: "Configuration Redis - maxmemory: {{ redis_config.stdout_lines[1] if redis_config is succeeded and redis_config.stdout_lines | length > 1 else 'Non disponible' }}"
  when: redis_ping is succeeded

- name: Vérification du cluster Redis (si activé)
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- redis-cli cluster info"
  register: redis_cluster_info
  ignore_errors: yes
  changed_when: false
  when: redis_cluster_enabled | default(false) | bool and redis_ping is succeeded

- name: Affichage des informations sur le cluster Redis
  debug:
    msg: "Informations sur le cluster Redis: {{ redis_cluster_info.stdout_lines if redis_cluster_info is succeeded else 'Non disponible' }}"
  when: redis_cluster_enabled | default(false) | bool and redis_ping is succeeded