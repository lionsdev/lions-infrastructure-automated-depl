---
# Titre: Validation post-déploiement pour PostgreSQL
# Description: Valide le déploiement de PostgreSQL
# Auteur: Équipe LIONS Infrastructure
# Date: 2025-05-07
# Version: 1.0.0

- name: Attente que PostgreSQL soit prêt
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- pg_isready -U {{ postgres_admin_user }} -h localhost -p {{ postgres_default_port }}"
  register: pg_ready_check
  until: pg_ready_check.rc == 0
  retries: 30
  delay: 10
  ignore_errors: yes
  changed_when: false

- name: Vérification de l'état de santé de PostgreSQL
  debug:
    msg: "PostgreSQL {{ app_name }} est en bonne santé et prêt à recevoir des requêtes."
  when: pg_ready_check is succeeded

- name: Avertissement si PostgreSQL n'est pas en bonne santé
  debug:
    msg: "AVERTISSEMENT: PostgreSQL {{ app_name }} n'est pas en bonne santé. Vérifiez les logs pour plus d'informations."
  when: pg_ready_check is failed

- name: Récupération de l'URL d'accès au service
  set_fact:
    service_url: "{{ app_name }}.{{ app_namespace }}.svc.cluster.local:{{ postgres_default_port }}"

- name: Affichage de l'URL d'accès au service
  debug:
    msg: "PostgreSQL {{ app_name }} est accessible à l'adresse: {{ service_url }}"

- name: Vérification de la version de PostgreSQL
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- psql -U {{ postgres_admin_user }} -c 'SELECT version();'"
  register: pg_version_check
  ignore_errors: yes
  changed_when: false
  when: pg_ready_check is succeeded

- name: Affichage de la version de PostgreSQL
  debug:
    msg: "Version de PostgreSQL: {{ pg_version_check.stdout }}"
  when: pg_version_check is succeeded

- name: Vérification des bases de données
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- psql -U {{ postgres_admin_user }} -c '\\l'"
  register: pg_databases_check
  ignore_errors: yes
  changed_when: false
  when: pg_ready_check is succeeded

- name: Affichage des bases de données
  debug:
    msg: "Bases de données disponibles: {{ pg_databases_check.stdout }}"
  when: pg_databases_check is succeeded

- name: Vérification des métriques Prometheus
  uri:
    url: "http://{{ app_name }}.{{ app_namespace }}.svc.cluster.local:{{ postgres_prometheus_port }}{{ postgres_metrics_path }}"
    status_code: 200
    validate_certs: no
  register: metrics_check
  ignore_errors: yes
  when: postgres_prometheus_scrape | bool

- name: Affichage du résultat de la vérification des métriques
  debug:
    msg: "Les métriques Prometheus sont disponibles pour PostgreSQL {{ app_name }}."
  when: metrics_check is defined and metrics_check is succeeded

- name: Avertissement si les métriques ne sont pas disponibles
  debug:
    msg: "AVERTISSEMENT: Les métriques Prometheus ne sont pas disponibles pour PostgreSQL {{ app_name }}."
  when: metrics_check is defined and metrics_check is failed

- name: Vérification de la réplication (si HA activé)
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- psql -U {{ postgres_admin_user }} -c 'SELECT * FROM pg_stat_replication;'"
  register: replication_check
  ignore_errors: yes
  changed_when: false
  when: postgres_ha_enabled | bool and pods_info_after_init.resources | length > 1 and pg_ready_check is succeeded

- name: Affichage du statut de la réplication
  debug:
    msg: "Statut de la réplication PostgreSQL: {{ replication_check.stdout | default('Non disponible') }}"
  when: replication_check is defined and replication_check is succeeded and replication_check.stdout is defined

- name: Avertissement si la réplication n'est pas configurée correctement
  debug:
    msg: "AVERTISSEMENT: La réplication PostgreSQL n'est pas configurée correctement. Vérifiez les logs pour plus d'informations."
  when: postgres_ha_enabled | bool and pods_info_after_init.resources | length > 1 and (replication_check is failed or replication_check.stdout == '')

- name: Vérification des performances
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- psql -U {{ postgres_admin_user }} -c 'SELECT pg_stat_reset(); SELECT pg_sleep(5); SELECT * FROM pg_stat_database WHERE datname = ''postgres'';'"
  register: performance_check
  ignore_errors: yes
  changed_when: false
  when: pg_ready_check is succeeded

- name: Affichage des statistiques de performance
  debug:
    msg: "Statistiques de performance PostgreSQL: {{ performance_check.stdout }}"
  when: performance_check is defined and performance_check is succeeded

- name: Vérification de la configuration
  shell: "kubectl exec -n {{ app_namespace }} {{ pods_info_after_init.resources[0].metadata.name }} -- psql -U {{ postgres_admin_user }} -c 'SELECT name, setting FROM pg_settings WHERE name IN (''max_connections'', ''shared_buffers'', ''effective_cache_size'', ''work_mem'', ''maintenance_work_mem'');'"
  register: config_check
  ignore_errors: yes
  changed_when: false
  when: pg_ready_check is succeeded

- name: Affichage de la configuration
  debug:
    msg: "Configuration PostgreSQL: {{ config_check.stdout }}"
  when: config_check is defined and config_check is succeeded

- name: Enregistrement des informations de déploiement
  copy:
    content: |
      Application: {{ app_name }}
      Version: {{ app_version }}
      Environnement: {{ app_environment }}
      Namespace: {{ app_namespace }}
      Service URL: {{ service_url }}
      Date de déploiement: {{ ansible_date_time.iso8601 }}
      Statut: {{ 'Succès' if pg_ready_check is succeeded else 'Avertissement' }}

      Ressources:
        Replicas: {{ postgres_replicas[app_environment] }}
        CPU Requests: {{ postgres_resources[app_environment].requests.cpu }}
        Memory Requests: {{ postgres_resources[app_environment].requests.memory }}
        CPU Limits: {{ postgres_resources[app_environment].limits.cpu }}
        Memory Limits: {{ postgres_resources[app_environment].limits.memory }}

      Monitoring:
        Prometheus: {{ 'Activé' if postgres_prometheus_scrape | bool else 'Désactivé' }}
        Métriques: {{ 'Disponibles' if metrics_check is defined and metrics_check is succeeded else 'Non disponibles' }}

      Haute disponibilité:
        Activée: {{ 'Oui' if postgres_ha_enabled | bool else 'Non' }}
        Réplication: {{ 'Fonctionnelle' if replication_check is defined and replication_check is succeeded else 'Non configurée ou non fonctionnelle' if postgres_ha_enabled | bool else 'N/A' }}

      Configuration:
        Max Connections: {{ postgres_max_connections }}
        Shared Buffers: {{ postgres_shared_buffers }}
        Effective Cache Size: {{ postgres_effective_cache_size }}
        Work Mem: {{ postgres_work_mem }}

      Notes:
      - Vérifiez les logs de PostgreSQL pour plus d'informations.
      - Pour les problèmes, contactez l'équipe d'infrastructure.
    dest: "/var/log/lions/deployments/{{ app_name }}-{{ app_environment }}-{{ ansible_date_time.date }}.log"
    mode: '0644'
  ignore_errors: yes

- name: Nettoyage des fichiers temporaires
  file:
    path: "{{ temp_dir.path }}"
    state: absent
  changed_when: false
  ignore_errors: yes
