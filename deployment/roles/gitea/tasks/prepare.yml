---
# Titre: Préparation des ressources pour Gitea
# Description: Prépare les ressources nécessaires pour déployer Gitea
# Auteur: Équipe LIONS Infrastructure
# Date: 2025-05-07
# Version: 1.0.0

- name: Création du répertoire temporaire pour les templates
  tempfile:
    state: directory
    suffix: gitea-deploy
  register: temp_dir
  changed_when: false

- name: Génération des fichiers de configuration Kubernetes
  template:
    src: "{{ item.src }}"
    dest: "{{ temp_dir.path }}/{{ item.dest }}"
  loop:
    - { src: "deployment.yml.j2", dest: "deployment.yml" }
    - { src: "service.yml.j2", dest: "service.yml" }
    - { src: "ingress.yml.j2", dest: "ingress.yml" }
    - { src: "configmap.yml.j2", dest: "configmap.yml" }
    - { src: "serviceaccount.yml.j2", dest: "serviceaccount.yml" }
    - { src: "servicemonitor.yml.j2", dest: "servicemonitor.yml" }
    - { src: "persistentvolumeclaim.yml.j2", dest: "persistentvolumeclaim.yml" }
  register: templates_generated

- name: Vérification des fichiers générés
  stat:
    path: "{{ temp_dir.path }}/{{ item }}"
  loop:
    - "deployment.yml"
    - "service.yml"
    - "ingress.yml"
    - "configmap.yml"
    - "serviceaccount.yml"
    - "servicemonitor.yml"
    - "persistentvolumeclaim.yml"
  register: files_check
  failed_when: not item.stat.exists

- name: Création du compte de service
  k8s:
    state: present
    src: "{{ temp_dir.path }}/serviceaccount.yml"
  register: serviceaccount_result

- name: Création du ConfigMap pour la configuration de Gitea
  k8s:
    state: present
    src: "{{ temp_dir.path }}/configmap.yml"
  register: configmap_result

- name: Création du PersistentVolumeClaim pour Gitea
  k8s:
    state: present
    src: "{{ temp_dir.path }}/persistentvolumeclaim.yml"
  register: pvc_result
  when: gitea_persistent_storage | bool

- name: Vérification de l'existence des secrets pour l'administrateur Gitea
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ app_namespace }}"
    name: "{{ gitea_admin_password_secret }}"
  register: admin_secret_info
  ignore_errors: yes

- name: Avertissement si le secret administrateur n'existe pas
  debug:
    msg: "AVERTISSEMENT: Le secret pour l'administrateur Gitea n'existe pas. Utilisez kubectl pour créer le secret {{ gitea_admin_password_secret }}."
  when: admin_secret_info is failed or admin_secret_info.resources | length == 0

- name: Vérification de l'existence des secrets pour la base de données
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ app_namespace }}"
    name: "{{ gitea_database_password_secret }}"
  register: db_secret_info
  ignore_errors: yes

- name: Avertissement si le secret de base de données n'existe pas
  debug:
    msg: "AVERTISSEMENT: Le secret pour la base de données Gitea n'existe pas. Utilisez kubectl pour créer le secret {{ gitea_database_password_secret }}."
  when: db_secret_info is failed or db_secret_info.resources | length == 0

- name: Création d'un secret SSH pour Gitea si nécessaire
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ app_name }}-ssh-keys"
        namespace: "{{ app_namespace }}"
        labels:
          app: "{{ app_name }}"
          environment: "{{ app_environment }}"
      type: Opaque
      data:
        ssh_host_rsa_key: ""
        ssh_host_rsa_key.pub: ""
        ssh_host_ecdsa_key: ""
        ssh_host_ecdsa_key.pub: ""
        ssh_host_ed25519_key: ""
        ssh_host_ed25519_key.pub: ""
  register: ssh_secret_result
  when: not (db_secret_info is succeeded and db_secret_info.resources | length > 0)
  ignore_errors: yes

- name: Avertissement pour la génération des clés SSH
  debug:
    msg: "AVERTISSEMENT: Les clés SSH pour Gitea ont été créées avec des valeurs vides. Vous devriez générer des clés SSH réelles et les stocker dans le secret {{ app_name }}-ssh-keys."
  when: ssh_secret_result is succeeded